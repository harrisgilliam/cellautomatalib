//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Assembly Writer Source Fragment
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void X86ATTInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
  static const unsigned OpInfo[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    1U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    11U,	// BUNDLE
    18U,	// AAA
    67108886U,	// AAD8i8
    67108891U,	// AAM8i8
    32U,	// AAS
    36U,	// ABS_F
    0U,	// ABS_Fp32
    0U,	// ABS_Fp64
    0U,	// ABS_Fp80
    41U,	// ACQUIRE_MOV16rm
    41U,	// ACQUIRE_MOV32rm
    41U,	// ACQUIRE_MOV64rm
    41U,	// ACQUIRE_MOV8rm
    68157502U,	// ADC16i16
    136314942U,	// ADC16mi
    136314942U,	// ADC16mi8
    136314942U,	// ADC16mr
    204472382U,	// ADC16ri
    204472382U,	// ADC16ri8
    271581246U,	// ADC16rm
    204472382U,	// ADC16rr
    205520958U,	// ADC16rr_REV
    72351812U,	// ADC32i32
    140509252U,	// ADC32mi
    140509252U,	// ADC32mi8
    140509252U,	// ADC32mr
    204472388U,	// ADC32ri
    204472388U,	// ADC32ri8
    338690116U,	// ADC32rm
    204472388U,	// ADC32rr
    205520964U,	// ADC32rr_REV
    74448970U,	// ADC64i32
    142606410U,	// ADC64mi32
    142606410U,	// ADC64mi8
    142606410U,	// ADC64mr
    204472394U,	// ADC64ri32
    204472394U,	// ADC64ri8
    405798986U,	// ADC64rm
    204472394U,	// ADC64rr
    205520970U,	// ADC64rr_REV
    76546128U,	// ADC8i8
    144703568U,	// ADC8mi
    144703568U,	// ADC8mr
    204472400U,	// ADC8ri
    469762128U,	// ADC8rm
    204472400U,	// ADC8rr
    205520976U,	// ADC8rr_REV
    68157526U,	// ADD16i16
    136314966U,	// ADD16mi
    136314966U,	// ADD16mi8
    136314966U,	// ADD16mr
    204472406U,	// ADD16ri
    204472406U,	// ADD16ri8
    0U,	// ADD16ri8_DB
    0U,	// ADD16ri_DB
    271581270U,	// ADD16rm
    204472406U,	// ADD16rr
    0U,	// ADD16rr_DB
    205520982U,	// ADD16rr_REV
    72351836U,	// ADD32i32
    140509276U,	// ADD32mi
    140509276U,	// ADD32mi8
    140509276U,	// ADD32mr
    204472412U,	// ADD32ri
    204472412U,	// ADD32ri8
    0U,	// ADD32ri8_DB
    0U,	// ADD32ri_DB
    338690140U,	// ADD32rm
    204472412U,	// ADD32rr
    0U,	// ADD32rr_DB
    205520988U,	// ADD32rr_REV
    74448994U,	// ADD64i32
    142606434U,	// ADD64mi32
    142606434U,	// ADD64mi8
    142606434U,	// ADD64mr
    204472418U,	// ADD64ri32
    0U,	// ADD64ri32_DB
    204472418U,	// ADD64ri8
    0U,	// ADD64ri8_DB
    405799010U,	// ADD64rm
    204472418U,	// ADD64rr
    0U,	// ADD64rr_DB
    205520994U,	// ADD64rr_REV
    76546152U,	// ADD8i8
    144703592U,	// ADD8mi
    144703592U,	// ADD8mr
    204472424U,	// ADD8ri
    469762152U,	// ADD8rm
    204472424U,	// ADD8rr
    205521000U,	// ADD8rr_REV
    541065326U,	// ADDPDrm
    205521006U,	// ADDPDrr
    541065333U,	// ADDPSrm
    205521013U,	// ADDPSrr
    608174204U,	// ADDSDrm
    608174204U,	// ADDSDrm_Int
    205521020U,	// ADDSDrr
    205521020U,	// ADDSDrr_Int
    675283075U,	// ADDSSrm
    675283075U,	// ADDSSrm_Int
    205521027U,	// ADDSSrr
    205521027U,	// ADDSSrr_Int
    541065354U,	// ADDSUBPDrm
    205521034U,	// ADDSUBPDrr
    541065364U,	// ADDSUBPSrm
    205521044U,	// ADDSUBPSrr
    738197662U,	// ADD_F32m
    805306533U,	// ADD_F64m
    872415404U,	// ADD_FI16m
    939524276U,	// ADD_FI32m
    67109052U,	// ADD_FPrST0
    67109059U,	// ADD_FST0r
    0U,	// ADD_Fp32
    0U,	// ADD_Fp32m
    0U,	// ADD_Fp64
    0U,	// ADD_Fp64m
    0U,	// ADD_Fp64m32
    0U,	// ADD_Fp80
    0U,	// ADD_Fp80m32
    0U,	// ADD_Fp80m64
    0U,	// ADD_FpI16m32
    0U,	// ADD_FpI16m64
    0U,	// ADD_FpI16m80
    0U,	// ADD_FpI32m32
    0U,	// ADD_FpI32m64
    0U,	// ADD_FpI32m80
    67109065U,	// ADD_FrST0
    215U,	// ADJCALLSTACKDOWN32
    215U,	// ADJCALLSTACKDOWN64
    233U,	// ADJCALLSTACKUP32
    233U,	// ADJCALLSTACKUP64
    1010827513U,	// AESDECLASTrm
    205521145U,	// AESDECLASTrr
    1010827525U,	// AESDECrm
    205521157U,	// AESDECrr
    1010827533U,	// AESENCLASTrm
    205521165U,	// AESENCLASTrr
    1010827545U,	// AESENCrm
    205521177U,	// AESENCrr
    1073742113U,	// AESIMCrm
    1145045281U,	// AESIMCrr
    1219494185U,	// AESKEYGENASSIST128rm
    204505385U,	// AESKEYGENASSIST128rr
    68157754U,	// AND16i16
    136315194U,	// AND16mi
    136315194U,	// AND16mi8
    136315194U,	// AND16mr
    204472634U,	// AND16ri
    204472634U,	// AND16ri8
    271581498U,	// AND16rm
    204472634U,	// AND16rr
    205521210U,	// AND16rr_REV
    72352064U,	// AND32i32
    140509504U,	// AND32mi
    140509504U,	// AND32mi8
    140509504U,	// AND32mr
    204472640U,	// AND32ri
    204472640U,	// AND32ri8
    338690368U,	// AND32rm
    204472640U,	// AND32rr
    205521216U,	// AND32rr_REV
    74449222U,	// AND64i32
    142606662U,	// AND64mi32
    142606662U,	// AND64mi8
    142606662U,	// AND64mr
    204472646U,	// AND64ri32
    204472646U,	// AND64ri8
    405799238U,	// AND64rm
    204472646U,	// AND64rr
    205521222U,	// AND64rr_REV
    76546380U,	// AND8i8
    144703820U,	// AND8mi
    144703820U,	// AND8mr
    204472652U,	// AND8ri
    469762380U,	// AND8rm
    204472652U,	// AND8rr
    205521228U,	// AND8rr_REV
    338723154U,	// ANDN32rm
    204505426U,	// ANDN32rr
    405832025U,	// ANDN64rm
    204505433U,	// ANDN64rr
    541065568U,	// ANDNPDrm
    205521248U,	// ANDNPDrr
    541065576U,	// ANDNPSrm
    205521256U,	// ANDNPSrr
    541065584U,	// ANDPDrm
    205521264U,	// ANDPDrr
    541065591U,	// ANDPSrm
    205521271U,	// ANDPSrr
    79757694U,	// ARPL16mr
    79790462U,	// ARPL16rr
    388U,	// ATOMADD6432
    409U,	// ATOMAND16
    428U,	// ATOMAND32
    447U,	// ATOMAND64
    466U,	// ATOMAND6432
    487U,	// ATOMAND8
    505U,	// ATOMMAX16
    524U,	// ATOMMAX32
    543U,	// ATOMMAX64
    562U,	// ATOMMIN16
    581U,	// ATOMMIN32
    600U,	// ATOMMIN64
    619U,	// ATOMNAND16
    639U,	// ATOMNAND32
    659U,	// ATOMNAND64
    679U,	// ATOMNAND6432
    701U,	// ATOMNAND8
    720U,	// ATOMOR16
    738U,	// ATOMOR32
    756U,	// ATOMOR64
    774U,	// ATOMOR6432
    794U,	// ATOMOR8
    811U,	// ATOMSUB6432
    832U,	// ATOMSWAP6432
    854U,	// ATOMUMAX16
    874U,	// ATOMUMAX32
    894U,	// ATOMUMAX64
    914U,	// ATOMUMIN16
    934U,	// ATOMUMIN32
    954U,	// ATOMUMIN64
    974U,	// ATOMXOR16
    993U,	// ATOMXOR32
    1012U,	// ATOMXOR64
    1031U,	// ATOMXOR6432
    1052U,	// ATOMXOR8
    0U,	// AVX2_SET0
    0U,	// AVX2_SETALLONES
    0U,	// AVX_SET0PDY
    0U,	// AVX_SET0PSY
    0U,	// AVX_SETALLONES
    1221592110U,	// BEXTR32rm
    204506158U,	// BEXTR32rr
    1222640694U,	// BEXTR64rm
    204506166U,	// BEXTR64rr
    1290929214U,	// BLENDPDrmi
    1346372670U,	// BLENDPDrri
    1290929223U,	// BLENDPSrmi
    1346372679U,	// BLENDPSrri
    1010828368U,	// BLENDVPDrm0
    205522000U,	// BLENDVPDrr0
    1010828378U,	// BLENDVPSrm0
    205522010U,	// BLENDVPSrr0
    1409287268U,	// BLSI32rm
    1145046116U,	// BLSI32rr
    1476396139U,	// BLSI64rm
    1145046123U,	// BLSI64rr
    1409287282U,	// BLSMSK32rm
    1145046130U,	// BLSMSK32rr
    1476396155U,	// BLSMSK64rm
    1145046139U,	// BLSMSK64rr
    1409287300U,	// BLSR32rm
    1145046148U,	// BLSR32rr
    1476396171U,	// BLSR64rm
    1145046155U,	// BLSR64rr
    1543505042U,	// BOUNDS16rm
    1409287314U,	// BOUNDS32rm
    1543505049U,	// BSF16rm
    1145046169U,	// BSF16rr
    1409287327U,	// BSF32rm
    1145046175U,	// BSF32rr
    1476396197U,	// BSF64rm
    1145046181U,	// BSF64rr
    1543505067U,	// BSR16rm
    1145046187U,	// BSR16rr
    1409287345U,	// BSR32rm
    1145046193U,	// BSR32rr
    1476396215U,	// BSR64rm
    1145046199U,	// BSR64rr
    67110077U,	// BSWAP32r
    67110085U,	// BSWAP64r
    136316109U,	// BT16mi8
    136316109U,	// BT16mr
    1145046221U,	// BT16ri8
    1145046221U,	// BT16rr
    140510418U,	// BT32mi8
    140510418U,	// BT32mr
    1145046226U,	// BT32ri8
    1145046226U,	// BT32rr
    142607575U,	// BT64mi8
    142607575U,	// BT64mr
    1145046231U,	// BT64ri8
    1145046231U,	// BT64rr
    136316124U,	// BTC16mi8
    136316124U,	// BTC16mr
    1145046236U,	// BTC16ri8
    1145046236U,	// BTC16rr
    140510434U,	// BTC32mi8
    140510434U,	// BTC32mr
    1145046242U,	// BTC32ri8
    1145046242U,	// BTC32rr
    142607592U,	// BTC64mi8
    142607592U,	// BTC64mr
    1145046248U,	// BTC64ri8
    1145046248U,	// BTC64rr
    136316142U,	// BTR16mi8
    136316142U,	// BTR16mr
    1145046254U,	// BTR16ri8
    1145046254U,	// BTR16rr
    140510452U,	// BTR32mi8
    140510452U,	// BTR32mr
    1145046260U,	// BTR32ri8
    1145046260U,	// BTR32rr
    142607610U,	// BTR64mi8
    142607610U,	// BTR64mr
    1145046266U,	// BTR64ri8
    1145046266U,	// BTR64rr
    136316160U,	// BTS16mi8
    136316160U,	// BTS16mr
    1145046272U,	// BTS16ri8
    1145046272U,	// BTS16rr
    140510470U,	// BTS32mi8
    140510470U,	// BTS32mr
    1145046278U,	// BTS32ri8
    1145046278U,	// BTS32rr
    142607628U,	// BTS64mi8
    142607628U,	// BTS64mr
    1145046284U,	// BTS64ri8
    1145046284U,	// BTS64rr
    1221592338U,	// BZHI32rm
    204506386U,	// BZHI32rr
    1222640921U,	// BZHI64rm
    204506393U,	// BZHI64rr
    939525408U,	// CALL32m
    67110176U,	// CALL32r
    1610614056U,	// CALL64m
    1677722928U,	// CALL64pcrel32
    67110184U,	// CALL64r
    1677722935U,	// CALLpcrel16
    1677722942U,	// CALLpcrel32
    1349U,	// CBW
    1354U,	// CDQ
    1359U,	// CDQE
    1364U,	// CHS_F
    0U,	// CHS_Fp32
    0U,	// CHS_Fp64
    0U,	// CHS_Fp80
    1369U,	// CLC
    1373U,	// CLD
    1744831841U,	// CLFLUSH
    1386U,	// CLI
    1390U,	// CLTS
    1395U,	// CMC
    272631159U,	// CMOVA16rm
    205522295U,	// CMOVA16rr
    339740031U,	// CMOVA32rm
    205522303U,	// CMOVA32rr
    406848903U,	// CMOVA64rm
    205522311U,	// CMOVA64rr
    272631183U,	// CMOVAE16rm
    205522319U,	// CMOVAE16rr
    339740056U,	// CMOVAE32rm
    205522328U,	// CMOVAE32rr
    406848929U,	// CMOVAE64rm
    205522337U,	// CMOVAE64rr
    272631210U,	// CMOVB16rm
    205522346U,	// CMOVB16rr
    339740082U,	// CMOVB32rm
    205522354U,	// CMOVB32rr
    406848954U,	// CMOVB64rm
    205522362U,	// CMOVB64rr
    272631234U,	// CMOVBE16rm
    205522370U,	// CMOVBE16rr
    339740107U,	// CMOVBE32rm
    205522379U,	// CMOVBE32rr
    406848980U,	// CMOVBE64rm
    205522388U,	// CMOVBE64rr
    83887581U,	// CMOVBE_F
    0U,	// CMOVBE_Fp32
    0U,	// CMOVBE_Fp64
    0U,	// CMOVBE_Fp80
    83887590U,	// CMOVB_F
    0U,	// CMOVB_Fp32
    0U,	// CMOVB_Fp64
    0U,	// CMOVB_Fp80
    272631278U,	// CMOVE16rm
    205522414U,	// CMOVE16rr
    339740150U,	// CMOVE32rm
    205522422U,	// CMOVE32rr
    406849022U,	// CMOVE64rm
    205522430U,	// CMOVE64rr
    83887622U,	// CMOVE_F
    0U,	// CMOVE_Fp32
    0U,	// CMOVE_Fp64
    0U,	// CMOVE_Fp80
    272631310U,	// CMOVG16rm
    205522446U,	// CMOVG16rr
    339740182U,	// CMOVG32rm
    205522454U,	// CMOVG32rr
    406849054U,	// CMOVG64rm
    205522462U,	// CMOVG64rr
    272631334U,	// CMOVGE16rm
    205522470U,	// CMOVGE16rr
    339740207U,	// CMOVGE32rm
    205522479U,	// CMOVGE32rr
    406849080U,	// CMOVGE64rm
    205522488U,	// CMOVGE64rr
    272631361U,	// CMOVL16rm
    205522497U,	// CMOVL16rr
    339740233U,	// CMOVL32rm
    205522505U,	// CMOVL32rr
    406849105U,	// CMOVL64rm
    205522513U,	// CMOVL64rr
    272631385U,	// CMOVLE16rm
    205522521U,	// CMOVLE16rr
    339740258U,	// CMOVLE32rm
    205522530U,	// CMOVLE32rr
    406849131U,	// CMOVLE64rm
    205522539U,	// CMOVLE64rr
    83887732U,	// CMOVNBE_F
    0U,	// CMOVNBE_Fp32
    0U,	// CMOVNBE_Fp64
    0U,	// CMOVNBE_Fp80
    83887742U,	// CMOVNB_F
    0U,	// CMOVNB_Fp32
    0U,	// CMOVNB_Fp64
    0U,	// CMOVNB_Fp80
    272631431U,	// CMOVNE16rm
    205522567U,	// CMOVNE16rr
    339740304U,	// CMOVNE32rm
    205522576U,	// CMOVNE32rr
    406849177U,	// CMOVNE64rm
    205522585U,	// CMOVNE64rr
    83887778U,	// CMOVNE_F
    0U,	// CMOVNE_Fp32
    0U,	// CMOVNE_Fp64
    0U,	// CMOVNE_Fp80
    272631467U,	// CMOVNO16rm
    205522603U,	// CMOVNO16rr
    339740340U,	// CMOVNO32rm
    205522612U,	// CMOVNO32rr
    406849213U,	// CMOVNO64rm
    205522621U,	// CMOVNO64rr
    272631494U,	// CMOVNP16rm
    205522630U,	// CMOVNP16rr
    339740367U,	// CMOVNP32rm
    205522639U,	// CMOVNP32rr
    406849240U,	// CMOVNP64rm
    205522648U,	// CMOVNP64rr
    83887841U,	// CMOVNP_F
    0U,	// CMOVNP_Fp32
    0U,	// CMOVNP_Fp64
    0U,	// CMOVNP_Fp80
    272631530U,	// CMOVNS16rm
    205522666U,	// CMOVNS16rr
    339740403U,	// CMOVNS32rm
    205522675U,	// CMOVNS32rr
    406849276U,	// CMOVNS64rm
    205522684U,	// CMOVNS64rr
    272631557U,	// CMOVO16rm
    205522693U,	// CMOVO16rr
    339740429U,	// CMOVO32rm
    205522701U,	// CMOVO32rr
    406849301U,	// CMOVO64rm
    205522709U,	// CMOVO64rr
    272631581U,	// CMOVP16rm
    205522717U,	// CMOVP16rr
    339740453U,	// CMOVP32rm
    205522725U,	// CMOVP32rr
    406849325U,	// CMOVP64rm
    205522733U,	// CMOVP64rr
    83887925U,	// CMOVP_F
    0U,	// CMOVP_Fp32
    0U,	// CMOVP_Fp64
    0U,	// CMOVP_Fp80
    272631614U,	// CMOVS16rm
    205522750U,	// CMOVS16rr
    339740486U,	// CMOVS32rm
    205522758U,	// CMOVS32rr
    406849358U,	// CMOVS64rm
    205522766U,	// CMOVS64rr
    1878U,	// CMOV_FR32
    1897U,	// CMOV_FR64
    1916U,	// CMOV_GR16
    1936U,	// CMOV_GR32
    1956U,	// CMOV_GR8
    1974U,	// CMOV_RFP32
    1994U,	// CMOV_RFP64
    2014U,	// CMOV_RFP80
    2034U,	// CMOV_V2F64
    2054U,	// CMOV_V2I64
    2074U,	// CMOV_V4F32
    2094U,	// CMOV_V4F64
    2114U,	// CMOV_V4I64
    2134U,	// CMOV_V8F32
    68159594U,	// CMP16i16
    136317034U,	// CMP16mi
    136317034U,	// CMP16mi8
    136317034U,	// CMP16mr
    1145047146U,	// CMP16ri
    1145047146U,	// CMP16ri8
    1543506026U,	// CMP16rm
    1145047146U,	// CMP16rr
    1145047146U,	// CMP16rr_REV
    72353904U,	// CMP32i32
    140511344U,	// CMP32mi
    140511344U,	// CMP32mi8
    140511344U,	// CMP32mr
    1145047152U,	// CMP32ri
    1145047152U,	// CMP32ri8
    1409288304U,	// CMP32rm
    1145047152U,	// CMP32rr
    1145047152U,	// CMP32rr_REV
    74451062U,	// CMP64i32
    142608502U,	// CMP64mi32
    142608502U,	// CMP64mi8
    142608502U,	// CMP64mr
    1145047158U,	// CMP64ri32
    1145047158U,	// CMP64ri8
    1476397174U,	// CMP64rm
    1145047158U,	// CMP64rr
    1145047158U,	// CMP64rr_REV
    76548220U,	// CMP8i8
    144705660U,	// CMP8mi
    144705660U,	// CMP8mr
    1145047164U,	// CMP8ri
    1811941500U,	// CMP8rm
    1145047164U,	// CMP8rr
    1145047164U,	// CMP8rr_REV
    1897040002U,	// CMPPDrmi
    1294076038U,	// CMPPDrmi_alt
    1964181634U,	// CMPPDrri
    1346373766U,	// CMPPDrri_alt
    1899137154U,	// CMPPSrmi
    1294076045U,	// CMPPSrmi_alt
    1966278786U,	// CMPPSrri
    1346373773U,	// CMPPSrri_alt
    2196U,	// CMPS16
    2202U,	// CMPS32
    2208U,	// CMPS64
    2214U,	// CMPS8
    1900251266U,	// CMPSDrm
    1297221804U,	// CMPSDrm_alt
    1967327362U,	// CMPSDrr
    1346373804U,	// CMPSDrr_alt
    1902381186U,	// CMPSSrm
    1299318963U,	// CMPSSrm_alt
    1969424514U,	// CMPSSrr
    1346373811U,	// CMPSSrr_alt
    2013268154U,	// CMPXCHG16B
    136317126U,	// CMPXCHG16rm
    1145047238U,	// CMPXCHG16rr
    140511440U,	// CMPXCHG32rm
    1145047248U,	// CMPXCHG32rr
    142608602U,	// CMPXCHG64rm
    1145047258U,	// CMPXCHG64rr
    1610615012U,	// CMPXCHG8B
    144705775U,	// CMPXCHG8rm
    1145047279U,	// CMPXCHG8rr
    2080377081U,	// COMISDrm
    1145047289U,	// COMISDrr
    2080377089U,	// COMISSrm
    1145047297U,	// COMISSrr
    67111177U,	// COMP_FST0r
    67111184U,	// COM_FIPr
    67111192U,	// COM_FIr
    67111199U,	// COM_FST0r
    2341U,	// COS_F
    0U,	// COS_Fp32
    0U,	// COS_Fp64
    0U,	// COS_Fp80
    2346U,	// CPUID
    2352U,	// CQO
    271583541U,	// CRC32r32m16
    338692414U,	// CRC32r32m32
    469764423U,	// CRC32r32m8
    204474677U,	// CRC32r32r16
    204474686U,	// CRC32r32r32
    204474695U,	// CRC32r32r8
    405801296U,	// CRC32r64m64
    469764423U,	// CRC32r64m8
    204474704U,	// CRC32r64r64
    204474695U,	// CRC32r64r8
    2393U,	// CS_PREFIX
    2080377180U,	// CVTDQ2PDrm
    1145047388U,	// CVTDQ2PDrr
    1073744230U,	// CVTDQ2PSrm
    1145047398U,	// CVTDQ2PSrr
    2080377200U,	// CVTPD2DQrm
    1145047408U,	// CVTPD2DQrr
    2080377210U,	// CVTPD2PSrm
    1145047418U,	// CVTPD2PSrr
    2080377220U,	// CVTPS2DQrm
    1145047428U,	// CVTPS2DQrr
    2147486094U,	// CVTPS2PDrm
    1145047438U,	// CVTPS2PDrr
    2080377240U,	// CVTSD2SI64rm
    1145047448U,	// CVTSD2SI64rr
    2080377251U,	// CVTSD2SIrm
    1145047459U,	// CVTSD2SIrr
    2147486126U,	// CVTSD2SSrm
    1145047470U,	// CVTSD2SSrr
    1476397496U,	// CVTSI2SD64rm
    1145047480U,	// CVTSI2SD64rr
    1409288643U,	// CVTSI2SDrm
    1145047491U,	// CVTSI2SDrr
    1476397517U,	// CVTSI2SS64rm
    1145047501U,	// CVTSI2SS64rr
    1409288664U,	// CVTSI2SSrm
    1145047512U,	// CVTSI2SSrr
    2214595042U,	// CVTSS2SDrm
    1145047522U,	// CVTSS2SDrr
    2214595052U,	// CVTSS2SI64rm
    1145047532U,	// CVTSS2SI64rr
    2214595063U,	// CVTSS2SIrm
    1145047543U,	// CVTSS2SIrr
    2080377346U,	// CVTTPD2DQrm
    1145047554U,	// CVTTPD2DQrr
    2080377357U,	// CVTTPS2DQrm
    1145047565U,	// CVTTPS2DQrr
    2147486232U,	// CVTTSD2SI64rm
    1145047576U,	// CVTTSD2SI64rr
    2147486244U,	// CVTTSD2SIrm
    1145047588U,	// CVTTSD2SIrr
    2214595119U,	// CVTTSS2SI64rm
    1145047599U,	// CVTTSS2SI64rr
    2214595131U,	// CVTTSS2SIrm
    1145047611U,	// CVTTSS2SIrr
    2630U,	// CWD
    2635U,	// CWDE
    2640U,	// DAA
    2644U,	// DAS
    2648U,	// DATA16_PREFIX
    872417887U,	// DEC16m
    67111519U,	// DEC16r
    939526757U,	// DEC32m
    67111525U,	// DEC32r
    872417887U,	// DEC64_16m
    67111519U,	// DEC64_16r
    939526757U,	// DEC64_32m
    67111525U,	// DEC64_32r
    1610615403U,	// DEC64m
    67111531U,	// DEC64r
    1744833137U,	// DEC8m
    67111537U,	// DEC8r
    872417911U,	// DIV16m
    67111543U,	// DIV16r
    939526781U,	// DIV32m
    67111549U,	// DIV32r
    1610615427U,	// DIV64m
    67111555U,	// DIV64r
    1744833161U,	// DIV8m
    67111561U,	// DIV8r
    541067919U,	// DIVPDrm
    205523599U,	// DIVPDrr
    541067926U,	// DIVPSrm
    205523606U,	// DIVPSrr
    738200221U,	// DIVR_F32m
    805309093U,	// DIVR_F64m
    872417965U,	// DIVR_FI16m
    939526838U,	// DIVR_FI32m
    67111615U,	// DIVR_FPrST0
    67111622U,	// DIVR_FST0r
    0U,	// DIVR_Fp32m
    0U,	// DIVR_Fp64m
    0U,	// DIVR_Fp64m32
    0U,	// DIVR_Fp80m32
    0U,	// DIVR_Fp80m64
    0U,	// DIVR_FpI16m32
    0U,	// DIVR_FpI16m64
    0U,	// DIVR_FpI16m80
    0U,	// DIVR_FpI32m32
    0U,	// DIVR_FpI32m64
    0U,	// DIVR_FpI32m80
    67111629U,	// DIVR_FrST0
    608176859U,	// DIVSDrm
    608176859U,	// DIVSDrm_Int
    205523675U,	// DIVSDrr
    205523675U,	// DIVSDrr_Int
    675285730U,	// DIVSSrm
    675285730U,	// DIVSSrm_Int
    205523682U,	// DIVSSrr
    205523682U,	// DIVSSrr_Int
    738200297U,	// DIV_F32m
    805309168U,	// DIV_F64m
    872418039U,	// DIV_FI16m
    939526911U,	// DIV_FI32m
    67111687U,	// DIV_FPrST0
    67111695U,	// DIV_FST0r
    0U,	// DIV_Fp32
    0U,	// DIV_Fp32m
    0U,	// DIV_Fp64
    0U,	// DIV_Fp64m
    0U,	// DIV_Fp64m32
    0U,	// DIV_Fp80
    0U,	// DIV_Fp80m32
    0U,	// DIV_Fp80m64
    0U,	// DIV_FpI16m32
    0U,	// DIV_FpI16m64
    0U,	// DIV_FpI16m80
    0U,	// DIV_FpI32m32
    0U,	// DIV_FpI32m64
    0U,	// DIV_FpI32m80
    67111701U,	// DIV_FrST0
    1290930980U,	// DPPDrmi
    1346374436U,	// DPPDrri
    1290930986U,	// DPPSrmi
    1346374442U,	// DPPSrri
    2864U,	// DS_PREFIX
    67111731U,	// EH_RETURN
    67111731U,	// EH_RETURN64
    79792970U,	// ENTER
    2897U,	// ES_PREFIX
    1233423188U,	// EXTRACTPSmr
    204507988U,	// EXTRACTPSrr
    2911U,	// F2XM1
    1145047909U,	// FARCALL16i
    2281704301U,	// FARCALL16m
    1145047926U,	// FARCALL32i
    2281704318U,	// FARCALL32m
    2281704327U,	// FARCALL64
    1145047952U,	// FARJMP16i
    2281704343U,	// FARJMP16m
    1145047967U,	// FARJMP32i
    2281704358U,	// FARJMP32m
    2281704366U,	// FARJMP64
    738200502U,	// FBLDm
    738200508U,	// FBSTPm
    738200515U,	// FCOM32m
    805309386U,	// FCOM64m
    738200529U,	// FCOMP32m
    805309401U,	// FCOMP64m
    3041U,	// FCOMPP
    3048U,	// FDECSTP
    3056U,	// FEMMS
    67111926U,	// FFREE
    872418301U,	// FICOM16m
    939527173U,	// FICOM32m
    872418317U,	// FICOMP16m
    939527190U,	// FICOMP32m
    3103U,	// FINCSTP
    872418343U,	// FLDCW16m
    738200622U,	// FLDENVm
    3126U,	// FLDL2E
    3133U,	// FLDL2T
    3140U,	// FLDLG2
    3147U,	// FLDLN2
    3154U,	// FLDPI
    3160U,	// FNCLEX
    3167U,	// FNINIT
    3174U,	// FNOP
    872418411U,	// FNSTCW16m
    3187U,	// FNSTSW8r
    738200702U,	// FNSTSWm
    0U,	// FP32_TO_INT16_IN_MEM
    0U,	// FP32_TO_INT32_IN_MEM
    0U,	// FP32_TO_INT64_IN_MEM
    0U,	// FP64_TO_INT16_IN_MEM
    0U,	// FP64_TO_INT32_IN_MEM
    0U,	// FP64_TO_INT64_IN_MEM
    0U,	// FP80_TO_INT16_IN_MEM
    0U,	// FP80_TO_INT32_IN_MEM
    0U,	// FP80_TO_INT64_IN_MEM
    3206U,	// FPATAN
    3213U,	// FPREM
    3219U,	// FPREM1
    3226U,	// FPTAN
    3232U,	// FRNDINT
    738200744U,	// FRSTORm
    738200752U,	// FSAVEm
    3256U,	// FSCALE
    3263U,	// FSINCOS
    738200775U,	// FSTENVm
    3280U,	// FS_PREFIX
    3283U,	// FXAM
    2281704664U,	// FXRSTOR
    2281704673U,	// FXRSTOR64
    2281704683U,	// FXSAVE
    2281704691U,	// FXSAVE64
    3324U,	// FXTRACT
    3332U,	// FYL2X
    3338U,	// FYL2XP1
    0U,	// FpPOP_RETVAL
    541065568U,	// FsANDNPDrm
    205521248U,	// FsANDNPDrr
    541065576U,	// FsANDNPSrm
    205521256U,	// FsANDNPSrr
    541065584U,	// FsANDPDrm
    205521264U,	// FsANDPDrr
    541065591U,	// FsANDPSrm
    205521271U,	// FsANDPSrr
    0U,	// FsFLD0SD
    0U,	// FsFLD0SS
    2080378130U,	// FsMOVAPDrm
    1145048338U,	// FsMOVAPDrr
    2080378138U,	// FsMOVAPSrm
    1145048346U,	// FsMOVAPSrr
    541068578U,	// FsORPDrm
    205524258U,	// FsORPDrr
    541068584U,	// FsORPSrm
    205524264U,	// FsORPSrr
    2080378158U,	// FsVMOVAPDrm
    1145048366U,	// FsVMOVAPDrr
    2080378167U,	// FsVMOVAPSrm
    1145048375U,	// FsVMOVAPSrr
    541068608U,	// FsXORPDrm
    205524288U,	// FsXORPDrr
    541068615U,	// FsXORPSrm
    205524295U,	// FsXORPSrr
    3406U,	// GS_PREFIX
    541068625U,	// HADDPDrm
    205524305U,	// HADDPDrr
    541068633U,	// HADDPSrm
    205524313U,	// HADDPSrr
    3425U,	// HLT
    541068645U,	// HSUBPDrm
    205524325U,	// HSUBPDrr
    541068653U,	// HSUBPSrm
    205524333U,	// HSUBPSrr
    872418677U,	// IDIV16m
    67112309U,	// IDIV16r
    939527548U,	// IDIV32m
    67112316U,	// IDIV32r
    1610616195U,	// IDIV64m
    67112323U,	// IDIV64r
    1744833930U,	// IDIV8m
    67112330U,	// IDIV8r
    872418705U,	// ILD_F16m
    939527576U,	// ILD_F32m
    1610616223U,	// ILD_F64m
    0U,	// ILD_Fp16m32
    0U,	// ILD_Fp16m64
    0U,	// ILD_Fp16m80
    0U,	// ILD_Fp32m32
    0U,	// ILD_Fp32m64
    0U,	// ILD_Fp32m80
    0U,	// ILD_Fp64m32
    0U,	// ILD_Fp64m64
    0U,	// ILD_Fp64m80
    872418727U,	// IMUL16m
    67112359U,	// IMUL16r
    272633255U,	// IMUL16rm
    1234177447U,	// IMUL16rmi
    1234177447U,	// IMUL16rmi8
    205524391U,	// IMUL16rr
    204508583U,	// IMUL16rri
    204508583U,	// IMUL16rri8
    939527598U,	// IMUL32m
    67112366U,	// IMUL32r
    339742126U,	// IMUL32rm
    1221594542U,	// IMUL32rmi
    1221594542U,	// IMUL32rmi8
    205524398U,	// IMUL32rr
    204508590U,	// IMUL32rri
    204508590U,	// IMUL32rri8
    1610616245U,	// IMUL64m
    67112373U,	// IMUL64r
    406850997U,	// IMUL64rm
    1222643125U,	// IMUL64rmi32
    1222643125U,	// IMUL64rmi8
    205524405U,	// IMUL64rr
    204508597U,	// IMUL64rri32
    204508597U,	// IMUL64rri8
    1744833980U,	// IMUL8m
    67112380U,	// IMUL8r
    3523U,	// IN16
    68160968U,	// IN16ri
    3533U,	// IN16rr
    3546U,	// IN32
    72355295U,	// IN32ri
    3556U,	// IN32rr
    3570U,	// IN8
    76549623U,	// IN8ri
    3580U,	// IN8rr
    872418825U,	// INC16m
    67112457U,	// INC16r
    939527695U,	// INC32m
    67112463U,	// INC32r
    872418825U,	// INC64_16m
    67112457U,	// INC64_16r
    939527695U,	// INC64_32m
    67112463U,	// INC64_32r
    1610616341U,	// INC64m
    67112469U,	// INC64r
    1744834075U,	// INC8m
    67112475U,	// INC8r
    1299320353U,	// INSERTPSrm
    1346375201U,	// INSERTPSrr
    67112491U,	// INT
    3632U,	// INT3
    3637U,	// INTO
    3642U,	// INVD
    1073745471U,	// INVEPT32
    1073745471U,	// INVEPT64
    1744834119U,	// INVLPG
    1073745487U,	// INVPCID32
    1073745487U,	// INVPCID64
    1073745496U,	// INVVPID32
    1073745496U,	// INVVPID64
    3681U,	// IRET16
    3687U,	// IRET32
    3693U,	// IRET64
    872418931U,	// ISTT_FP16m
    939527804U,	// ISTT_FP32m
    1610616453U,	// ISTT_FP64m
    0U,	// ISTT_Fp16m32
    0U,	// ISTT_Fp16m64
    0U,	// ISTT_Fp16m80
    0U,	// ISTT_Fp32m32
    0U,	// ISTT_Fp32m64
    0U,	// ISTT_Fp32m80
    0U,	// ISTT_Fp64m32
    0U,	// ISTT_Fp64m64
    0U,	// ISTT_Fp64m80
    872418959U,	// IST_F16m
    939527830U,	// IST_F32m
    872418973U,	// IST_FP16m
    939527845U,	// IST_FP32m
    1610616493U,	// IST_FP64m
    0U,	// IST_Fp16m32
    0U,	// IST_Fp16m64
    0U,	// IST_Fp16m80
    0U,	// IST_Fp32m32
    0U,	// IST_Fp32m64
    0U,	// IST_Fp32m80
    0U,	// IST_Fp64m32
    0U,	// IST_Fp64m64
    0U,	// IST_Fp64m80
    1900251266U,	// Int_CMPSDrm
    1967327362U,	// Int_CMPSDrr
    1902381186U,	// Int_CMPSSrm
    1969424514U,	// Int_CMPSSrr
    2080377081U,	// Int_COMISDrm
    1145047289U,	// Int_COMISDrr
    2080377089U,	// Int_COMISSrm
    1145047297U,	// Int_COMISSrr
    1476397404U,	// Int_CVTDQ2PDrm
    1145047388U,	// Int_CVTDQ2PDrr
    1073744230U,	// Int_CVTDQ2PSrm
    1145047398U,	// Int_CVTDQ2PSrr
    2080377200U,	// Int_CVTPD2DQrm
    1145047408U,	// Int_CVTPD2DQrr
    2080377210U,	// Int_CVTPD2PSrm
    1145047418U,	// Int_CVTPD2PSrr
    2080377220U,	// Int_CVTPS2DQrm
    1145047428U,	// Int_CVTPS2DQrr
    2147486094U,	// Int_CVTPS2PDrm
    1145047438U,	// Int_CVTPS2PDrr
    608176558U,	// Int_CVTSD2SSrm
    205523374U,	// Int_CVTSD2SSrr
    406849987U,	// Int_CVTSI2SD64rm
    205523395U,	// Int_CVTSI2SD64rr
    339741123U,	// Int_CVTSI2SDrm
    205523395U,	// Int_CVTSI2SDrr
    406849997U,	// Int_CVTSI2SS64rm
    205523405U,	// Int_CVTSI2SS64rr
    339741144U,	// Int_CVTSI2SSrm
    205523416U,	// Int_CVTSI2SSrr
    675285474U,	// Int_CVTSS2SDrm
    205523426U,	// Int_CVTSS2SDrr
    2080377368U,	// Int_CVTTSD2SI64rm
    1145047576U,	// Int_CVTTSD2SI64rr
    2080377380U,	// Int_CVTTSD2SIrm
    1145047588U,	// Int_CVTTSD2SIrr
    2214595119U,	// Int_CVTTSS2SI64rm
    1145047599U,	// Int_CVTTSS2SI64rr
    2214595131U,	// Int_CVTTSS2SIrm
    1145047611U,	// Int_CVTTSS2SIrr
    3766U,	// Int_MemBarrier
    2080378562U,	// Int_UCOMISDrm
    1145048770U,	// Int_UCOMISDrr
    2080378571U,	// Int_UCOMISSrm
    1145048779U,	// Int_UCOMISSrr
    1900252884U,	// Int_VCMPSDrm
    1967328980U,	// Int_VCMPSDrr
    1902382804U,	// Int_VCMPSSrm
    1969426132U,	// Int_VCMPSSrr
    2080378585U,	// Int_VCOMISDrm
    1145048793U,	// Int_VCOMISDrr
    2080378594U,	// Int_VCOMISSrm
    1145048802U,	// Int_VCOMISSrr
    1476398827U,	// Int_VCVTDQ2PDrm
    1145048811U,	// Int_VCVTDQ2PDrr
    1073745654U,	// Int_VCVTDQ2PSrm
    1145048822U,	// Int_VCVTDQ2PSrr
    2080378625U,	// Int_VCVTPD2DQrm
    1145048833U,	// Int_VCVTPD2DQrr
    2080378636U,	// Int_VCVTPD2PSrm
    1145048844U,	// Int_VCVTPD2PSrr
    2080378647U,	// Int_VCVTPS2DQrm
    1145048855U,	// Int_VCVTPS2DQrr
    2147487522U,	// Int_VCVTPS2PDrm
    1145048866U,	// Int_VCVTPS2PDrr
    2080378669U,	// Int_VCVTSD2SI64rm
    1145048877U,	// Int_VCVTSD2SI64rr
    2080378669U,	// Int_VCVTSD2SIrm
    1145048877U,	// Int_VCVTSD2SIrr
    607162168U,	// Int_VCVTSD2SSrm
    204508984U,	// Int_VCVTSD2SSrr
    405835587U,	// Int_VCVTSI2SD64rm
    204508995U,	// Int_VCVTSI2SD64rr
    338726723U,	// Int_VCVTSI2SDrm
    204508995U,	// Int_VCVTSI2SDrr
    405835598U,	// Int_VCVTSI2SS64rm
    204509006U,	// Int_VCVTSI2SS64rr
    338726734U,	// Int_VCVTSI2SSrm
    204509006U,	// Int_VCVTSI2SSrr
    674271065U,	// Int_VCVTSS2SDrm
    204509017U,	// Int_VCVTSS2SDrr
    2080378724U,	// Int_VCVTTSD2SI64rm
    1145048932U,	// Int_VCVTTSD2SI64rr
    2080378724U,	// Int_VCVTTSD2SIrm
    1145048932U,	// Int_VCVTTSD2SIrr
    2214596464U,	// Int_VCVTTSS2SI64rm
    1145048944U,	// Int_VCVTTSS2SI64rr
    2214596464U,	// Int_VCVTTSS2SIrm
    1145048944U,	// Int_VCVTTSS2SIrr
    2080378748U,	// Int_VUCOMISDrm
    1145048956U,	// Int_VUCOMISDrr
    2080378758U,	// Int_VUCOMISSrm
    1145048966U,	// Int_VUCOMISSrr
    1677725584U,	// JAE_1
    1677725584U,	// JAE_4
    1677725589U,	// JA_1
    1677725589U,	// JA_4
    1677725593U,	// JBE_1
    1677725593U,	// JBE_4
    1677725598U,	// JB_1
    1677725598U,	// JB_4
    1677725602U,	// JCXZ
    1677725608U,	// JECXZ_32
    1677725608U,	// JECXZ_64
    1677725615U,	// JE_1
    1677725615U,	// JE_4
    1677725619U,	// JGE_1
    1677725619U,	// JGE_4
    1677725624U,	// JG_1
    1677725624U,	// JG_4
    1677725628U,	// JLE_1
    1677725628U,	// JLE_4
    1677725633U,	// JL_1
    1677725633U,	// JL_4
    939528133U,	// JMP32m
    67112901U,	// JMP32r
    1610616780U,	// JMP64m
    1677725651U,	// JMP64pcrel32
    67112908U,	// JMP64r
    1677725657U,	// JMP_1
    1677725657U,	// JMP_4
    1677725662U,	// JNE_1
    1677725662U,	// JNE_4
    1677725667U,	// JNO_1
    1677725667U,	// JNO_4
    1677725672U,	// JNP_1
    1677725672U,	// JNP_4
    1677725677U,	// JNS_1
    1677725677U,	// JNS_4
    1677725682U,	// JO_1
    1677725682U,	// JO_4
    1677725686U,	// JP_1
    1677725686U,	// JP_4
    1677725690U,	// JRCXZ
    1677725697U,	// JS_1
    1677725697U,	// JS_4
    4101U,	// LAHF
    1543507978U,	// LAR16rm
    1145049098U,	// LAR16rr
    1543507984U,	// LAR32rm
    1145049104U,	// LAR32rr
    1543507990U,	// LAR64rm
    1145049110U,	// LAR64rr
    136319004U,	// LCMPXCHG16
    2013270060U,	// LCMPXCHG16B
    140513342U,	// LCMPXCHG32
    142610510U,	// LCMPXCHG64
    144707678U,	// LCMPXCHG8
    1610616942U,	// LCMPXCHG8B
    1073746047U,	// LDDQUrm
    939528326U,	// LDMXCSR
    2348814479U,	// LDS16rm
    2348814485U,	// LDS32rm
    4251U,	// LD_F0
    4256U,	// LD_F1
    738201765U,	// LD_F32m
    805310635U,	// LD_F64m
    2415923377U,	// LD_F80m
    0U,	// LD_Fp032
    0U,	// LD_Fp064
    0U,	// LD_Fp080
    0U,	// LD_Fp132
    0U,	// LD_Fp164
    0U,	// LD_Fp180
    0U,	// LD_Fp32m
    0U,	// LD_Fp32m64
    0U,	// LD_Fp32m80
    0U,	// LD_Fp64m
    0U,	// LD_Fp64m80
    0U,	// LD_Fp80m
    67113143U,	// LD_Frr
    1409290428U,	// LEA16r
    1409290434U,	// LEA32r
    1409290434U,	// LEA64_32r
    1476399304U,	// LEA64r
    4302U,	// LEAVE
    4302U,	// LEAVE64
    2348814548U,	// LES16rm
    2348814554U,	// LES32rm
    4320U,	// LFENCE
    2348814567U,	// LFS16rm
    2348814573U,	// LFS32rm
    2348814579U,	// LFS64rm
    2281705721U,	// LGDT16m
    2281705728U,	// LGDTm
    2348814598U,	// LGS16rm
    2348814604U,	// LGS32rm
    2348814610U,	// LGS64rm
    2281705752U,	// LIDT16m
    2281705759U,	// LIDTm
    872419621U,	// LLDT16m
    67113253U,	// LLDT16r
    872419628U,	// LMSW16m
    67113260U,	// LMSW16r
    136319283U,	// LOCK_ADD16mi
    136319283U,	// LOCK_ADD16mi8
    136319283U,	// LOCK_ADD16mr
    140513599U,	// LOCK_ADD32mi
    140513599U,	// LOCK_ADD32mi8
    140513599U,	// LOCK_ADD32mr
    142610763U,	// LOCK_ADD64mi32
    142610763U,	// LOCK_ADD64mi8
    142610763U,	// LOCK_ADD64mr
    144707927U,	// LOCK_ADD8mi
    144707927U,	// LOCK_ADD8mr
    136319331U,	// LOCK_AND16mi
    136319331U,	// LOCK_AND16mi8
    136319331U,	// LOCK_AND16mr
    140513647U,	// LOCK_AND32mi
    140513647U,	// LOCK_AND32mi8
    140513647U,	// LOCK_AND32mr
    142610811U,	// LOCK_AND64mi32
    142610811U,	// LOCK_AND64mi8
    142610811U,	// LOCK_AND64mr
    144707975U,	// LOCK_AND8mi
    144707975U,	// LOCK_AND8mr
    872419731U,	// LOCK_DEC16m
    939528607U,	// LOCK_DEC32m
    1610617259U,	// LOCK_DEC64m
    1744834999U,	// LOCK_DEC8m
    872419779U,	// LOCK_INC16m
    939528655U,	// LOCK_INC32m
    1610617307U,	// LOCK_INC64m
    1744835047U,	// LOCK_INC8m
    136319475U,	// LOCK_OR16mi
    136319475U,	// LOCK_OR16mi8
    136319475U,	// LOCK_OR16mr
    140513790U,	// LOCK_OR32mi
    140513790U,	// LOCK_OR32mi8
    140513790U,	// LOCK_OR32mr
    142610953U,	// LOCK_OR64mi32
    142610953U,	// LOCK_OR64mi8
    142610953U,	// LOCK_OR64mr
    144708116U,	// LOCK_OR8mi
    144708116U,	// LOCK_OR8mr
    4639U,	// LOCK_PREFIX
    136319524U,	// LOCK_SUB16mi
    136319524U,	// LOCK_SUB16mi8
    136319524U,	// LOCK_SUB16mr
    140513840U,	// LOCK_SUB32mi
    140513840U,	// LOCK_SUB32mi8
    140513840U,	// LOCK_SUB32mr
    142611004U,	// LOCK_SUB64mi32
    142611004U,	// LOCK_SUB64mi8
    142611004U,	// LOCK_SUB64mr
    144708168U,	// LOCK_SUB8mi
    144708168U,	// LOCK_SUB8mr
    136319572U,	// LOCK_XOR16mi
    136319572U,	// LOCK_XOR16mi8
    136319572U,	// LOCK_XOR16mr
    140513888U,	// LOCK_XOR32mi
    140513888U,	// LOCK_XOR32mi8
    140513888U,	// LOCK_XOR32mr
    142611052U,	// LOCK_XOR64mi32
    142611052U,	// LOCK_XOR64mi8
    142611052U,	// LOCK_XOR64mr
    144708216U,	// LOCK_XOR8mi
    144708216U,	// LOCK_XOR8mr
    4740U,	// LODSB
    4746U,	// LODSD
    4752U,	// LODSQ
    4758U,	// LODSW
    1677726364U,	// LOOP
    1677726370U,	// LOOPE
    1677726377U,	// LOOPNE
    67113649U,	// LRETI
    67113655U,	// LRETIW
    4798U,	// LRETL
    4804U,	// LRETQ
    1543508682U,	// LSL16rm
    1145049802U,	// LSL16rr
    1409290960U,	// LSL32rm
    1145049808U,	// LSL32rr
    1476399830U,	// LSL64rm
    1145049814U,	// LSL64rr
    2348815068U,	// LSS16rm
    2348815074U,	// LSS32rm
    2348815080U,	// LSS64rm
    872420078U,	// LTRm
    67113710U,	// LTRr
    1168118516U,	// LXADD16
    1169167105U,	// LXADD32
    1170215694U,	// LXADD64
    1171264283U,	// LXADD8
    1543508776U,	// LZCNT16rm
    1145049896U,	// LZCNT16rr
    1409291056U,	// LZCNT32rm
    1145049904U,	// LZCNT32rr
    1476399928U,	// LZCNT64rm
    1145049912U,	// LZCNT64rr
    1145049920U,	// MASKMOVDQU
    1145049920U,	// MASKMOVDQU64
    541070156U,	// MAXPDrm
    541070156U,	// MAXPDrm_Int
    205525836U,	// MAXPDrr
    205525836U,	// MAXPDrr_Int
    541070163U,	// MAXPSrm
    541070163U,	// MAXPSrm_Int
    205525843U,	// MAXPSrr
    205525843U,	// MAXPSrr_Int
    608179034U,	// MAXSDrm
    608179034U,	// MAXSDrm_Int
    205525850U,	// MAXSDrr
    205525850U,	// MAXSDrr_Int
    675287905U,	// MAXSSrm
    675287905U,	// MAXSSrm_Int
    205525857U,	// MAXSSrr
    205525857U,	// MAXSSrr_Int
    4968U,	// MFENCE
    541070191U,	// MINPDrm
    541070191U,	// MINPDrm_Int
    205525871U,	// MINPDrr
    205525871U,	// MINPDrr_Int
    541070198U,	// MINPSrm
    541070198U,	// MINPSrm_Int
    205525878U,	// MINPSrr
    205525878U,	// MINPSrr_Int
    608179069U,	// MINSDrm
    608179069U,	// MINSDrm_Int
    205525885U,	// MINSDrr
    205525885U,	// MINSDrr_Int
    675287940U,	// MINSSrm
    675287940U,	// MINSSrm_Int
    205525892U,	// MINSSrr
    205525892U,	// MINSSrr_Int
    2080379787U,	// MMX_CVTPD2PIirm
    1145049995U,	// MMX_CVTPD2PIirr
    1476400021U,	// MMX_CVTPI2PDirm
    1145050005U,	// MMX_CVTPI2PDirr
    406852511U,	// MMX_CVTPI2PSirm
    205525919U,	// MMX_CVTPI2PSirr
    2147488681U,	// MMX_CVTPS2PIirm
    1145050025U,	// MMX_CVTPS2PIirr
    2080379827U,	// MMX_CVTTPD2PIirm
    1145050035U,	// MMX_CVTTPD2PIirr
    2147488702U,	// MMX_CVTTPS2PIirm
    1145050046U,	// MMX_CVTTPS2PIirr
    5065U,	// MMX_EMMS
    1145050062U,	// MMX_MASKMOVQ
    1145050062U,	// MMX_MASKMOVQ64
    1145050072U,	// MMX_MOVD64from64rr
    1145050072U,	// MMX_MOVD64grr
    140514264U,	// MMX_MOVD64mr
    1409291224U,	// MMX_MOVD64rm
    1145050072U,	// MMX_MOVD64rr
    1145050072U,	// MMX_MOVD64rrv164
    1145050072U,	// MMX_MOVD64to64rr
    1145050078U,	// MMX_MOVDQ2Qrr
    1145050078U,	// MMX_MOVFR642Qrr
    142611431U,	// MMX_MOVNTQmr
    1145050095U,	// MMX_MOVQ2DQrr
    1145050095U,	// MMX_MOVQ2FR64rr
    142611448U,	// MMX_MOVQ64mr
    1476400120U,	// MMX_MOVQ64rm
    1145050104U,	// MMX_MOVQ64rr
    1409291224U,	// MMX_MOVZDI2PDIrm
    1145050072U,	// MMX_MOVZDI2PDIrr
    1476400126U,	// MMX_PABSBrm64
    1145050110U,	// MMX_PABSBrr64
    1476400133U,	// MMX_PABSDrm64
    1145050117U,	// MMX_PABSDrr64
    1476400140U,	// MMX_PABSWrm64
    1145050124U,	// MMX_PABSWrr64
    406852627U,	// MMX_PACKSSDWirm
    205526035U,	// MMX_PACKSSDWirr
    406852637U,	// MMX_PACKSSWBirm
    205526045U,	// MMX_PACKSSWBirr
    406852647U,	// MMX_PACKUSWBirm
    205526055U,	// MMX_PACKUSWBirr
    406852657U,	// MMX_PADDBirm
    205526065U,	// MMX_PADDBirr
    406852664U,	// MMX_PADDDirm
    205526072U,	// MMX_PADDDirr
    406852671U,	// MMX_PADDQirm
    205526079U,	// MMX_PADDQirr
    406852678U,	// MMX_PADDSBirm
    205526086U,	// MMX_PADDSBirr
    406852686U,	// MMX_PADDSWirm
    205526094U,	// MMX_PADDSWirr
    406852694U,	// MMX_PADDUSBirm
    205526102U,	// MMX_PADDUSBirr
    406852703U,	// MMX_PADDUSWirm
    205526111U,	// MMX_PADDUSWirr
    406852712U,	// MMX_PADDWirm
    205526120U,	// MMX_PADDWirr
    1304466543U,	// MMX_PALIGNR64irm
    1346376815U,	// MMX_PALIGNR64irr
    406852728U,	// MMX_PANDNirm
    205526136U,	// MMX_PANDNirr
    406852735U,	// MMX_PANDirm
    205526143U,	// MMX_PANDirr
    406852741U,	// MMX_PAVGBirm
    205526149U,	// MMX_PAVGBirr
    406852748U,	// MMX_PAVGWirm
    205526156U,	// MMX_PAVGWirr
    406852755U,	// MMX_PCMPEQBirm
    205526163U,	// MMX_PCMPEQBirr
    406852764U,	// MMX_PCMPEQDirm
    205526172U,	// MMX_PCMPEQDirr
    406852773U,	// MMX_PCMPEQWirm
    205526181U,	// MMX_PCMPEQWirr
    406852782U,	// MMX_PCMPGTBirm
    205526190U,	// MMX_PCMPGTBirr
    406852791U,	// MMX_PCMPGTDirm
    205526199U,	// MMX_PCMPGTDirr
    406852800U,	// MMX_PCMPGTWirm
    205526208U,	// MMX_PCMPGTWirr
    204510409U,	// MMX_PEXTRWirri
    406852817U,	// MMX_PHADDSWrm64
    205526225U,	// MMX_PHADDSWrr64
    406852826U,	// MMX_PHADDWrm64
    205526234U,	// MMX_PHADDWrr64
    406852834U,	// MMX_PHADDrm64
    205526242U,	// MMX_PHADDrr64
    406852842U,	// MMX_PHSUBDrm64
    205526250U,	// MMX_PHSUBDrr64
    406852850U,	// MMX_PHSUBSWrm64
    205526258U,	// MMX_PHSUBSWrr64
    406852859U,	// MMX_PHSUBWrm64
    205526267U,	// MMX_PHSUBWrr64
    1302369539U,	// MMX_PINSRWirmi
    1346376963U,	// MMX_PINSRWirri
    406852875U,	// MMX_PMADDUBSWrm64
    205526283U,	// MMX_PMADDUBSWrr64
    406852886U,	// MMX_PMADDWDirm
    205526294U,	// MMX_PMADDWDirr
    406852895U,	// MMX_PMAXSWirm
    205526303U,	// MMX_PMAXSWirr
    406852903U,	// MMX_PMAXUBirm
    205526311U,	// MMX_PMAXUBirr
    406852911U,	// MMX_PMINSWirm
    205526319U,	// MMX_PMINSWirr
    406852919U,	// MMX_PMINUBirm
    205526327U,	// MMX_PMINUBirr
    1145050431U,	// MMX_PMOVMSKBrr
    406852937U,	// MMX_PMULHRSWrm64
    205526345U,	// MMX_PMULHRSWrr64
    406852947U,	// MMX_PMULHUWirm
    205526355U,	// MMX_PMULHUWirr
    406852956U,	// MMX_PMULHWirm
    205526364U,	// MMX_PMULHWirr
    406852964U,	// MMX_PMULLWirm
    205526372U,	// MMX_PMULLWirr
    406852972U,	// MMX_PMULUDQirm
    205526380U,	// MMX_PMULUDQirr
    406852981U,	// MMX_PORirm
    205526389U,	// MMX_PORirr
    406852986U,	// MMX_PSADBWirm
    205526394U,	// MMX_PSADBWirr
    406852994U,	// MMX_PSHUFBrm64
    205526402U,	// MMX_PSHUFBrr64
    1222645130U,	// MMX_PSHUFWmi
    204510602U,	// MMX_PSHUFWri
    406853010U,	// MMX_PSIGNBrm64
    205526418U,	// MMX_PSIGNBrr64
    406853018U,	// MMX_PSIGNDrm64
    205526426U,	// MMX_PSIGNDrr64
    406853026U,	// MMX_PSIGNWrm64
    205526434U,	// MMX_PSIGNWrr64
    205526442U,	// MMX_PSLLDri
    406853034U,	// MMX_PSLLDrm
    205526442U,	// MMX_PSLLDrr
    205526449U,	// MMX_PSLLQri
    406853041U,	// MMX_PSLLQrm
    205526449U,	// MMX_PSLLQrr
    205526456U,	// MMX_PSLLWri
    406853048U,	// MMX_PSLLWrm
    205526456U,	// MMX_PSLLWrr
    205526463U,	// MMX_PSRADri
    406853055U,	// MMX_PSRADrm
    205526463U,	// MMX_PSRADrr
    205526470U,	// MMX_PSRAWri
    406853062U,	// MMX_PSRAWrm
    205526470U,	// MMX_PSRAWrr
    205526477U,	// MMX_PSRLDri
    406853069U,	// MMX_PSRLDrm
    205526477U,	// MMX_PSRLDrr
    205526484U,	// MMX_PSRLQri
    406853076U,	// MMX_PSRLQrm
    205526484U,	// MMX_PSRLQrr
    205526491U,	// MMX_PSRLWri
    406853083U,	// MMX_PSRLWrm
    205526491U,	// MMX_PSRLWrr
    406853090U,	// MMX_PSUBBirm
    205526498U,	// MMX_PSUBBirr
    406853097U,	// MMX_PSUBDirm
    205526505U,	// MMX_PSUBDirr
    406853104U,	// MMX_PSUBQirm
    205526512U,	// MMX_PSUBQirr
    406853111U,	// MMX_PSUBSBirm
    205526519U,	// MMX_PSUBSBirr
    406853119U,	// MMX_PSUBSWirm
    205526527U,	// MMX_PSUBSWirr
    406853127U,	// MMX_PSUBUSBirm
    205526535U,	// MMX_PSUBUSBirr
    406853136U,	// MMX_PSUBUSWirm
    205526544U,	// MMX_PSUBUSWirr
    406853145U,	// MMX_PSUBWirm
    205526553U,	// MMX_PSUBWirr
    406853152U,	// MMX_PUNPCKHBWirm
    205526560U,	// MMX_PUNPCKHBWirr
    406853163U,	// MMX_PUNPCKHDQirm
    205526571U,	// MMX_PUNPCKHDQirr
    406853174U,	// MMX_PUNPCKHWDirm
    205526582U,	// MMX_PUNPCKHWDirr
    406853185U,	// MMX_PUNPCKLBWirm
    205526593U,	// MMX_PUNPCKLBWirr
    406853196U,	// MMX_PUNPCKLDQirm
    205526604U,	// MMX_PUNPCKLDQirr
    406853207U,	// MMX_PUNPCKLWDirm
    205526615U,	// MMX_PUNPCKLWDirr
    406853218U,	// MMX_PXORirm
    205526626U,	// MMX_PXORirr
    0U,	// MONITOR
    5736U,	// MONITORrrr
    5744U,	// MONTMUL
    0U,	// MORESTACK_RET
    0U,	// MORESTACK_RET_RESTORE_R10
    1677727352U,	// MOV16ao16
    136320643U,	// MOV16mi
    136320643U,	// MOV16mr
    136320643U,	// MOV16ms
    1678775939U,	// MOV16o16a
    0U,	// MOV16r0
    1145050755U,	// MOV16ri
    1543509635U,	// MOV16rm
    1145050755U,	// MOV16rr
    1145050755U,	// MOV16rr_REV
    1145050755U,	// MOV16rs
    1543509635U,	// MOV16sm
    1145050755U,	// MOV16sr
    1677727369U,	// MOV32ao32
    1145050773U,	// MOV32cr
    1145050773U,	// MOV32dr
    140514965U,	// MOV32mi
    140514965U,	// MOV32mr
    140514965U,	// MOV32ms
    1682970261U,	// MOV32o32a
    0U,	// MOV32r0
    1145050773U,	// MOV32rc
    1145050773U,	// MOV32rd
    1145050773U,	// MOV32ri
    1409291925U,	// MOV32rm
    1145050773U,	// MOV32rr
    1145050773U,	// MOV32rr_REV
    1145050773U,	// MOV32rs
    1409291925U,	// MOV32sm
    1145050773U,	// MOV32sr
    1145050104U,	// MOV64cr
    1145050104U,	// MOV64dr
    142611448U,	// MOV64mi32
    142611448U,	// MOV64mr
    142611448U,	// MOV64ms
    0U,	// MOV64r0
    1145050104U,	// MOV64rc
    1145050104U,	// MOV64rd
    1145050779U,	// MOV64ri
    1145050104U,	// MOV64ri32
    0U,	// MOV64ri64i32
    1476400120U,	// MOV64rm
    1145050104U,	// MOV64rr
    1145050104U,	// MOV64rr_REV
    1145050104U,	// MOV64rs
    1476400120U,	// MOV64sm
    1145050104U,	// MOV64sr
    1145050072U,	// MOV64toPQIrr
    1476400120U,	// MOV64toSDrm
    1145050072U,	// MOV64toSDrr
    1677727396U,	// MOV8ao8
    144709295U,	// MOV8mi
    144709295U,	// MOV8mr
    145036975U,	// MOV8mr_NOREX
    1687164591U,	// MOV8o8a
    0U,	// MOV8r0
    1145050799U,	// MOV8ri
    1811945135U,	// MOV8rm
    1843402415U,	// MOV8rm_NOREX
    1145050799U,	// MOV8rr
    1145378479U,	// MOV8rr_NOREX
    1145050799U,	// MOV8rr_REV
    166726930U,	// MOVAPDmr
    2080378130U,	// MOVAPDrm
    1145048338U,	// MOVAPDrr
    1145048338U,	// MOVAPDrr_REV
    166726938U,	// MOVAPSmr
    2080378138U,	// MOVAPSrm
    1145048346U,	// MOVAPSrr
    1145048346U,	// MOVAPSrr_REV
    136320693U,	// MOVBE16mr
    1543509685U,	// MOVBE16rm
    140515005U,	// MOVBE32mr
    1409291965U,	// MOVBE32rm
    142612165U,	// MOVBE64mr
    1476400837U,	// MOVBE64rm
    2147489485U,	// MOVDDUPrm
    1145050829U,	// MOVDDUPrr
    1409291224U,	// MOVDI2PDIrm
    1145050072U,	// MOVDI2PDIrr
    1409291224U,	// MOVDI2SSrm
    1145050072U,	// MOVDI2SSrr
    167778006U,	// MOVDQAmr
    1073747670U,	// MOVDQArm
    1145050838U,	// MOVDQArr
    1145050838U,	// MOVDQArr_REV
    167778014U,	// MOVDQUmr
    167778014U,	// MOVDQUmr_Int
    1073747678U,	// MOVDQUrm
    1145050846U,	// MOVDQUrr
    1145050846U,	// MOVDQUrr_REV
    205526758U,	// MOVHLPSrr
    168826607U,	// MOVHPDmr
    608179951U,	// MOVHPDrm
    168826615U,	// MOVHPSmr
    608179959U,	// MOVHPSrm
    205526783U,	// MOVLHPSrr
    168826632U,	// MOVLPDmr
    608179976U,	// MOVLPDrm
    168826640U,	// MOVLPSmr
    608179984U,	// MOVLPSrm
    142611448U,	// MOVLQ128mr
    1145050904U,	// MOVMSKPDrr32
    1145050904U,	// MOVMSKPDrr64
    1145050914U,	// MOVMSKPSrr32
    1145050914U,	// MOVMSKPSrr64
    1073747756U,	// MOVNTDQArm
    166729526U,	// MOVNTDQmr
    142612287U,	// MOVNTI_64mr
    140515144U,	// MOVNTImr
    166729553U,	// MOVNTPDmr
    166729562U,	// MOVNTPSmr
    0U,	// MOVPC32r
    140514264U,	// MOVPDI2DImr
    1145050072U,	// MOVPDI2DIrr
    142611448U,	// MOVPQI2QImr
    1145050072U,	// MOVPQIto64rr
    1476400120U,	// MOVQI2PQIrm
    1145050104U,	// MOVQxrxr
    5987U,	// MOVSB
    5993U,	// MOVSD
    168826735U,	// MOVSDmr
    2147489647U,	// MOVSDrm
    205526895U,	// MOVSDrr
    205526895U,	// MOVSDrr_REV
    142611448U,	// MOVSDto64mr
    1145050072U,	// MOVSDto64rr
    2080380790U,	// MOVSHDUPrm
    1145050998U,	// MOVSHDUPrr
    2080380800U,	// MOVSLDUPrm
    1145051008U,	// MOVSLDUPrr
    6026U,	// MOVSQ
    140514264U,	// MOVSS2DImr
    1145050072U,	// MOVSS2DIrr
    169875344U,	// MOVSSmr
    2214598544U,	// MOVSSrm
    205526928U,	// MOVSSrr
    205526928U,	// MOVSSrr_REV
    6039U,	// MOVSW
    1811945373U,	// MOVSX16rm8
    1145051037U,	// MOVSX16rr8
    1543509925U,	// MOVSX32rm16
    1811945389U,	// MOVSX32rm8
    1145051045U,	// MOVSX32rr16
    1145051053U,	// MOVSX32rr8
    1543509941U,	// MOVSX64rm16
    1409292221U,	// MOVSX64rm32
    1811945413U,	// MOVSX64rm8
    1145051061U,	// MOVSX64rr16
    1145051069U,	// MOVSX64rr32
    1145051077U,	// MOVSX64rr8
    166729677U,	// MOVUPDmr
    2080380877U,	// MOVUPDrm
    1145051085U,	// MOVUPDrr
    1145051085U,	// MOVUPDrr_REV
    166729685U,	// MOVUPSmr
    2080380885U,	// MOVUPSrm
    1145051093U,	// MOVUPSrr
    1145051093U,	// MOVUPSrr_REV
    1409291224U,	// MOVZDI2PDIrm
    1145050072U,	// MOVZDI2PDIrr
    1073746936U,	// MOVZPQILo2PQIrm
    1145050104U,	// MOVZPQILo2PQIrr
    1476400120U,	// MOVZQI2PQIrm
    1145050072U,	// MOVZQI2PQIrr
    1811945437U,	// MOVZX16rm8
    1145051101U,	// MOVZX16rr8
    1811945445U,	// MOVZX32_NOREXrm8
    1145051109U,	// MOVZX32_NOREXrr8
    1543509997U,	// MOVZX32rm16
    1811945445U,	// MOVZX32rm8
    1145051117U,	// MOVZX32rr16
    1145051109U,	// MOVZX32rr8
    0U,	// MOVZX64rm16
    1543510005U,	// MOVZX64rm16_Q
    0U,	// MOVZX64rm32
    0U,	// MOVZX64rm8
    1811945469U,	// MOVZX64rm8_Q
    0U,	// MOVZX64rr16
    1145051125U,	// MOVZX64rr16_Q
    0U,	// MOVZX64rr32
    0U,	// MOVZX64rr8
    1145051133U,	// MOVZX64rr8_Q
    1290934277U,	// MPSADBWrmi
    1346377733U,	// MPSADBWrri
    872421390U,	// MUL16m
    67115022U,	// MUL16r
    939530260U,	// MUL32m
    67115028U,	// MUL32r
    1610618906U,	// MUL64m
    67115034U,	// MUL64r
    1744836640U,	// MUL8m
    67115040U,	// MUL8r
    541071398U,	// MULPDrm
    205527078U,	// MULPDrr
    541071405U,	// MULPSrm
    205527085U,	// MULPSrr
    608180276U,	// MULSDrm
    608180276U,	// MULSDrm_Int
    205527092U,	// MULSDrr
    205527092U,	// MULSDrr_Int
    675289147U,	// MULSSrm
    675289147U,	// MULSSrm_Int
    205527099U,	// MULSSrr
    205527099U,	// MULSSrr_Int
    338729026U,	// MULX32rm
    204511298U,	// MULX32rr
    405837897U,	// MULX64rm
    204511305U,	// MULX64rr
    738203728U,	// MUL_F32m
    805312599U,	// MUL_F64m
    872421470U,	// MUL_FI16m
    939530342U,	// MUL_FI32m
    67115118U,	// MUL_FPrST0
    67115125U,	// MUL_FST0r
    0U,	// MUL_Fp32
    0U,	// MUL_Fp32m
    0U,	// MUL_Fp64
    0U,	// MUL_Fp64m
    0U,	// MUL_Fp64m32
    0U,	// MUL_Fp80
    0U,	// MUL_Fp80m32
    0U,	// MUL_Fp80m64
    0U,	// MUL_FpI16m32
    0U,	// MUL_FpI16m64
    0U,	// MUL_FpI16m80
    0U,	// MUL_FpI32m32
    0U,	// MUL_FpI32m64
    0U,	// MUL_FpI32m80
    67115131U,	// MUL_FrST0
    0U,	// MWAIT
    6281U,	// MWAITrr
    872421519U,	// NEG16m
    67115151U,	// NEG16r
    939530389U,	// NEG32m
    67115157U,	// NEG32r
    1610619035U,	// NEG64m
    67115163U,	// NEG64r
    1744836769U,	// NEG8m
    67115169U,	// NEG8r
    6311U,	// NOOP
    939530411U,	// NOOPL
    872421553U,	// NOOPW
    872421559U,	// NOT16m
    67115191U,	// NOT16r
    939530429U,	// NOT32m
    67115197U,	// NOT32r
    1610619075U,	// NOT64m
    67115203U,	// NOT64r
    1744836809U,	// NOT8m
    67115209U,	// NOT8r
    68163791U,	// OR16i16
    136321231U,	// OR16mi
    136321231U,	// OR16mi8
    136321231U,	// OR16mr
    204478671U,	// OR16ri
    204478671U,	// OR16ri8
    271587535U,	// OR16rm
    204478671U,	// OR16rr
    205527247U,	// OR16rr_REV
    72358100U,	// OR32i32
    140515540U,	// OR32mi
    140515540U,	// OR32mi8
    140515540U,	// OR32mr
    140513790U,	// OR32mrLocked
    204478676U,	// OR32ri
    204478676U,	// OR32ri8
    338696404U,	// OR32rm
    204478676U,	// OR32rr
    205527252U,	// OR32rr_REV
    74455257U,	// OR64i32
    142612697U,	// OR64mi32
    142612697U,	// OR64mi8
    142612697U,	// OR64mr
    204478681U,	// OR64ri32
    204478681U,	// OR64ri8
    405805273U,	// OR64rm
    204478681U,	// OR64rr
    205527257U,	// OR64rr_REV
    76552414U,	// OR8i8
    144709854U,	// OR8mi
    144709854U,	// OR8mr
    204478686U,	// OR8ri
    469768414U,	// OR8rm
    204478686U,	// OR8rr
    205527262U,	// OR8rr_REV
    541068578U,	// ORPDrm
    205524258U,	// ORPDrr
    541068584U,	// ORPSrm
    205524264U,	// ORPSrr
    67115235U,	// OUT16ir
    6382U,	// OUT16rr
    67115260U,	// OUT32ir
    6408U,	// OUT32rr
    67115287U,	// OUT8ir
    6434U,	// OUT8rr
    6448U,	// OUTSB
    6454U,	// OUTSD
    6460U,	// OUTSW
    1073746942U,	// PABSBrm128
    1145050110U,	// PABSBrr128
    1073746949U,	// PABSDrm128
    1145050117U,	// PABSDrr128
    1073746956U,	// PABSWrm128
    1145050124U,	// PABSWrr128
    1010832403U,	// PACKSSDWrm
    205526035U,	// PACKSSDWrr
    1010832413U,	// PACKSSWBrm
    205526045U,	// PACKSSWBrr
    1010833730U,	// PACKUSDWrm
    205527362U,	// PACKUSDWrr
    1010832423U,	// PACKUSWBrm
    205526055U,	// PACKUSWBrr
    1010832433U,	// PADDBrm
    205526065U,	// PADDBrr
    1010832440U,	// PADDDrm
    205526072U,	// PADDDrr
    1010832447U,	// PADDQrm
    205526079U,	// PADDQrr
    1010832454U,	// PADDSBrm
    205526086U,	// PADDSBrr
    1010832462U,	// PADDSWrm
    205526094U,	// PADDSWrr
    1010832470U,	// PADDUSBrm
    205526102U,	// PADDUSBrr
    1010832479U,	// PADDUSWrm
    205526111U,	// PADDUSWrr
    1010832488U,	// PADDWrm
    205526120U,	// PADDWrr
    1290933359U,	// PALIGNR128rm
    1346376815U,	// PALIGNR128rr
    1010832504U,	// PANDNrm
    205526136U,	// PANDNrr
    1010832511U,	// PANDrm
    205526143U,	// PANDrr
    6476U,	// PAUSE
    1010832517U,	// PAVGBrm
    205526149U,	// PAVGBrr
    406853970U,	// PAVGUSBrm
    205527378U,	// PAVGUSBrr
    1010832524U,	// PAVGWrm
    205526156U,	// PAVGWrr
    1010833755U,	// PBLENDVBrm0
    205527387U,	// PBLENDVBrr0
    1290934629U,	// PBLENDWrmi
    1346378085U,	// PBLENDWrri
    1290934638U,	// PCLMULQDQrm
    1346378094U,	// PCLMULQDQrr
    1010832531U,	// PCMPEQBrm
    205526163U,	// PCMPEQBrr
    1010832540U,	// PCMPEQDrm
    205526172U,	// PCMPEQDrr
    1010833785U,	// PCMPEQQrm
    205527417U,	// PCMPEQQrr
    1010832549U,	// PCMPEQWrm
    205526181U,	// PCMPEQWrr
    1219500418U,	// PCMPESTRIArm
    204511618U,	// PCMPESTRIArr
    1219500418U,	// PCMPESTRICrm
    204511618U,	// PCMPESTRICrr
    1219500418U,	// PCMPESTRIOrm
    204511618U,	// PCMPESTRIOrr
    1219500418U,	// PCMPESTRISrm
    204511618U,	// PCMPESTRISrr
    1219500418U,	// PCMPESTRIZrm
    204511618U,	// PCMPESTRIZrr
    1219500418U,	// PCMPESTRIrm
    204511618U,	// PCMPESTRIrr
    0U,	// PCMPESTRM128MEM
    0U,	// PCMPESTRM128REG
    1219500429U,	// PCMPESTRM128rm
    204511629U,	// PCMPESTRM128rr
    1010832558U,	// PCMPGTBrm
    205526190U,	// PCMPGTBrr
    1010832567U,	// PCMPGTDrm
    205526199U,	// PCMPGTDrr
    1010833816U,	// PCMPGTQrm
    205527448U,	// PCMPGTQrr
    1010832576U,	// PCMPGTWrm
    205526208U,	// PCMPGTWrr
    1219500449U,	// PCMPISTRIArm
    204511649U,	// PCMPISTRIArr
    1219500449U,	// PCMPISTRICrm
    204511649U,	// PCMPISTRICrr
    1219500449U,	// PCMPISTRIOrm
    204511649U,	// PCMPISTRIOrr
    1219500449U,	// PCMPISTRISrm
    204511649U,	// PCMPISTRISrr
    1219500449U,	// PCMPISTRIZrm
    204511649U,	// PCMPISTRIZrr
    1219500449U,	// PCMPISTRIrm
    204511649U,	// PCMPISTRIrr
    0U,	// PCMPISTRM128MEM
    0U,	// PCMPISTRM128REG
    1219500460U,	// PCMPISTRM128rm
    204511660U,	// PCMPISTRM128rr
    338729399U,	// PDEP32rm
    204511671U,	// PDEP32rr
    405838270U,	// PDEP64rm
    204511678U,	// PDEP64rr
    338729413U,	// PEXT32rm
    204511685U,	// PEXT32rr
    405838284U,	// PEXT64rm
    204511692U,	// PEXT64rr
    1233492435U,	// PEXTRBmr
    204511699U,	// PEXTRBrr
    1233525211U,	// PEXTRDmr
    204511707U,	// PEXTRDrr
    1233557987U,	// PEXTRQmr
    204511715U,	// PEXTRQrr
    1233589449U,	// PEXTRWmr
    204510409U,	// PEXTRWri
    1476401643U,	// PF2IDrm
    1145051627U,	// PF2IDrr
    1476401650U,	// PF2IWrm
    1145051634U,	// PF2IWrr
    406854137U,	// PFACCrm
    205527545U,	// PFACCrr
    406854144U,	// PFADDrm
    205527552U,	// PFADDrr
    406854151U,	// PFCMPEQrm
    205527559U,	// PFCMPEQrr
    406854160U,	// PFCMPGErm
    205527568U,	// PFCMPGErr
    406854169U,	// PFCMPGTrm
    205527577U,	// PFCMPGTrr
    406854178U,	// PFMAXrm
    205527586U,	// PFMAXrr
    406854185U,	// PFMINrm
    205527593U,	// PFMINrr
    406854192U,	// PFMULrm
    205527600U,	// PFMULrr
    406854199U,	// PFNACCrm
    205527607U,	// PFNACCrr
    406854207U,	// PFPNACCrm
    205527615U,	// PFPNACCrr
    406854216U,	// PFRCPIT1rm
    205527624U,	// PFRCPIT1rr
    406854226U,	// PFRCPIT2rm
    205527634U,	// PFRCPIT2rr
    1476401756U,	// PFRCPrm
    1145051740U,	// PFRCPrr
    406854243U,	// PFRSQIT1rm
    205527651U,	// PFRSQIT1rr
    1476401773U,	// PFRSQRTrm
    1145051757U,	// PFRSQRTrr
    406854262U,	// PFSUBRrm
    205527670U,	// PFSUBRrr
    406854270U,	// PFSUBrm
    205527678U,	// PFSUBrr
    1010832610U,	// PHADDDrm128
    205526242U,	// PHADDDrr128
    1010832593U,	// PHADDSWrm128
    205526225U,	// PHADDSWrr128
    1010832602U,	// PHADDWrm128
    205526234U,	// PHADDWrr128
    1073748613U,	// PHMINPOSUWrm128
    1145051781U,	// PHMINPOSUWrr128
    1010832618U,	// PHSUBDrm128
    205526250U,	// PHSUBDrr128
    1010832626U,	// PHSUBSWrm128
    205526258U,	// PHSUBSWrr128
    1010832635U,	// PHSUBWrm128
    205526267U,	// PHSUBWrr128
    1476401809U,	// PI2FDrm
    1145051793U,	// PI2FDrr
    1476401816U,	// PI2FWrm
    1145051800U,	// PI2FWrr
    1305516703U,	// PINSRBrm
    1346378399U,	// PINSRBrr
    1303419559U,	// PINSRDrm
    1346378407U,	// PINSRDrr
    1304468143U,	// PINSRQrm
    1346378415U,	// PINSRQrr
    1302369539U,	// PINSRWrmi
    1346376963U,	// PINSRWrri
    1010832651U,	// PMADDUBSWrm128
    205526283U,	// PMADDUBSWrr128
    1010832662U,	// PMADDWDrm
    205526294U,	// PMADDWDrr
    1010834103U,	// PMAXSBrm
    205527735U,	// PMAXSBrr
    1010834111U,	// PMAXSDrm
    205527743U,	// PMAXSDrr
    1010832671U,	// PMAXSWrm
    205526303U,	// PMAXSWrr
    1010832679U,	// PMAXUBrm
    205526311U,	// PMAXUBrr
    1010834119U,	// PMAXUDrm
    205527751U,	// PMAXUDrr
    1010834127U,	// PMAXUWrm
    205527759U,	// PMAXUWrr
    1010834135U,	// PMINSBrm
    205527767U,	// PMINSBrr
    1010834143U,	// PMINSDrm
    205527775U,	// PMINSDrr
    1010832687U,	// PMINSWrm
    205526319U,	// PMINSWrr
    1010832695U,	// PMINUBrm
    205526327U,	// PMINUBrr
    1010834151U,	// PMINUDrm
    205527783U,	// PMINUDrr
    1010834159U,	// PMINUWrm
    205527791U,	// PMINUWrr
    1145050431U,	// PMOVMSKBrr
    1409293047U,	// PMOVSXBDrm
    1145051895U,	// PMOVSXBDrr
    1543510785U,	// PMOVSXBQrm
    1145051905U,	// PMOVSXBQrr
    1476401931U,	// PMOVSXBWrm
    1145051915U,	// PMOVSXBWrr
    1476401941U,	// PMOVSXDQrm
    1145051925U,	// PMOVSXDQrr
    1476401951U,	// PMOVSXWDrm
    1145051935U,	// PMOVSXWDrr
    1409293097U,	// PMOVSXWQrm
    1145051945U,	// PMOVSXWQrr
    1409293107U,	// PMOVZXBDrm
    1145051955U,	// PMOVZXBDrr
    1543510845U,	// PMOVZXBQrm
    1145051965U,	// PMOVZXBQrr
    1476401991U,	// PMOVZXBWrm
    1145051975U,	// PMOVZXBWrr
    1476402001U,	// PMOVZXDQrm
    1145051985U,	// PMOVZXDQrr
    1476402011U,	// PMOVZXWDrm
    1145051995U,	// PMOVZXWDrr
    1409293157U,	// PMOVZXWQrm
    1145052005U,	// PMOVZXWQrr
    1010834287U,	// PMULDQrm
    205527919U,	// PMULDQrr
    1010832713U,	// PMULHRSWrm128
    205526345U,	// PMULHRSWrr128
    406854519U,	// PMULHRWrm
    205527927U,	// PMULHRWrr
    1010832723U,	// PMULHUWrm
    205526355U,	// PMULHUWrr
    1010832732U,	// PMULHWrm
    205526364U,	// PMULHWrr
    1010834304U,	// PMULLDrm
    205527936U,	// PMULLDrr
    1010832740U,	// PMULLWrm
    205526372U,	// PMULLWrr
    1010832748U,	// PMULUDQrm
    205526380U,	// PMULUDQrr
    67115912U,	// POP16r
    872422280U,	// POP16rmm
    67115912U,	// POP16rmr
    67115918U,	// POP32r
    939531150U,	// POP32rmm
    67115918U,	// POP32rmr
    67115924U,	// POP64r
    1610619796U,	// POP64rmm
    67115924U,	// POP64rmr
    7066U,	// POPA32
    1543510944U,	// POPCNT16rm
    1145052064U,	// POPCNT16rr
    1409293225U,	// POPCNT32rm
    1145052073U,	// POPCNT32rr
    1476402098U,	// POPCNT64rm
    1145052082U,	// POPCNT64rr
    7099U,	// POPDS16
    7108U,	// POPDS32
    7117U,	// POPES16
    7126U,	// POPES32
    7135U,	// POPF16
    7141U,	// POPF32
    7147U,	// POPF64
    7153U,	// POPFS16
    7162U,	// POPFS32
    7171U,	// POPFS64
    7180U,	// POPGS16
    7189U,	// POPGS32
    7198U,	// POPGS64
    7207U,	// POPSS16
    7216U,	// POPSS32
    1010832757U,	// PORrm
    205526389U,	// PORrr
    939531321U,	// PREFETCH
    1744837699U,	// PREFETCHNTA
    1744837712U,	// PREFETCHT0
    1744837724U,	// PREFETCHT1
    1744837736U,	// PREFETCHT2
    872422516U,	// PREFETCHW
    1010832762U,	// PSADBWrm
    205526394U,	// PSADBWrr
    1010832770U,	// PSHUFBrm128
    205526402U,	// PSHUFBrr128
    1219501183U,	// PSHUFDmi
    204512383U,	// PSHUFDri
    1219501191U,	// PSHUFHWmi
    204512391U,	// PSHUFHWri
    1219501200U,	// PSHUFLWmi
    204512400U,	// PSHUFLWri
    1010832786U,	// PSIGNBrm128
    205526418U,	// PSIGNBrr128
    1010832794U,	// PSIGNDrm128
    205526426U,	// PSIGNDrr128
    1010832802U,	// PSIGNWrm128
    205526434U,	// PSIGNWrr128
    205528217U,	// PSLLDQri
    205526442U,	// PSLLDri
    1010832810U,	// PSLLDrm
    205526442U,	// PSLLDrr
    205526449U,	// PSLLQri
    1010832817U,	// PSLLQrm
    205526449U,	// PSLLQrr
    205526456U,	// PSLLWri
    1010832824U,	// PSLLWrm
    205526456U,	// PSLLWrr
    205526463U,	// PSRADri
    1010832831U,	// PSRADrm
    205526463U,	// PSRADrr
    205526470U,	// PSRAWri
    1010832838U,	// PSRAWrm
    205526470U,	// PSRAWrr
    205528225U,	// PSRLDQri
    205526477U,	// PSRLDri
    1010832845U,	// PSRLDrm
    205526477U,	// PSRLDrr
    205526484U,	// PSRLQri
    1010832852U,	// PSRLQrm
    205526484U,	// PSRLQrr
    205526491U,	// PSRLWri
    1010832859U,	// PSRLWrm
    205526491U,	// PSRLWrr
    1010832866U,	// PSUBBrm
    205526498U,	// PSUBBrr
    1010832873U,	// PSUBDrm
    205526505U,	// PSUBDrr
    1010832880U,	// PSUBQrm
    205526512U,	// PSUBQrr
    1010832887U,	// PSUBSBrm
    205526519U,	// PSUBSBrr
    1010832895U,	// PSUBSWrm
    205526527U,	// PSUBSWrr
    1010832903U,	// PSUBUSBrm
    205526535U,	// PSUBUSBrr
    1010832912U,	// PSUBUSWrm
    205526544U,	// PSUBUSWrr
    1010832921U,	// PSUBWrm
    205526553U,	// PSUBWrr
    1476402345U,	// PSWAPDrm
    1145052329U,	// PSWAPDrr
    2080382129U,	// PTESTrm
    1145052337U,	// PTESTrr
    1010832928U,	// PUNPCKHBWrm
    205526560U,	// PUNPCKHBWrr
    1010832939U,	// PUNPCKHDQrm
    205526571U,	// PUNPCKHDQrr
    1010834616U,	// PUNPCKHQDQrm
    205528248U,	// PUNPCKHQDQrr
    1010832950U,	// PUNPCKHWDrm
    205526582U,	// PUNPCKHWDrr
    1010832961U,	// PUNPCKLBWrm
    205526593U,	// PUNPCKLBWrr
    1010832972U,	// PUNPCKLDQrm
    205526604U,	// PUNPCKLDQrr
    1010834628U,	// PUNPCKLQDQrm
    205528260U,	// PUNPCKLQDQrr
    1010832983U,	// PUNPCKLWDrm
    205526615U,	// PUNPCKLWDrr
    67116240U,	// PUSH16r
    872422608U,	// PUSH16rmm
    67116240U,	// PUSH16rmr
    67116247U,	// PUSH32r
    939531479U,	// PUSH32rmm
    67116247U,	// PUSH32rmr
    67116254U,	// PUSH64i16
    67116254U,	// PUSH64i32
    67116254U,	// PUSH64i8
    67116254U,	// PUSH64r
    1610620126U,	// PUSH64rmm
    67116254U,	// PUSH64rmr
    7397U,	// PUSHA32
    7404U,	// PUSHCS16
    7414U,	// PUSHCS32
    7424U,	// PUSHDS16
    7434U,	// PUSHDS32
    7444U,	// PUSHES16
    7454U,	// PUSHES32
    7464U,	// PUSHF16
    7471U,	// PUSHF32
    7478U,	// PUSHF64
    7485U,	// PUSHFS16
    7495U,	// PUSHFS32
    7505U,	// PUSHFS64
    7515U,	// PUSHGS16
    7525U,	// PUSHGS32
    7535U,	// PUSHGS64
    7545U,	// PUSHSS16
    7555U,	// PUSHSS32
    67116240U,	// PUSHi16
    67116247U,	// PUSHi32
    67116247U,	// PUSHi8
    1010832994U,	// PXORrm
    205526626U,	// PXORrr
    872422797U,	// RCL16m1
    872422803U,	// RCL16mCL
    136322445U,	// RCL16mi
    67116429U,	// RCL16r1
    67116435U,	// RCL16rCL
    205528461U,	// RCL16ri
    939531678U,	// RCL32m1
    939531684U,	// RCL32mCL
    140516766U,	// RCL32mi
    67116446U,	// RCL32r1
    67116452U,	// RCL32rCL
    205528478U,	// RCL32ri
    1610620335U,	// RCL64m1
    1610620341U,	// RCL64mCL
    142613935U,	// RCL64mi
    67116463U,	// RCL64r1
    67116469U,	// RCL64rCL
    205528495U,	// RCL64ri
    1744838080U,	// RCL8m1
    1744838086U,	// RCL8mCL
    144711104U,	// RCL8mi
    67116480U,	// RCL8r1
    67116486U,	// RCL8rCL
    205528512U,	// RCL8ri
    2080382417U,	// RCPPSm
    2080382417U,	// RCPPSm_Int
    1145052625U,	// RCPPSr
    1145052625U,	// RCPPSr_Int
    2214600152U,	// RCPSSm
    2214600152U,	// RCPSSm_Int
    1145052632U,	// RCPSSr
    1145052632U,	// RCPSSr_Int
    872422879U,	// RCR16m1
    872422885U,	// RCR16mCL
    136322527U,	// RCR16mi
    67116511U,	// RCR16r1
    67116517U,	// RCR16rCL
    205528543U,	// RCR16ri
    939531760U,	// RCR32m1
    939531766U,	// RCR32mCL
    140516848U,	// RCR32mi
    67116528U,	// RCR32r1
    67116534U,	// RCR32rCL
    205528560U,	// RCR32ri
    1610620417U,	// RCR64m1
    1610620423U,	// RCR64mCL
    142614017U,	// RCR64mi
    67116545U,	// RCR64r1
    67116551U,	// RCR64rCL
    205528577U,	// RCR64ri
    1744838162U,	// RCR8m1
    1744838168U,	// RCR8mCL
    144711186U,	// RCR8mi
    67116562U,	// RCR8r1
    67116568U,	// RCR8rCL
    205528594U,	// RCR8ri
    67116579U,	// RDFSBASE
    67116590U,	// RDFSBASE64
    67116601U,	// RDGSBASE
    67116612U,	// RDGSBASE64
    7759U,	// RDMSR
    7765U,	// RDPMC
    67116635U,	// RDRAND16r
    67116644U,	// RDRAND32r
    67116653U,	// RDRAND64r
    7798U,	// RDTSC
    7804U,	// RDTSCP
    7811U,	// RELEASE_MOV16mr
    7811U,	// RELEASE_MOV32mr
    7811U,	// RELEASE_MOV64mr
    7811U,	// RELEASE_MOV8mr
    7832U,	// REPNE_PREFIX
    7838U,	// REP_MOVSB
    7848U,	// REP_MOVSD
    7858U,	// REP_MOVSQ
    7868U,	// REP_MOVSW
    7878U,	// REP_PREFIX
    7882U,	// REP_STOSB
    7892U,	// REP_STOSD
    7902U,	// REP_STOSQ
    7912U,	// REP_STOSW
    7922U,	// RET
    67116790U,	// RETI
    67116795U,	// RETIW
    7937U,	// REX64_PREFIX
    872423175U,	// ROL16m1
    872423181U,	// ROL16mCL
    136322823U,	// ROL16mi
    67116807U,	// ROL16r1
    67116813U,	// ROL16rCL
    205528839U,	// ROL16ri
    939532056U,	// ROL32m1
    939532062U,	// ROL32mCL
    140517144U,	// ROL32mi
    67116824U,	// ROL32r1
    67116830U,	// ROL32rCL
    205528856U,	// ROL32ri
    1610620713U,	// ROL64m1
    1610620719U,	// ROL64mCL
    142614313U,	// ROL64mi
    67116841U,	// ROL64r1
    67116847U,	// ROL64rCL
    205528873U,	// ROL64ri
    1744838458U,	// ROL8m1
    1744838464U,	// ROL8mCL
    144711482U,	// ROL8mi
    67116858U,	// ROL8r1
    67116864U,	// ROL8rCL
    205528890U,	// ROL8ri
    872423243U,	// ROR16m1
    872423249U,	// ROR16mCL
    136322891U,	// ROR16mi
    67116875U,	// ROR16r1
    67116881U,	// ROR16rCL
    205528907U,	// ROR16ri
    939532124U,	// ROR32m1
    939532130U,	// ROR32mCL
    140517212U,	// ROR32mi
    67116892U,	// ROR32r1
    67116898U,	// ROR32rCL
    205528924U,	// ROR32ri
    1610620781U,	// ROR64m1
    1610620787U,	// ROR64mCL
    142614381U,	// ROR64mi
    67116909U,	// ROR64r1
    67116915U,	// ROR64rCL
    205528941U,	// ROR64ri
    1744838526U,	// ROR8m1
    1744838532U,	// ROR8mCL
    144711550U,	// ROR8mi
    67116926U,	// ROR8r1
    67116932U,	// ROR8rCL
    205528958U,	// ROR8ri
    1221599119U,	// RORX32mi
    204513167U,	// RORX32ri
    1222647702U,	// RORX64mi
    204513174U,	// RORX64ri
    1244667805U,	// ROUNDPDm
    204513181U,	// ROUNDPDr
    1244667814U,	// ROUNDPSm
    204513190U,	// ROUNDPSr
    1297227695U,	// ROUNDSDm
    1346379695U,	// ROUNDSDr
    1346379695U,	// ROUNDSDr_Int
    1299324856U,	// ROUNDSSm
    1346379704U,	// ROUNDSSr
    1346379704U,	// ROUNDSSr_Int
    8129U,	// RSM
    2080382917U,	// RSQRTPSm
    2080382917U,	// RSQRTPSm_Int
    1145053125U,	// RSQRTPSr
    1145053125U,	// RSQRTPSr_Int
    2214600654U,	// RSQRTSSm
    2214600654U,	// RSQRTSSm_Int
    1145053134U,	// RSQRTSSr
    1145053134U,	// RSQRTSSr_Int
    8151U,	// SAHF
    872423388U,	// SAR16m1
    872423394U,	// SAR16mCL
    136323036U,	// SAR16mi
    67117020U,	// SAR16r1
    67117026U,	// SAR16rCL
    205529052U,	// SAR16ri
    939532269U,	// SAR32m1
    939532275U,	// SAR32mCL
    140517357U,	// SAR32mi
    67117037U,	// SAR32r1
    67117043U,	// SAR32rCL
    205529069U,	// SAR32ri
    1610620926U,	// SAR64m1
    1610620932U,	// SAR64mCL
    142614526U,	// SAR64mi
    67117054U,	// SAR64r1
    67117060U,	// SAR64rCL
    205529086U,	// SAR64ri
    1744838671U,	// SAR8m1
    1744838677U,	// SAR8mCL
    144711695U,	// SAR8mi
    67117071U,	// SAR8r1
    67117077U,	// SAR8rCL
    205529103U,	// SAR8ri
    1221599264U,	// SARX32rm
    204513312U,	// SARX32rr
    1222647847U,	// SARX64rm
    204513319U,	// SARX64rr
    68165678U,	// SBB16i16
    136323118U,	// SBB16mi
    136323118U,	// SBB16mi8
    136323118U,	// SBB16mr
    204480558U,	// SBB16ri
    204480558U,	// SBB16ri8
    271589422U,	// SBB16rm
    204480558U,	// SBB16rr
    205529134U,	// SBB16rr_REV
    72359988U,	// SBB32i32
    140517428U,	// SBB32mi
    140517428U,	// SBB32mi8
    140517428U,	// SBB32mr
    204480564U,	// SBB32ri
    204480564U,	// SBB32ri8
    338698292U,	// SBB32rm
    204480564U,	// SBB32rr
    205529140U,	// SBB32rr_REV
    74457146U,	// SBB64i32
    142614586U,	// SBB64mi32
    142614586U,	// SBB64mi8
    142614586U,	// SBB64mr
    204480570U,	// SBB64ri32
    204480570U,	// SBB64ri8
    405807162U,	// SBB64rm
    204480570U,	// SBB64rr
    205529146U,	// SBB64rr_REV
    76554304U,	// SBB8i8
    144711744U,	// SBB8mi
    144711744U,	// SBB8mr
    204480576U,	// SBB8ri
    469770304U,	// SBB8rm
    204480576U,	// SBB8rr
    205529152U,	// SBB8rr_REV
    8262U,	// SCAS16
    8268U,	// SCAS32
    8274U,	// SCAS64
    8280U,	// SCAS8
    8286U,	// SEG_ALLOCA_32
    8286U,	// SEG_ALLOCA_64
    1744838795U,	// SETAEm
    67117195U,	// SETAEr
    1744838802U,	// SETAm
    67117202U,	// SETAr
    1744838808U,	// SETBEm
    67117208U,	// SETBEr
    0U,	// SETB_C16r
    0U,	// SETB_C32r
    0U,	// SETB_C64r
    0U,	// SETB_C8r
    1744838815U,	// SETBm
    67117215U,	// SETBr
    1744838821U,	// SETEm
    67117221U,	// SETEr
    1744838827U,	// SETGEm
    67117227U,	// SETGEr
    1744838834U,	// SETGm
    67117234U,	// SETGr
    1744838840U,	// SETLEm
    67117240U,	// SETLEr
    1744838847U,	// SETLm
    67117247U,	// SETLr
    1744838853U,	// SETNEm
    67117253U,	// SETNEr
    1744838860U,	// SETNOm
    67117260U,	// SETNOr
    1744838867U,	// SETNPm
    67117267U,	// SETNPr
    1744838874U,	// SETNSm
    67117274U,	// SETNSr
    1744838881U,	// SETOm
    67117281U,	// SETOr
    1744838887U,	// SETPm
    67117287U,	// SETPr
    1744838893U,	// SETSm
    67117293U,	// SETSr
    8435U,	// SFENCE
    2281709818U,	// SGDT16m
    2281709825U,	// SGDTm
    872423687U,	// SHL16m1
    872423693U,	// SHL16mCL
    136323335U,	// SHL16mi
    67117319U,	// SHL16r1
    67117325U,	// SHL16rCL
    205529351U,	// SHL16ri
    939532568U,	// SHL32m1
    939532574U,	// SHL32mCL
    140517656U,	// SHL32mi
    67117336U,	// SHL32r1
    67117342U,	// SHL32rCL
    205529368U,	// SHL32ri
    1610621225U,	// SHL64m1
    1610621231U,	// SHL64mCL
    142614825U,	// SHL64mi
    67117353U,	// SHL64r1
    67117359U,	// SHL64rCL
    205529385U,	// SHL64ri
    1744838970U,	// SHL8m1
    1744838976U,	// SHL8mCL
    144711994U,	// SHL8mi
    67117370U,	// SHL8r1
    67117376U,	// SHL8rCL
    205529402U,	// SHL8ri
    136323403U,	// SHLD16mrCL
    1233592663U,	// SHLD16mri8
    205529419U,	// SHLD16rrCL
    1346380119U,	// SHLD16rri8
    140517726U,	// SHLD32mrCL
    1233527146U,	// SHLD32mri8
    205529438U,	// SHLD32rrCL
    1346380138U,	// SHLD32rri8
    142614897U,	// SHLD64mrCL
    1233559933U,	// SHLD64mri8
    205529457U,	// SHLD64rrCL
    1346380157U,	// SHLD64rri8
    1221599620U,	// SHLX32rm
    204513668U,	// SHLX32rr
    1222648203U,	// SHLX64rm
    204513675U,	// SHLX64rr
    872423826U,	// SHR16m1
    872423832U,	// SHR16mCL
    136323474U,	// SHR16mi
    67117458U,	// SHR16r1
    67117464U,	// SHR16rCL
    205529490U,	// SHR16ri
    939532707U,	// SHR32m1
    939532713U,	// SHR32mCL
    140517795U,	// SHR32mi
    67117475U,	// SHR32r1
    67117481U,	// SHR32rCL
    205529507U,	// SHR32ri
    1610621364U,	// SHR64m1
    1610621370U,	// SHR64mCL
    142614964U,	// SHR64mi
    67117492U,	// SHR64r1
    67117498U,	// SHR64rCL
    205529524U,	// SHR64ri
    1744839109U,	// SHR8m1
    1744839115U,	// SHR8mCL
    144712133U,	// SHR8mi
    67117509U,	// SHR8r1
    67117515U,	// SHR8rCL
    205529541U,	// SHR8ri
    136323542U,	// SHRD16mrCL
    1233592802U,	// SHRD16mri8
    205529558U,	// SHRD16rrCL
    1346380258U,	// SHRD16rri8
    140517865U,	// SHRD32mrCL
    1233527285U,	// SHRD32mri8
    205529577U,	// SHRD32rrCL
    1346380277U,	// SHRD32rri8
    142615036U,	// SHRD64mrCL
    1233560072U,	// SHRD64mri8
    205529596U,	// SHRD64rrCL
    1346380296U,	// SHRD64rri8
    1221599759U,	// SHRX32rm
    204513807U,	// SHRX32rr
    1222648342U,	// SHRX64rm
    204513814U,	// SHRX64rr
    1294082589U,	// SHUFPDrmi
    1346380317U,	// SHUFPDrri
    1294082597U,	// SHUFPSrmi
    1346380325U,	// SHUFPSrri
    2281710125U,	// SIDT16m
    2281710132U,	// SIDTm
    8762U,	// SIN_F
    0U,	// SIN_Fp32
    0U,	// SIN_Fp64
    0U,	// SIN_Fp80
    872423999U,	// SLDT16m
    67117631U,	// SLDT16r
    67117638U,	// SLDT32r
    872424013U,	// SLDT64m
    67117645U,	// SLDT64r
    872424020U,	// SMSW16m
    67117652U,	// SMSW16r
    67117659U,	// SMSW32r
    67117666U,	// SMSW64r
    2080383593U,	// SQRTPDm
    2080383593U,	// SQRTPDm_Int
    1145053801U,	// SQRTPDr
    1145053801U,	// SQRTPDr_Int
    2080383601U,	// SQRTPSm
    2080383601U,	// SQRTPSm_Int
    1145053809U,	// SQRTPSr
    1145053809U,	// SQRTPSr_Int
    2147492473U,	// SQRTSDm
    2147492473U,	// SQRTSDm_Int
    1145053817U,	// SQRTSDr
    1145053817U,	// SQRTSDr_Int
    2214601345U,	// SQRTSSm
    2214601345U,	// SQRTSSm_Int
    1145053825U,	// SQRTSSr
    1145053825U,	// SQRTSSr_Int
    8841U,	// SQRT_F
    0U,	// SQRT_Fp32
    0U,	// SQRT_Fp64
    0U,	// SQRT_Fp80
    8847U,	// SS_PREFIX
    8850U,	// STC
    8854U,	// STD
    8858U,	// STI
    939532958U,	// STMXCSR
    8871U,	// STOSB
    8877U,	// STOSD
    8883U,	// STOSQ
    8889U,	// STOSW
    67117759U,	// STR16r
    67117765U,	// STR32r
    67117771U,	// STR64r
    872424127U,	// STRm
    738206417U,	// ST_F32m
    805315287U,	// ST_F64m
    738206429U,	// ST_FP32m
    805315300U,	// ST_FP64m
    2415928043U,	// ST_FP80m
    67117810U,	// ST_FPrr
    0U,	// ST_Fp32m
    0U,	// ST_Fp64m
    0U,	// ST_Fp64m32
    0U,	// ST_Fp80m32
    0U,	// ST_Fp80m64
    0U,	// ST_FpP32m
    0U,	// ST_FpP64m
    0U,	// ST_FpP64m32
    0U,	// ST_FpP80m
    0U,	// ST_FpP80m32
    0U,	// ST_FpP80m64
    67117816U,	// ST_Frr
    68166397U,	// SUB16i16
    136323837U,	// SUB16mi
    136323837U,	// SUB16mi8
    136323837U,	// SUB16mr
    204481277U,	// SUB16ri
    204481277U,	// SUB16ri8
    271590141U,	// SUB16rm
    204481277U,	// SUB16rr
    205529853U,	// SUB16rr_REV
    72360707U,	// SUB32i32
    140518147U,	// SUB32mi
    140518147U,	// SUB32mi8
    140518147U,	// SUB32mr
    204481283U,	// SUB32ri
    204481283U,	// SUB32ri8
    338699011U,	// SUB32rm
    204481283U,	// SUB32rr
    205529859U,	// SUB32rr_REV
    74457865U,	// SUB64i32
    142615305U,	// SUB64mi32
    142615305U,	// SUB64mi8
    142615305U,	// SUB64mr
    204481289U,	// SUB64ri32
    204481289U,	// SUB64ri8
    405807881U,	// SUB64rm
    204481289U,	// SUB64rr
    205529865U,	// SUB64rr_REV
    76555023U,	// SUB8i8
    144712463U,	// SUB8mi
    144712463U,	// SUB8mr
    204481295U,	// SUB8ri
    469771023U,	// SUB8rm
    204481295U,	// SUB8rr
    205529871U,	// SUB8rr_REV
    541074197U,	// SUBPDrm
    205529877U,	// SUBPDrr
    541074204U,	// SUBPSrm
    205529884U,	// SUBPSrr
    738206499U,	// SUBR_F32m
    805315371U,	// SUBR_F64m
    872424243U,	// SUBR_FI16m
    939533116U,	// SUBR_FI32m
    67117893U,	// SUBR_FPrST0
    67117900U,	// SUBR_FST0r
    0U,	// SUBR_Fp32m
    0U,	// SUBR_Fp64m
    0U,	// SUBR_Fp64m32
    0U,	// SUBR_Fp80m32
    0U,	// SUBR_Fp80m64
    0U,	// SUBR_FpI16m32
    0U,	// SUBR_FpI16m64
    0U,	// SUBR_FpI16m80
    0U,	// SUBR_FpI32m32
    0U,	// SUBR_FpI32m64
    0U,	// SUBR_FpI32m80
    67117907U,	// SUBR_FrST0
    608183137U,	// SUBSDrm
    608183137U,	// SUBSDrm_Int
    205529953U,	// SUBSDrr
    205529953U,	// SUBSDrr_Int
    675292008U,	// SUBSSrm
    675292008U,	// SUBSSrm_Int
    205529960U,	// SUBSSrr
    205529960U,	// SUBSSrr_Int
    738206575U,	// SUB_F32m
    805315446U,	// SUB_F64m
    872424317U,	// SUB_FI16m
    939533189U,	// SUB_FI32m
    67117965U,	// SUB_FPrST0
    67117973U,	// SUB_FST0r
    0U,	// SUB_Fp32
    0U,	// SUB_Fp32m
    0U,	// SUB_Fp64
    0U,	// SUB_Fp64m
    0U,	// SUB_Fp64m32
    0U,	// SUB_Fp80
    0U,	// SUB_Fp80m32
    0U,	// SUB_Fp80m64
    0U,	// SUB_FpI16m32
    0U,	// SUB_FpI16m64
    0U,	// SUB_FpI16m80
    0U,	// SUB_FpI32m32
    0U,	// SUB_FpI32m64
    0U,	// SUB_FpI32m80
    67117979U,	// SUB_FrST0
    9130U,	// SWAPGS
    9137U,	// SYSCALL
    9145U,	// SYSENTER
    9154U,	// SYSEXIT
    9163U,	// SYSEXIT64
    9172U,	// SYSRETL
    9180U,	// SYSRETQ
    1715474393U,	// TAILJMPd
    1715474393U,	// TAILJMPd64
    977276869U,	// TAILJMPm
    1648365516U,	// TAILJMPm64
    0U,	// TAILJMPr
    104861644U,	// TAILJMPr64
    0U,	// TCRETURNdi
    0U,	// TCRETURNdi64
    0U,	// TCRETURNmi
    0U,	// TCRETURNmi64
    0U,	// TCRETURNri
    0U,	// TCRETURNri64
    68166628U,	// TEST16i16
    136324068U,	// TEST16mi
    1145054180U,	// TEST16ri
    1543513060U,	// TEST16rm
    1145054180U,	// TEST16rr
    72360939U,	// TEST32i32
    140518379U,	// TEST32mi
    1145054187U,	// TEST32ri
    1409295339U,	// TEST32rm
    1145054187U,	// TEST32rr
    74458098U,	// TEST64i32
    142615538U,	// TEST64mi32
    1145054194U,	// TEST64ri32
    1476404210U,	// TEST64rm
    1145054194U,	// TEST64rr
    76555257U,	// TEST8i8
    144712697U,	// TEST8mi
    1145054201U,	// TEST8ri
    0U,	// TEST8ri_NOREX
    1811948537U,	// TEST8rm
    1145054201U,	// TEST8rr
    9216U,	// TLSCall_32
    9229U,	// TLSCall_64
    9242U,	// TLS_addr32
    9255U,	// TLS_addr64
    9268U,	// TRAP
    9272U,	// TST_F
    0U,	// TST_Fp32
    0U,	// TST_Fp64
    0U,	// TST_Fp80
    1543513149U,	// TZCNT16rm
    1145054269U,	// TZCNT16rr
    1409295429U,	// TZCNT32rm
    1145054277U,	// TZCNT32rr
    1476404301U,	// TZCNT64rm
    1145054285U,	// TZCNT64rr
    2147487426U,	// UCOMISDrm
    1145048770U,	// UCOMISDrr
    2214596299U,	// UCOMISSrm
    1145048779U,	// UCOMISSrr
    67118165U,	// UCOM_FIPr
    67118174U,	// UCOM_FIr
    9318U,	// UCOM_FPPr
    67118190U,	// UCOM_FPr
    0U,	// UCOM_FpIr32
    0U,	// UCOM_FpIr64
    0U,	// UCOM_FpIr80
    0U,	// UCOM_Fpr32
    0U,	// UCOM_Fpr64
    0U,	// UCOM_Fpr80
    67118198U,	// UCOM_Fr
    9341U,	// UD2B
    541074562U,	// UNPCKHPDrm
    205530242U,	// UNPCKHPDrr
    541074572U,	// UNPCKHPSrm
    205530252U,	// UNPCKHPSrr
    541074582U,	// UNPCKLPDrm
    205530262U,	// UNPCKLPDrr
    541074592U,	// UNPCKLPSrm
    205530272U,	// UNPCKLPSrr
    80192682U,	// VAARG_64
    2483037365U,	// VADDPDYrm
    204514485U,	// VADDPDYrr
    540058805U,	// VADDPDrm
    204514485U,	// VADDPDrr
    2483037373U,	// VADDPSYrm
    204514493U,	// VADDPSYrr
    540058813U,	// VADDPSrm
    204514493U,	// VADDPSrr
    607167685U,	// VADDSDrm
    607167685U,	// VADDSDrm_Int
    204514501U,	// VADDSDrr
    204514501U,	// VADDSDrr_Int
    674276557U,	// VADDSSrm
    674276557U,	// VADDSSrm_Int
    204514509U,	// VADDSSrr
    204514509U,	// VADDSSrr_Int
    2483037397U,	// VADDSUBPDYrm
    204514517U,	// VADDSUBPDYrr
    540058837U,	// VADDSUBPDrm
    204514517U,	// VADDSUBPDrr
    2483037408U,	// VADDSUBPSYrm
    204514528U,	// VADDSUBPSYrr
    540058848U,	// VADDSUBPSrm
    204514528U,	// VADDSUBPSrr
    1009820907U,	// VAESDECLASTrm
    204514539U,	// VAESDECLASTrr
    1009820920U,	// VAESDECrm
    204514552U,	// VAESDECrr
    1009820929U,	// VAESENCLASTrm
    204514561U,	// VAESENCLASTrr
    1009820942U,	// VAESENCrm
    204514574U,	// VAESENCrr
    1073751319U,	// VAESIMCrm
    1145054487U,	// VAESIMCrr
    1219503392U,	// VAESKEYGENASSIST128rm
    204514592U,	// VAESKEYGENASSIST128rr
    2483037490U,	// VANDNPDYrm
    204514610U,	// VANDNPDYrr
    540058930U,	// VANDNPDrm
    204514610U,	// VANDNPDrr
    2483037499U,	// VANDNPSYrm
    204514619U,	// VANDNPSYrr
    540058939U,	// VANDNPSrm
    204514619U,	// VANDNPSrr
    2483037508U,	// VANDPDYrm
    204514628U,	// VANDPDYrr
    540058948U,	// VANDPDrm
    204514628U,	// VANDPDrr
    2483037516U,	// VANDPSYrm
    204514636U,	// VANDPSYrr
    540058956U,	// VANDPSrm
    204514636U,	// VANDPSrr
    79799636U,	// VASTART_SAVE_XMM_REGS
    1313875308U,	// VBLENDPDYrmi
    1345365356U,	// VBLENDPDYrri
    1290904940U,	// VBLENDPDrmi
    1345365356U,	// VBLENDPDrri
    1313875318U,	// VBLENDPSYrmi
    1345365366U,	// VBLENDPSYrri
    1290904950U,	// VBLENDPSrmi
    1345365366U,	// VBLENDPSrri
    1313875328U,	// VBLENDVPDYrm
    1345365376U,	// VBLENDVPDYrr
    1290904960U,	// VBLENDVPDrm
    1345365376U,	// VBLENDVPDrr
    1313875339U,	// VBLENDVPSYrm
    1345365387U,	// VBLENDVPSYrr
    1290904971U,	// VBLENDVPSrm
    1345365387U,	// VBLENDVPSrr
    2080384406U,	// VBROADCASTF128
    1073751462U,	// VBROADCASTI128
    2147493302U,	// VBROADCASTSDrm
    1145054646U,	// VBROADCASTSDrr
    2214602180U,	// VBROADCASTSSYrm
    1145054660U,	// VBROADCASTSSYrr
    2214602180U,	// VBROADCASTSSrm
    1145054660U,	// VBROADCASTSSrr
    1897402068U,	// VCMPPDYrmi
    1314923986U,	// VCMPPDYrmi_alt
    1964183252U,	// VCMPPDYrri
    1345365458U,	// VCMPPDYrri_alt
    1897041620U,	// VCMPPDrmi
    1294050770U,	// VCMPPDrmi_alt
    1964183252U,	// VCMPPDrri
    1345365458U,	// VCMPPDrri_alt
    1899499220U,	// VCMPPSYrmi
    1314923994U,	// VCMPPSYrmi_alt
    1966280404U,	// VCMPPSYrri
    1345365466U,	// VCMPPSYrri_alt
    1899138772U,	// VCMPPSrmi
    1294050778U,	// VCMPPSrmi_alt
    1966280404U,	// VCMPPSrri
    1345365466U,	// VCMPPSrri_alt
    1900252884U,	// VCMPSDrm
    1297196514U,	// VCMPSDrm_alt
    1967328980U,	// VCMPSDrr
    1345365474U,	// VCMPSDrr_alt
    1902382804U,	// VCMPSSrm
    1299293674U,	// VCMPSSrm_alt
    1969426132U,	// VCMPSSrr
    1345365482U,	// VCMPSSrr_alt
    2080378585U,	// VCOMISDrm
    1145048793U,	// VCOMISDrr
    2080378594U,	// VCOMISSrm
    1145048802U,	// VCOMISSrr
    2080378603U,	// VCVTDQ2PDYrm
    1145048811U,	// VCVTDQ2PDYrr
    2080378603U,	// VCVTDQ2PDrm
    1145048811U,	// VCVTDQ2PDrr
    2550140662U,	// VCVTDQ2PSYrm
    1145048822U,	// VCVTDQ2PSYrr
    1073745654U,	// VCVTDQ2PSrm
    1145048822U,	// VCVTDQ2PSrr
    1145048833U,	// VCVTPD2DQXrYr
    2080384498U,	// VCVTPD2DQXrm
    1145054706U,	// VCVTPD2DQXrr
    2617255422U,	// VCVTPD2DQYrm
    1145054718U,	// VCVTPD2DQYrr
    1145048833U,	// VCVTPD2DQrr
    1145048844U,	// VCVTPD2PSXrYr
    2080384522U,	// VCVTPD2PSXrm
    1145054730U,	// VCVTPD2PSXrr
    2617255446U,	// VCVTPD2PSYrm
    1145054742U,	// VCVTPD2PSYrr
    1145048844U,	// VCVTPD2PSrr
    2080384546U,	// VCVTPH2PSYrm
    1145054754U,	// VCVTPH2PSYrr
    2147493410U,	// VCVTPH2PSrm
    1145054754U,	// VCVTPH2PSrr
    2617249559U,	// VCVTPS2DQYrm
    1145048855U,	// VCVTPS2DQYrr
    2080378647U,	// VCVTPS2DQrm
    1145048855U,	// VCVTPS2DQrr
    2080378658U,	// VCVTPS2PDYrm
    1145048866U,	// VCVTPS2PDYrr
    2147487522U,	// VCVTPS2PDrm
    1145048866U,	// VCVTPS2PDrr
    1233692205U,	// VCVTPS2PHYmr
    204514861U,	// VCVTPS2PHYrr
    1233724973U,	// VCVTPS2PHmr
    204514861U,	// VCVTPS2PHrr
    2147487533U,	// VCVTSD2SI64rm
    1145048877U,	// VCVTSD2SI64rr
    2147487533U,	// VCVTSD2SIrm
    1145048877U,	// VCVTSD2SIrr
    607162168U,	// VCVTSD2SSrm
    204508984U,	// VCVTSD2SSrr
    405841464U,	// VCVTSI2SD64rm
    204514872U,	// VCVTSI2SD64rr
    338732612U,	// VCVTSI2SDLrm
    204514884U,	// VCVTSI2SDLrr
    338726723U,	// VCVTSI2SDrm
    204508995U,	// VCVTSI2SDrr
    405841488U,	// VCVTSI2SS64rm
    204514896U,	// VCVTSI2SS64rr
    338726734U,	// VCVTSI2SSrm
    204509006U,	// VCVTSI2SSrr
    674271065U,	// VCVTSS2SDrm
    204509017U,	// VCVTSS2SDrr
    2214602332U,	// VCVTSS2SI64rm
    1145054812U,	// VCVTSS2SI64rr
    2214602343U,	// VCVTSS2SIrm
    1145054823U,	// VCVTSS2SIrr
    1145054835U,	// VCVTTPD2DQXrYr
    2080384639U,	// VCVTTPD2DQXrm
    1145054847U,	// VCVTTPD2DQXrr
    2617255564U,	// VCVTTPD2DQYrm
    1145054860U,	// VCVTTPD2DQYrr
    2080384627U,	// VCVTTPD2DQrm
    1145054835U,	// VCVTTPD2DQrr
    2617255577U,	// VCVTTPS2DQYrm
    1145054873U,	// VCVTTPS2DQYrr
    2080384665U,	// VCVTTPS2DQrm
    1145054873U,	// VCVTTPS2DQrr
    2147487588U,	// VCVTTSD2SI64rm
    1145048932U,	// VCVTTSD2SI64rr
    2147487588U,	// VCVTTSD2SIrm
    1145048932U,	// VCVTTSD2SIrr
    2214596464U,	// VCVTTSS2SI64rm
    1145048944U,	// VCVTTSS2SI64rr
    2214596464U,	// VCVTTSS2SIrm
    1145048944U,	// VCVTTSS2SIrr
    2483037861U,	// VDIVPDYrm
    204514981U,	// VDIVPDYrr
    540059301U,	// VDIVPDrm
    204514981U,	// VDIVPDrr
    2483037869U,	// VDIVPSYrm
    204514989U,	// VDIVPSYrr
    540059309U,	// VDIVPSrm
    204514989U,	// VDIVPSrr
    607168181U,	// VDIVSDrm
    607168181U,	// VDIVSDrm_Int
    204514997U,	// VDIVSDrr
    204514997U,	// VDIVSDrr_Int
    674277053U,	// VDIVSSrm
    674277053U,	// VDIVSSrm_Int
    204515005U,	// VDIVSSrr
    204515005U,	// VDIVSSrr_Int
    1290905285U,	// VDPPDrmi
    1345365701U,	// VDPPDrri
    1313875660U,	// VDPPSYrmi
    1345365708U,	// VDPPSYrri
    1290905292U,	// VDPPSrmi
    1345365708U,	// VDPPSrri
    872425171U,	// VERRm
    67118803U,	// VERRr
    872425177U,	// VERWm
    67118809U,	// VERWr
    1233692383U,	// VEXTRACTF128mr
    204515039U,	// VEXTRACTF128rr
    1233757933U,	// VEXTRACTI128mr
    204515053U,	// VEXTRACTI128rr
    1233430267U,	// VEXTRACTPSmr
    204515067U,	// VEXTRACTPSrr
    204515079U,	// VEXTRACTPSrr64
    1294051092U,	// VFMADDPD4mr
    1314924308U,	// VFMADDPD4mrY
    2684364564U,	// VFMADDPD4rm
    2751473428U,	// VFMADDPD4rmY
    1345365780U,	// VFMADDPD4rr
    1345365780U,	// VFMADDPD4rrY
    1345365780U,	// VFMADDPD4rrY_REV
    1345365780U,	// VFMADDPD4rr_REV
    540059422U,	// VFMADDPDr132m
    2483037982U,	// VFMADDPDr132mY
    204515102U,	// VFMADDPDr132r
    204515102U,	// VFMADDPDr132rY
    540059435U,	// VFMADDPDr213m
    2483037995U,	// VFMADDPDr213mY
    204515115U,	// VFMADDPDr213r
    204515115U,	// VFMADDPDr213rY
    540059448U,	// VFMADDPDr231m
    2483038008U,	// VFMADDPDr231mY
    204515128U,	// VFMADDPDr231r
    204515128U,	// VFMADDPDr231rY
    1294051141U,	// VFMADDPS4mr
    1314924357U,	// VFMADDPS4mrY
    2684364613U,	// VFMADDPS4rm
    2751473477U,	// VFMADDPS4rmY
    1345365829U,	// VFMADDPS4rr
    1345365829U,	// VFMADDPS4rrY
    1345365829U,	// VFMADDPS4rrY_REV
    1345365829U,	// VFMADDPS4rr_REV
    540059471U,	// VFMADDPSr132m
    2483038031U,	// VFMADDPSr132mY
    204515151U,	// VFMADDPSr132r
    204515151U,	// VFMADDPSr132rY
    540059484U,	// VFMADDPSr213m
    2483038044U,	// VFMADDPSr213mY
    204515164U,	// VFMADDPSr213r
    204515164U,	// VFMADDPSr213rY
    540059497U,	// VFMADDPSr231m
    2483038057U,	// VFMADDPSr231mY
    204515177U,	// VFMADDPSr231r
    204515177U,	// VFMADDPSr231rY
    1297196918U,	// VFMADDSD4mr
    2818582390U,	// VFMADDSD4rm
    1345365878U,	// VFMADDSD4rr
    1345365878U,	// VFMADDSD4rr_REV
    607168384U,	// VFMADDSDr132m
    204515200U,	// VFMADDSDr132r
    607168397U,	// VFMADDSDr213m
    204515213U,	// VFMADDSDr213r
    607168410U,	// VFMADDSDr231m
    204515226U,	// VFMADDSDr231r
    1299294119U,	// VFMADDSS4mr
    2885691303U,	// VFMADDSS4rm
    1345365927U,	// VFMADDSS4rr
    1345365927U,	// VFMADDSS4rr_REV
    674277297U,	// VFMADDSSr132m
    204515249U,	// VFMADDSSr132r
    674277310U,	// VFMADDSSr213m
    204515262U,	// VFMADDSSr213r
    674277323U,	// VFMADDSSr231m
    204515275U,	// VFMADDSSr231r
    1294051288U,	// VFMADDSUBPD4mr
    1314924504U,	// VFMADDSUBPD4mrY
    2684364760U,	// VFMADDSUBPD4rm
    2751473624U,	// VFMADDSUBPD4rmY
    1345365976U,	// VFMADDSUBPD4rr
    1345365976U,	// VFMADDSUBPD4rrY
    1345365976U,	// VFMADDSUBPD4rrY_REV
    1345365976U,	// VFMADDSUBPD4rr_REV
    540059621U,	// VFMADDSUBPDr132m
    2483038181U,	// VFMADDSUBPDr132mY
    204515301U,	// VFMADDSUBPDr132r
    204515301U,	// VFMADDSUBPDr132rY
    540059637U,	// VFMADDSUBPDr213m
    2483038197U,	// VFMADDSUBPDr213mY
    204515317U,	// VFMADDSUBPDr213r
    204515317U,	// VFMADDSUBPDr213rY
    540059653U,	// VFMADDSUBPDr231m
    2483038213U,	// VFMADDSUBPDr231mY
    204515333U,	// VFMADDSUBPDr231r
    204515333U,	// VFMADDSUBPDr231rY
    1294051349U,	// VFMADDSUBPS4mr
    1314924565U,	// VFMADDSUBPS4mrY
    2684364821U,	// VFMADDSUBPS4rm
    2751473685U,	// VFMADDSUBPS4rmY
    1345366037U,	// VFMADDSUBPS4rr
    1345366037U,	// VFMADDSUBPS4rrY
    1345366037U,	// VFMADDSUBPS4rrY_REV
    1345366037U,	// VFMADDSUBPS4rr_REV
    540059682U,	// VFMADDSUBPSr132m
    2483038242U,	// VFMADDSUBPSr132mY
    204515362U,	// VFMADDSUBPSr132r
    204515362U,	// VFMADDSUBPSr132rY
    540059698U,	// VFMADDSUBPSr213m
    2483038258U,	// VFMADDSUBPSr213mY
    204515378U,	// VFMADDSUBPSr213r
    204515378U,	// VFMADDSUBPSr213rY
    540059714U,	// VFMADDSUBPSr231m
    2483038274U,	// VFMADDSUBPSr231mY
    204515394U,	// VFMADDSUBPSr231r
    204515394U,	// VFMADDSUBPSr231rY
    1294051410U,	// VFMSUBADDPD4mr
    1314924626U,	// VFMSUBADDPD4mrY
    2684364882U,	// VFMSUBADDPD4rm
    2751473746U,	// VFMSUBADDPD4rmY
    1345366098U,	// VFMSUBADDPD4rr
    1345366098U,	// VFMSUBADDPD4rrY
    1345366098U,	// VFMSUBADDPD4rrY_REV
    1345366098U,	// VFMSUBADDPD4rr_REV
    540059743U,	// VFMSUBADDPDr132m
    2483038303U,	// VFMSUBADDPDr132mY
    204515423U,	// VFMSUBADDPDr132r
    204515423U,	// VFMSUBADDPDr132rY
    540059759U,	// VFMSUBADDPDr213m
    2483038319U,	// VFMSUBADDPDr213mY
    204515439U,	// VFMSUBADDPDr213r
    204515439U,	// VFMSUBADDPDr213rY
    540059775U,	// VFMSUBADDPDr231m
    2483038335U,	// VFMSUBADDPDr231mY
    204515455U,	// VFMSUBADDPDr231r
    204515455U,	// VFMSUBADDPDr231rY
    1294051471U,	// VFMSUBADDPS4mr
    1314924687U,	// VFMSUBADDPS4mrY
    2684364943U,	// VFMSUBADDPS4rm
    2751473807U,	// VFMSUBADDPS4rmY
    1345366159U,	// VFMSUBADDPS4rr
    1345366159U,	// VFMSUBADDPS4rrY
    1345366159U,	// VFMSUBADDPS4rrY_REV
    1345366159U,	// VFMSUBADDPS4rr_REV
    540059804U,	// VFMSUBADDPSr132m
    2483038364U,	// VFMSUBADDPSr132mY
    204515484U,	// VFMSUBADDPSr132r
    204515484U,	// VFMSUBADDPSr132rY
    540059820U,	// VFMSUBADDPSr213m
    2483038380U,	// VFMSUBADDPSr213mY
    204515500U,	// VFMSUBADDPSr213r
    204515500U,	// VFMSUBADDPSr213rY
    540059836U,	// VFMSUBADDPSr231m
    2483038396U,	// VFMSUBADDPSr231mY
    204515516U,	// VFMSUBADDPSr231r
    204515516U,	// VFMSUBADDPSr231rY
    1294051532U,	// VFMSUBPD4mr
    1314924748U,	// VFMSUBPD4mrY
    2684365004U,	// VFMSUBPD4rm
    2751473868U,	// VFMSUBPD4rmY
    1345366220U,	// VFMSUBPD4rr
    1345366220U,	// VFMSUBPD4rrY
    1345366220U,	// VFMSUBPD4rrY_REV
    1345366220U,	// VFMSUBPD4rr_REV
    540059862U,	// VFMSUBPDr132m
    2483038422U,	// VFMSUBPDr132mY
    204515542U,	// VFMSUBPDr132r
    204515542U,	// VFMSUBPDr132rY
    540059875U,	// VFMSUBPDr213m
    2483038435U,	// VFMSUBPDr213mY
    204515555U,	// VFMSUBPDr213r
    204515555U,	// VFMSUBPDr213rY
    540059888U,	// VFMSUBPDr231m
    2483038448U,	// VFMSUBPDr231mY
    204515568U,	// VFMSUBPDr231r
    204515568U,	// VFMSUBPDr231rY
    1294051581U,	// VFMSUBPS4mr
    1314924797U,	// VFMSUBPS4mrY
    2684365053U,	// VFMSUBPS4rm
    2751473917U,	// VFMSUBPS4rmY
    1345366269U,	// VFMSUBPS4rr
    1345366269U,	// VFMSUBPS4rrY
    1345366269U,	// VFMSUBPS4rrY_REV
    1345366269U,	// VFMSUBPS4rr_REV
    540059911U,	// VFMSUBPSr132m
    2483038471U,	// VFMSUBPSr132mY
    204515591U,	// VFMSUBPSr132r
    204515591U,	// VFMSUBPSr132rY
    540059924U,	// VFMSUBPSr213m
    2483038484U,	// VFMSUBPSr213mY
    204515604U,	// VFMSUBPSr213r
    204515604U,	// VFMSUBPSr213rY
    540059937U,	// VFMSUBPSr231m
    2483038497U,	// VFMSUBPSr231mY
    204515617U,	// VFMSUBPSr231r
    204515617U,	// VFMSUBPSr231rY
    1297197358U,	// VFMSUBSD4mr
    2818582830U,	// VFMSUBSD4rm
    1345366318U,	// VFMSUBSD4rr
    1345366318U,	// VFMSUBSD4rr_REV
    607168824U,	// VFMSUBSDr132m
    204515640U,	// VFMSUBSDr132r
    607168837U,	// VFMSUBSDr213m
    204515653U,	// VFMSUBSDr213r
    607168850U,	// VFMSUBSDr231m
    204515666U,	// VFMSUBSDr231r
    1299294559U,	// VFMSUBSS4mr
    2885691743U,	// VFMSUBSS4rm
    1345366367U,	// VFMSUBSS4rr
    1345366367U,	// VFMSUBSS4rr_REV
    674277737U,	// VFMSUBSSr132m
    204515689U,	// VFMSUBSSr132r
    674277750U,	// VFMSUBSSr213m
    204515702U,	// VFMSUBSSr213r
    674277763U,	// VFMSUBSSr231m
    204515715U,	// VFMSUBSSr231r
    1294051728U,	// VFNMADDPD4mr
    1314924944U,	// VFNMADDPD4mrY
    2684365200U,	// VFNMADDPD4rm
    2751474064U,	// VFNMADDPD4rmY
    1345366416U,	// VFNMADDPD4rr
    1345366416U,	// VFNMADDPD4rrY
    1345366416U,	// VFNMADDPD4rrY_REV
    1345366416U,	// VFNMADDPD4rr_REV
    540060059U,	// VFNMADDPDr132m
    2483038619U,	// VFNMADDPDr132mY
    204515739U,	// VFNMADDPDr132r
    204515739U,	// VFNMADDPDr132rY
    540060073U,	// VFNMADDPDr213m
    2483038633U,	// VFNMADDPDr213mY
    204515753U,	// VFNMADDPDr213r
    204515753U,	// VFNMADDPDr213rY
    540060087U,	// VFNMADDPDr231m
    2483038647U,	// VFNMADDPDr231mY
    204515767U,	// VFNMADDPDr231r
    204515767U,	// VFNMADDPDr231rY
    1294051781U,	// VFNMADDPS4mr
    1314924997U,	// VFNMADDPS4mrY
    2684365253U,	// VFNMADDPS4rm
    2751474117U,	// VFNMADDPS4rmY
    1345366469U,	// VFNMADDPS4rr
    1345366469U,	// VFNMADDPS4rrY
    1345366469U,	// VFNMADDPS4rrY_REV
    1345366469U,	// VFNMADDPS4rr_REV
    540060112U,	// VFNMADDPSr132m
    2483038672U,	// VFNMADDPSr132mY
    204515792U,	// VFNMADDPSr132r
    204515792U,	// VFNMADDPSr132rY
    540060126U,	// VFNMADDPSr213m
    2483038686U,	// VFNMADDPSr213mY
    204515806U,	// VFNMADDPSr213r
    204515806U,	// VFNMADDPSr213rY
    540060140U,	// VFNMADDPSr231m
    2483038700U,	// VFNMADDPSr231mY
    204515820U,	// VFNMADDPSr231r
    204515820U,	// VFNMADDPSr231rY
    1297197562U,	// VFNMADDSD4mr
    2818583034U,	// VFNMADDSD4rm
    1345366522U,	// VFNMADDSD4rr
    1345366522U,	// VFNMADDSD4rr_REV
    607169029U,	// VFNMADDSDr132m
    204515845U,	// VFNMADDSDr132r
    607169043U,	// VFNMADDSDr213m
    204515859U,	// VFNMADDSDr213r
    607169057U,	// VFNMADDSDr231m
    204515873U,	// VFNMADDSDr231r
    1299294767U,	// VFNMADDSS4mr
    2885691951U,	// VFNMADDSS4rm
    1345366575U,	// VFNMADDSS4rr
    1345366575U,	// VFNMADDSS4rr_REV
    674277946U,	// VFNMADDSSr132m
    204515898U,	// VFNMADDSSr132r
    674277960U,	// VFNMADDSSr213m
    204515912U,	// VFNMADDSSr213r
    674277974U,	// VFNMADDSSr231m
    204515926U,	// VFNMADDSSr231r
    1294051940U,	// VFNMSUBPD4mr
    1314925156U,	// VFNMSUBPD4mrY
    2684365412U,	// VFNMSUBPD4rm
    2751474276U,	// VFNMSUBPD4rmY
    1345366628U,	// VFNMSUBPD4rr
    1345366628U,	// VFNMSUBPD4rrY
    1345366628U,	// VFNMSUBPD4rrY_REV
    1345366628U,	// VFNMSUBPD4rr_REV
    540060271U,	// VFNMSUBPDr132m
    2483038831U,	// VFNMSUBPDr132mY
    204515951U,	// VFNMSUBPDr132r
    204515951U,	// VFNMSUBPDr132rY
    540060285U,	// VFNMSUBPDr213m
    2483038845U,	// VFNMSUBPDr213mY
    204515965U,	// VFNMSUBPDr213r
    204515965U,	// VFNMSUBPDr213rY
    540060299U,	// VFNMSUBPDr231m
    2483038859U,	// VFNMSUBPDr231mY
    204515979U,	// VFNMSUBPDr231r
    204515979U,	// VFNMSUBPDr231rY
    1294051993U,	// VFNMSUBPS4mr
    1314925209U,	// VFNMSUBPS4mrY
    2684365465U,	// VFNMSUBPS4rm
    2751474329U,	// VFNMSUBPS4rmY
    1345366681U,	// VFNMSUBPS4rr
    1345366681U,	// VFNMSUBPS4rrY
    1345366681U,	// VFNMSUBPS4rrY_REV
    1345366681U,	// VFNMSUBPS4rr_REV
    540060324U,	// VFNMSUBPSr132m
    2483038884U,	// VFNMSUBPSr132mY
    204516004U,	// VFNMSUBPSr132r
    204516004U,	// VFNMSUBPSr132rY
    540060338U,	// VFNMSUBPSr213m
    2483038898U,	// VFNMSUBPSr213mY
    204516018U,	// VFNMSUBPSr213r
    204516018U,	// VFNMSUBPSr213rY
    540060352U,	// VFNMSUBPSr231m
    2483038912U,	// VFNMSUBPSr231mY
    204516032U,	// VFNMSUBPSr231r
    204516032U,	// VFNMSUBPSr231rY
    1297197774U,	// VFNMSUBSD4mr
    2818583246U,	// VFNMSUBSD4rm
    1345366734U,	// VFNMSUBSD4rr
    1345366734U,	// VFNMSUBSD4rr_REV
    607169241U,	// VFNMSUBSDr132m
    204516057U,	// VFNMSUBSDr132r
    607169255U,	// VFNMSUBSDr213m
    204516071U,	// VFNMSUBSDr213r
    607169269U,	// VFNMSUBSDr231m
    204516085U,	// VFNMSUBSDr231r
    1299294979U,	// VFNMSUBSS4mr
    2885692163U,	// VFNMSUBSS4rm
    1345366787U,	// VFNMSUBSS4rr
    1345366787U,	// VFNMSUBSS4rr_REV
    674278158U,	// VFNMSUBSSr132m
    204516110U,	// VFNMSUBSSr132r
    674278172U,	// VFNMSUBSSr213m
    204516124U,	// VFNMSUBSSr213r
    674278186U,	// VFNMSUBSSr231m
    204516138U,	// VFNMSUBSSr231r
    2080385848U,	// VFRCZPDrm
    2617256760U,	// VFRCZPDrmY
    1145056056U,	// VFRCZPDrr
    1145056056U,	// VFRCZPDrrY
    2080385857U,	// VFRCZPSrm
    2617256769U,	// VFRCZPSrmY
    1145056065U,	// VFRCZPSrr
    1145056065U,	// VFRCZPSrrY
    608185162U,	// VFRCZSDrm
    205531978U,	// VFRCZSDrr
    675294035U,	// VFRCZSSrm
    205531987U,	// VFRCZSSrr
    540058930U,	// VFsANDNPDrm
    204514610U,	// VFsANDNPDrr
    540058939U,	// VFsANDNPSrm
    204514619U,	// VFsANDNPSrr
    540058948U,	// VFsANDPDrm
    204514628U,	// VFsANDPDrr
    540058956U,	// VFsANDPSrm
    204514636U,	// VFsANDPSrr
    540060508U,	// VFsORPDrm
    204516188U,	// VFsORPDrr
    540060515U,	// VFsORPSrm
    204516195U,	// VFsORPSrr
    540060522U,	// VFsXORPDrm
    204516202U,	// VFsXORPDrr
    540060530U,	// VFsXORPSrm
    204516210U,	// VFsXORPSrr
    2483039098U,	// VHADDPDYrm
    204516218U,	// VHADDPDYrr
    540060538U,	// VHADDPDrm
    204516218U,	// VHADDPDrr
    2483039107U,	// VHADDPSYrm
    204516227U,	// VHADDPSYrr
    540060547U,	// VHADDPSrm
    204516227U,	// VHADDPSrr
    2483039116U,	// VHSUBPDYrm
    204516236U,	// VHSUBPDYrr
    540060556U,	// VHSUBPDrm
    204516236U,	// VHSUBPDrr
    2483039125U,	// VHSUBPSYrm
    204516245U,	// VHSUBPSYrr
    540060565U,	// VHSUBPSrm
    204516245U,	// VHSUBPSrr
    1294052254U,	// VINSERTF128rm
    1345366942U,	// VINSERTF128rr
    1290906539U,	// VINSERTI128rm
    1345366955U,	// VINSERTI128rr
    1299295160U,	// VINSERTPSrm
    1345366968U,	// VINSERTPSrr
    2550148035U,	// VLDDQUYrm
    1073753027U,	// VLDDQUrm
    939535307U,	// VLDMXCSR
    1145056213U,	// VMASKMOVDQU
    1145056213U,	// VMASKMOVDQU64
    1233791970U,	// VMASKMOVPDYmr
    2483039202U,	// VMASKMOVPDYrm
    1233693666U,	// VMASKMOVPDmr
    540060642U,	// VMASKMOVPDrm
    1233791982U,	// VMASKMOVPSYmr
    2483039214U,	// VMASKMOVPSYrm
    1233693678U,	// VMASKMOVPSmr
    540060654U,	// VMASKMOVPSrm
    2483039226U,	// VMAXPDYrm
    2483039226U,	// VMAXPDYrm_Int
    204516346U,	// VMAXPDYrr
    204516346U,	// VMAXPDYrr_Int
    540060666U,	// VMAXPDrm
    540060666U,	// VMAXPDrm_Int
    204516346U,	// VMAXPDrr
    204516346U,	// VMAXPDrr_Int
    2483039234U,	// VMAXPSYrm
    2483039234U,	// VMAXPSYrm_Int
    204516354U,	// VMAXPSYrr
    204516354U,	// VMAXPSYrr_Int
    540060674U,	// VMAXPSrm
    540060674U,	// VMAXPSrm_Int
    204516354U,	// VMAXPSrr
    204516354U,	// VMAXPSrr_Int
    607169546U,	// VMAXSDrm
    607169546U,	// VMAXSDrm_Int
    204516362U,	// VMAXSDrr
    204516362U,	// VMAXSDrr_Int
    674278418U,	// VMAXSSrm
    674278418U,	// VMAXSSrm_Int
    204516370U,	// VMAXSSrr
    204516370U,	// VMAXSSrr_Int
    11290U,	// VMCALL
    1610624033U,	// VMCLEARm
    2483039274U,	// VMINPDYrm
    2483039274U,	// VMINPDYrm_Int
    204516394U,	// VMINPDYrr
    204516394U,	// VMINPDYrr_Int
    540060714U,	// VMINPDrm
    540060714U,	// VMINPDrm_Int
    204516394U,	// VMINPDrr
    204516394U,	// VMINPDrr_Int
    2483039282U,	// VMINPSYrm
    2483039282U,	// VMINPSYrm_Int
    204516402U,	// VMINPSYrr
    204516402U,	// VMINPSYrr_Int
    540060722U,	// VMINPSrm
    540060722U,	// VMINPSrm_Int
    204516402U,	// VMINPSrr
    204516402U,	// VMINPSrr_Int
    607169594U,	// VMINSDrm
    607169594U,	// VMINSDrm_Int
    204516410U,	// VMINSDrr
    204516410U,	// VMINSDrr_Int
    674278466U,	// VMINSSrm
    674278466U,	// VMINSSrm_Int
    204516418U,	// VMINSSrr
    204516418U,	// VMINSSrr_Int
    11338U,	// VMLAUNCH
    1145056339U,	// VMOV64toPQIrr
    1476406362U,	// VMOV64toSDrm
    1145056339U,	// VMOV64toSDrr
    175115566U,	// VMOVAPDYmr
    2617249070U,	// VMOVAPDYrm
    1145048366U,	// VMOVAPDYrr
    1145048366U,	// VMOVAPDYrr_REV
    166726958U,	// VMOVAPDmr
    2080378158U,	// VMOVAPDrm
    1145048366U,	// VMOVAPDrr
    1145048366U,	// VMOVAPDrr_REV
    175115575U,	// VMOVAPSYmr
    2617249079U,	// VMOVAPSYrm
    1145048375U,	// VMOVAPSYrr
    1145048375U,	// VMOVAPSYrr_REV
    166726967U,	// VMOVAPSmr
    2080378167U,	// VMOVAPSrm
    1145048375U,	// VMOVAPSrr
    1145048375U,	// VMOVAPSrr_REV
    2617257057U,	// VMOVDDUPYrm
    1145056353U,	// VMOVDDUPYrr
    2147495009U,	// VMOVDDUPrm
    1145056353U,	// VMOVDDUPrr
    1409297491U,	// VMOVDI2PDIrm
    1145056339U,	// VMOVDI2PDIrr
    1409297491U,	// VMOVDI2SSrm
    1145056339U,	// VMOVDI2SSrr
    176172139U,	// VMOVDQAYmr
    2550148203U,	// VMOVDQAYrm
    1145056363U,	// VMOVDQAYrr
    1145056363U,	// VMOVDQAYrr_REV
    167783531U,	// VMOVDQAmr
    1073753195U,	// VMOVDQArm
    1145056363U,	// VMOVDQArr
    1145056363U,	// VMOVDQArr_REV
    176172148U,	// VMOVDQUYmr
    2550148212U,	// VMOVDQUYrm
    1145056372U,	// VMOVDQUYrr
    1145056372U,	// VMOVDQUYrr_REV
    167783540U,	// VMOVDQUmr
    167783540U,	// VMOVDQUmr_Int
    1073753204U,	// VMOVDQUrm
    1145056372U,	// VMOVDQUrr
    1145056372U,	// VMOVDQUrr_REV
    204516477U,	// VMOVHLPSrr
    168832135U,	// VMOVHPDmr
    607169671U,	// VMOVHPDrm
    168832144U,	// VMOVHPSmr
    607169680U,	// VMOVHPSrm
    204516505U,	// VMOVLHPSrr
    168832163U,	// VMOVLPDmr
    607169699U,	// VMOVLPDrm
    168832172U,	// VMOVLPSmr
    607169708U,	// VMOVLPSrm
    142617690U,	// VMOVLQ128mr
    1145056437U,	// VMOVMSKPDYr64r
    1145056437U,	// VMOVMSKPDYrr32
    1145056437U,	// VMOVMSKPDYrr64
    1145056437U,	// VMOVMSKPDr64r
    1145056437U,	// VMOVMSKPDrr32
    1145056437U,	// VMOVMSKPDrr64
    1145056448U,	// VMOVMSKPSYr64r
    1145056448U,	// VMOVMSKPSYrr32
    1145056448U,	// VMOVMSKPSYrr64
    1145056448U,	// VMOVMSKPSr64r
    1145056448U,	// VMOVMSKPSrr32
    1145056448U,	// VMOVMSKPSrr64
    2550148299U,	// VMOVNTDQAYrm
    1073753291U,	// VMOVNTDQArm
    175123670U,	// VMOVNTDQYmr
    166735062U,	// VMOVNTDQmr
    175123680U,	// VMOVNTPDYmr
    166735072U,	// VMOVNTPDmr
    175123690U,	// VMOVNTPSYmr
    166735082U,	// VMOVNTPSmr
    140520531U,	// VMOVPDI2DImr
    1145056339U,	// VMOVPDI2DIrr
    142617690U,	// VMOVPQI2QImr
    1145050072U,	// VMOVPQIto64rr
    1476406362U,	// VMOVQI2PQIrm
    1145056346U,	// VMOVQd64rr
    1145056339U,	// VMOVQd64rr_alt
    1145056346U,	// VMOVQs64rr
    1145056346U,	// VMOVQxrxr
    168832244U,	// VMOVSDmr
    2147495156U,	// VMOVSDrm
    204516596U,	// VMOVSDrr
    204516596U,	// VMOVSDrr_REV
    142617690U,	// VMOVSDto64mr
    1145056339U,	// VMOVSDto64rr
    2617257212U,	// VMOVSHDUPYrm
    1145056508U,	// VMOVSHDUPYrr
    2080386300U,	// VMOVSHDUPrm
    1145056508U,	// VMOVSHDUPrr
    2617257223U,	// VMOVSLDUPYrm
    1145056519U,	// VMOVSLDUPYrr
    2080386311U,	// VMOVSLDUPrm
    1145056519U,	// VMOVSLDUPrr
    140520531U,	// VMOVSS2DImr
    1145056339U,	// VMOVSS2DIrr
    169880850U,	// VMOVSSmr
    2214604050U,	// VMOVSSrm
    204516626U,	// VMOVSSrr
    204516626U,	// VMOVSSrr_REV
    175123738U,	// VMOVUPDYmr
    2617257242U,	// VMOVUPDYrm
    1145056538U,	// VMOVUPDYrr
    1145056538U,	// VMOVUPDYrr_REV
    166735130U,	// VMOVUPDmr
    2080386330U,	// VMOVUPDrm
    1145056538U,	// VMOVUPDrr
    1145056538U,	// VMOVUPDrr_REV
    175123747U,	// VMOVUPSYmr
    2617257251U,	// VMOVUPSYrm
    1145056547U,	// VMOVUPSYrr
    1145056547U,	// VMOVUPSYrr_REV
    166735139U,	// VMOVUPSmr
    2080386339U,	// VMOVUPSrm
    1145056547U,	// VMOVUPSrr
    1145056547U,	// VMOVUPSrr_REV
    1409297491U,	// VMOVZDI2PDIrm
    1145056339U,	// VMOVZDI2PDIrr
    1073753178U,	// VMOVZPQILo2PQIrm
    1145056346U,	// VMOVZPQILo2PQIrr
    1476406362U,	// VMOVZQI2PQIrm
    1145056339U,	// VMOVZQI2PQIrr
    1313877292U,	// VMPSADBWYrmi
    1345367340U,	// VMPSADBWYrri
    1290906924U,	// VMPSADBWrmi
    1345367340U,	// VMPSADBWrri
    1610624310U,	// VMPTRLDm
    1610624319U,	// VMPTRSTm
    140520776U,	// VMREAD32rm
    1145056584U,	// VMREAD32rr
    142617937U,	// VMREAD64rm
    1145056593U,	// VMREAD64rr
    11610U,	// VMRESUME
    2483039587U,	// VMULPDYrm
    204516707U,	// VMULPDYrr
    540061027U,	// VMULPDrm
    204516707U,	// VMULPDrr
    2483039595U,	// VMULPSYrm
    204516715U,	// VMULPSYrr
    540061035U,	// VMULPSrm
    204516715U,	// VMULPSrr
    607169907U,	// VMULSDrm
    607169907U,	// VMULSDrm_Int
    204516723U,	// VMULSDrr
    204516723U,	// VMULSDrr_Int
    674278779U,	// VMULSSrm
    674278779U,	// VMULSSrm_Int
    204516731U,	// VMULSSrr
    204516731U,	// VMULSSrr_Int
    1409297795U,	// VMWRITE32rm
    1145056643U,	// VMWRITE32rr
    1476406669U,	// VMWRITE64rm
    1145056653U,	// VMWRITE64rr
    11671U,	// VMXOFF
    1610624414U,	// VMXON
    2483039068U,	// VORPDYrm
    204516188U,	// VORPDYrr
    540060508U,	// VORPDrm
    204516188U,	// VORPDrr
    2483039075U,	// VORPSYrm
    204516195U,	// VORPSYrr
    540060515U,	// VORPSrm
    204516195U,	// VORPSrr
    1073753509U,	// VPABSBrm128
    2550148517U,	// VPABSBrm256
    1145056677U,	// VPABSBrr128
    1145056677U,	// VPABSBrr256
    1073753517U,	// VPABSDrm128
    2550148525U,	// VPABSDrm256
    1145056685U,	// VPABSDrr128
    1145056685U,	// VPABSDrr256
    1073753525U,	// VPABSWrm128
    2550148533U,	// VPABSWrm256
    1145056693U,	// VPABSWrr128
    1145056693U,	// VPABSWrr256
    2952801725U,	// VPACKSSDWYrm
    204516797U,	// VPACKSSDWYrr
    1009823165U,	// VPACKSSDWrm
    204516797U,	// VPACKSSDWrr
    2952801736U,	// VPACKSSWBYrm
    204516808U,	// VPACKSSWBYrr
    1009823176U,	// VPACKSSWBrm
    204516808U,	// VPACKSSWBrr
    2952801747U,	// VPACKUSDWYrm
    204516819U,	// VPACKUSDWYrr
    1009823187U,	// VPACKUSDWrm
    204516819U,	// VPACKUSDWrr
    2952801758U,	// VPACKUSWBYrm
    204516830U,	// VPACKUSWBYrr
    1009823198U,	// VPACKUSWBrm
    204516830U,	// VPACKUSWBrr
    2952801769U,	// VPADDBYrm
    204516841U,	// VPADDBYrr
    1009823209U,	// VPADDBrm
    204516841U,	// VPADDBrr
    2952801777U,	// VPADDDYrm
    204516849U,	// VPADDDYrr
    1009823217U,	// VPADDDrm
    204516849U,	// VPADDDrr
    2952801785U,	// VPADDQYrm
    204516857U,	// VPADDQYrr
    1009823225U,	// VPADDQrm
    204516857U,	// VPADDQrr
    2952801793U,	// VPADDSBYrm
    204516865U,	// VPADDSBYrr
    1009823233U,	// VPADDSBrm
    204516865U,	// VPADDSBrr
    2952801802U,	// VPADDSWYrm
    204516874U,	// VPADDSWYrr
    1009823242U,	// VPADDSWrm
    204516874U,	// VPADDSWrr
    2952801811U,	// VPADDUSBYrm
    204516883U,	// VPADDUSBYrr
    1009823251U,	// VPADDUSBrm
    204516883U,	// VPADDUSBrr
    2952801821U,	// VPADDUSWYrm
    204516893U,	// VPADDUSWYrr
    1009823261U,	// VPADDUSWrm
    204516893U,	// VPADDUSWrr
    2952801831U,	// VPADDWYrm
    204516903U,	// VPADDWYrr
    1009823271U,	// VPADDWrm
    204516903U,	// VPADDWrr
    1290907183U,	// VPALIGNR128rm
    1345367599U,	// VPALIGNR128rr
    1313877551U,	// VPALIGNR256rm
    1345367599U,	// VPALIGNR256rr
    2952801849U,	// VPANDNYrm
    204516921U,	// VPANDNYrr
    1009823289U,	// VPANDNrm
    204516921U,	// VPANDNrr
    2952801857U,	// VPANDYrm
    204516929U,	// VPANDYrr
    1009823297U,	// VPANDrm
    204516929U,	// VPANDrr
    2952801864U,	// VPAVGBYrm
    204516936U,	// VPAVGBYrr
    1009823304U,	// VPAVGBrm
    204516936U,	// VPAVGBrr
    2952801872U,	// VPAVGWYrm
    204516944U,	// VPAVGWYrr
    1009823312U,	// VPAVGWrm
    204516944U,	// VPAVGWrr
    1313877592U,	// VPBLENDDYrmi
    1345367640U,	// VPBLENDDYrri
    1290907224U,	// VPBLENDDrmi
    1345367640U,	// VPBLENDDrri
    1313877602U,	// VPBLENDVBYrm
    1345367650U,	// VPBLENDVBYrr
    1290907234U,	// VPBLENDVBrm
    1345367650U,	// VPBLENDVBrr
    1313877613U,	// VPBLENDWYrmi
    1345367661U,	// VPBLENDWYrri
    1290907245U,	// VPBLENDWrmi
    1345367661U,	// VPBLENDWrri
    1811951223U,	// VPBROADCASTBYrm
    1145056887U,	// VPBROADCASTBYrr
    1811951223U,	// VPBROADCASTBrm
    1145056887U,	// VPBROADCASTBrr
    1409298053U,	// VPBROADCASTDYrm
    1145056901U,	// VPBROADCASTDYrr
    1409298053U,	// VPBROADCASTDrm
    1145056901U,	// VPBROADCASTDrr
    1476406931U,	// VPBROADCASTQYrm
    1145056915U,	// VPBROADCASTQYrr
    1476406931U,	// VPBROADCASTQrm
    1145056915U,	// VPBROADCASTQrr
    1543515809U,	// VPBROADCASTWYrm
    1145056929U,	// VPBROADCASTWYrr
    1543515809U,	// VPBROADCASTWrm
    1145056929U,	// VPBROADCASTWrr
    1290907311U,	// VPCLMULQDQrm
    1345367727U,	// VPCLMULQDQrr
    1294053051U,	// VPCMOVmr
    1314926267U,	// VPCMOVmrY
    2684366523U,	// VPCMOVrm
    2751475387U,	// VPCMOVrmY
    1345367739U,	// VPCMOVrr
    1345367739U,	// VPCMOVrrY
    2952801987U,	// VPCMPEQBYrm
    204517059U,	// VPCMPEQBYrr
    1009823427U,	// VPCMPEQBrm
    204517059U,	// VPCMPEQBrr
    2952801997U,	// VPCMPEQDYrm
    204517069U,	// VPCMPEQDYrr
    1009823437U,	// VPCMPEQDrm
    204517069U,	// VPCMPEQDrr
    2952802007U,	// VPCMPEQQYrm
    204517079U,	// VPCMPEQQYrr
    1009823447U,	// VPCMPEQQrm
    204517079U,	// VPCMPEQQrr
    2952802017U,	// VPCMPEQWYrm
    204517089U,	// VPCMPEQWYrr
    1009823457U,	// VPCMPEQWrm
    204517089U,	// VPCMPEQWrr
    1219505899U,	// VPCMPESTRIArm
    204517099U,	// VPCMPESTRIArr
    1219505899U,	// VPCMPESTRICrm
    204517099U,	// VPCMPESTRICrr
    1219505899U,	// VPCMPESTRIOrm
    204517099U,	// VPCMPESTRIOrr
    1219505899U,	// VPCMPESTRISrm
    204517099U,	// VPCMPESTRISrr
    1219505899U,	// VPCMPESTRIZrm
    204517099U,	// VPCMPESTRIZrr
    1219505899U,	// VPCMPESTRIrm
    204517099U,	// VPCMPESTRIrr
    0U,	// VPCMPESTRM128MEM
    0U,	// VPCMPESTRM128REG
    1219505911U,	// VPCMPESTRM128rm
    204517111U,	// VPCMPESTRM128rr
    2952802051U,	// VPCMPGTBYrm
    204517123U,	// VPCMPGTBYrr
    1009823491U,	// VPCMPGTBrm
    204517123U,	// VPCMPGTBrr
    2952802061U,	// VPCMPGTDYrm
    204517133U,	// VPCMPGTDYrr
    1009823501U,	// VPCMPGTDrm
    204517133U,	// VPCMPGTDrr
    2952802071U,	// VPCMPGTQYrm
    204517143U,	// VPCMPGTQYrr
    1009823511U,	// VPCMPGTQrm
    204517143U,	// VPCMPGTQrr
    2952802081U,	// VPCMPGTWYrm
    204517153U,	// VPCMPGTWYrr
    1009823521U,	// VPCMPGTWrm
    204517153U,	// VPCMPGTWrr
    1219505963U,	// VPCMPISTRIArm
    204517163U,	// VPCMPISTRIArr
    1219505963U,	// VPCMPISTRICrm
    204517163U,	// VPCMPISTRICrr
    1219505963U,	// VPCMPISTRIOrm
    204517163U,	// VPCMPISTRIOrr
    1219505963U,	// VPCMPISTRISrm
    204517163U,	// VPCMPISTRISrr
    1219505963U,	// VPCMPISTRIZrm
    204517163U,	// VPCMPISTRIZrr
    1219505963U,	// VPCMPISTRIrm
    204517163U,	// VPCMPISTRIrr
    0U,	// VPCMPISTRM128MEM
    0U,	// VPCMPISTRM128REG
    1219505975U,	// VPCMPISTRM128rm
    204517175U,	// VPCMPISTRM128rr
    1294053187U,	// VPCOMBmi
    1345367875U,	// VPCOMBri
    1294053195U,	// VPCOMDmi
    1345367883U,	// VPCOMDri
    1294053203U,	// VPCOMQmi
    1345367891U,	// VPCOMQri
    1294053211U,	// VPCOMUBmi
    1345367899U,	// VPCOMUBri
    1294053220U,	// VPCOMUDmi
    1345367908U,	// VPCOMUDri
    1294053229U,	// VPCOMUQmi
    1345367917U,	// VPCOMUQri
    1294053238U,	// VPCOMUWmi
    1345367926U,	// VPCOMUWri
    1294053247U,	// VPCOMWmi
    1345367935U,	// VPCOMWri
    1314926471U,	// VPERM2F128rm
    1345367943U,	// VPERM2F128rr
    1314926483U,	// VPERM2I128rm
    1345367955U,	// VPERM2I128rr
    2952802207U,	// VPERMDYrm
    204517279U,	// VPERMDYrr
    3063066535U,	// VPERMIL2PDmr
    3063426983U,	// VPERMIL2PDmrY
    3063951271U,	// VPERMIL2PDrm
    3064999847U,	// VPERMIL2PDrmY
    3087019943U,	// VPERMIL2PDrr
    3087019943U,	// VPERMIL2PDrrY
    3063066547U,	// VPERMIL2PSmr
    3063426995U,	// VPERMIL2PSmrY
    3063951283U,	// VPERMIL2PSrm
    3064999859U,	// VPERMIL2PSrmY
    3087019955U,	// VPERMIL2PSrr
    3087019955U,	// VPERMIL2PSrrY
    1254109119U,	// VPERMILPDYmi
    204517311U,	// VPERMILPDYri
    2952802239U,	// VPERMILPDYrm
    204517311U,	// VPERMILPDYrr
    1244671935U,	// VPERMILPDmi
    204517311U,	// VPERMILPDri
    1009823679U,	// VPERMILPDrm
    204517311U,	// VPERMILPDrr
    1254109130U,	// VPERMILPSYmi
    204517322U,	// VPERMILPSYri
    2952802250U,	// VPERMILPSYrm
    204517322U,	// VPERMILPSYrr
    1244671946U,	// VPERMILPSmi
    204517322U,	// VPERMILPSri
    1009823690U,	// VPERMILPSrm
    204517322U,	// VPERMILPSrr
    1255157717U,	// VPERMPDYrm
    204517333U,	// VPERMPDYrr
    2952802270U,	// VPERMPSYrm
    204517342U,	// VPERMPSYrr
    1255157735U,	// VPERMQYrm
    204517351U,	// VPERMQYrr
    1233498095U,	// VPEXTRBmr
    204517359U,	// VPEXTRBrr
    204517359U,	// VPEXTRBrr64
    1233530872U,	// VPEXTRDmr
    204517368U,	// VPEXTRDrr
    1233563649U,	// VPEXTRQmr
    204517377U,	// VPEXTRQrr
    1233596426U,	// VPEXTRWmr
    204517386U,	// VPEXTRWri
    2080387091U,	// VPHADDBDrm
    1145057299U,	// VPHADDBDrr
    2080387101U,	// VPHADDBQrm
    1145057309U,	// VPHADDBQrr
    2080387111U,	// VPHADDBWrm
    1145057319U,	// VPHADDBWrr
    2080387121U,	// VPHADDDQrm
    1145057329U,	// VPHADDDQrr
    1009823803U,	// VPHADDDrm128
    2952802363U,	// VPHADDDrm256
    204517435U,	// VPHADDDrr128
    204517435U,	// VPHADDDrr256
    1009823812U,	// VPHADDSWrm128
    2952802372U,	// VPHADDSWrm256
    204517444U,	// VPHADDSWrr128
    204517444U,	// VPHADDSWrr256
    2080387150U,	// VPHADDUBDrm
    1145057358U,	// VPHADDUBDrr
    2080387161U,	// VPHADDUBQrm
    1145057369U,	// VPHADDUBQrr
    2080387172U,	// VPHADDUBWrm
    1145057380U,	// VPHADDUBWrr
    2080387183U,	// VPHADDUDQrm
    1145057391U,	// VPHADDUDQrr
    2080387194U,	// VPHADDUWDrm
    1145057402U,	// VPHADDUWDrr
    2080387205U,	// VPHADDUWQrm
    1145057413U,	// VPHADDUWQrr
    2080387216U,	// VPHADDWDrm
    1145057424U,	// VPHADDWDrr
    2080387226U,	// VPHADDWQrm
    1145057434U,	// VPHADDWQrr
    1009823908U,	// VPHADDWrm128
    2952802468U,	// VPHADDWrm256
    204517540U,	// VPHADDWrr128
    204517540U,	// VPHADDWrr256
    1073754285U,	// VPHMINPOSUWrm128
    1145057453U,	// VPHMINPOSUWrr128
    2080387258U,	// VPHSUBBWrm
    1145057466U,	// VPHSUBBWrr
    2080387268U,	// VPHSUBDQrm
    1145057476U,	// VPHSUBDQrr
    1009823950U,	// VPHSUBDrm128
    2952802510U,	// VPHSUBDrm256
    204517582U,	// VPHSUBDrr128
    204517582U,	// VPHSUBDrr256
    1009823959U,	// VPHSUBSWrm128
    2952802519U,	// VPHSUBSWrm256
    204517591U,	// VPHSUBSWrr128
    204517591U,	// VPHSUBSWrr256
    2080387297U,	// VPHSUBWDrm
    1145057505U,	// VPHSUBWDrr
    1009823979U,	// VPHSUBWrm128
    2952802539U,	// VPHSUBWrm256
    204517611U,	// VPHSUBWrr128
    204517611U,	// VPHSUBWrr256
    1305522420U,	// VPINSRBrm
    1345368308U,	// VPINSRBrr
    1303425277U,	// VPINSRDrm
    1345368317U,	// VPINSRDrr
    1304473862U,	// VPINSRQrm
    1345368326U,	// VPINSRQrr
    1302376719U,	// VPINSRWrmi
    1345368335U,	// VPINSRWrr64i
    1345368335U,	// VPINSRWrri
    1294053656U,	// VPMACSDDrm
    1345368344U,	// VPMACSDDrr
    1294053666U,	// VPMACSDQHrm
    1345368354U,	// VPMACSDQHrr
    1294053677U,	// VPMACSDQLrm
    1345368365U,	// VPMACSDQLrr
    1294053688U,	// VPMACSSDDrm
    1345368376U,	// VPMACSSDDrr
    1294053699U,	// VPMACSSDQHrm
    1345368387U,	// VPMACSSDQHrr
    1294053711U,	// VPMACSSDQLrm
    1345368399U,	// VPMACSSDQLrr
    1294053723U,	// VPMACSSWDrm
    1345368411U,	// VPMACSSWDrr
    1294053734U,	// VPMACSSWWrm
    1345368422U,	// VPMACSSWWrr
    1294053745U,	// VPMACSWDrm
    1345368433U,	// VPMACSWDrr
    1294053755U,	// VPMACSWWrm
    1345368443U,	// VPMACSWWrr
    1294053765U,	// VPMADCSSWDrm
    1345368453U,	// VPMADCSSWDrr
    1294053777U,	// VPMADCSWDrm
    1345368465U,	// VPMADCSWDrr
    1009824156U,	// VPMADDUBSWrm128
    2952802716U,	// VPMADDUBSWrm256
    204517788U,	// VPMADDUBSWrr128
    204517788U,	// VPMADDUBSWrr256
    2952802728U,	// VPMADDWDYrm
    204517800U,	// VPMADDWDYrr
    1009824168U,	// VPMADDWDrm
    204517800U,	// VPMADDWDrr
    1233826226U,	// VPMASKMOVDYmr
    2952802738U,	// VPMASKMOVDYrm
    1233760690U,	// VPMASKMOVDmr
    1009824178U,	// VPMASKMOVDrm
    1233826238U,	// VPMASKMOVQYmr
    2952802750U,	// VPMASKMOVQYrm
    1233760702U,	// VPMASKMOVQmr
    1009824190U,	// VPMASKMOVQrm
    2952802762U,	// VPMAXSBYrm
    204517834U,	// VPMAXSBYrr
    1009824202U,	// VPMAXSBrm
    204517834U,	// VPMAXSBrr
    2952802771U,	// VPMAXSDYrm
    204517843U,	// VPMAXSDYrr
    1009824211U,	// VPMAXSDrm
    204517843U,	// VPMAXSDrr
    2952802780U,	// VPMAXSWYrm
    204517852U,	// VPMAXSWYrr
    1009824220U,	// VPMAXSWrm
    204517852U,	// VPMAXSWrr
    2952802789U,	// VPMAXUBYrm
    204517861U,	// VPMAXUBYrr
    1009824229U,	// VPMAXUBrm
    204517861U,	// VPMAXUBrr
    2952802798U,	// VPMAXUDYrm
    204517870U,	// VPMAXUDYrr
    1009824238U,	// VPMAXUDrm
    204517870U,	// VPMAXUDrr
    2952802807U,	// VPMAXUWYrm
    204517879U,	// VPMAXUWYrr
    1009824247U,	// VPMAXUWrm
    204517879U,	// VPMAXUWrr
    2952802816U,	// VPMINSBYrm
    204517888U,	// VPMINSBYrr
    1009824256U,	// VPMINSBrm
    204517888U,	// VPMINSBrr
    2952802825U,	// VPMINSDYrm
    204517897U,	// VPMINSDYrr
    1009824265U,	// VPMINSDrm
    204517897U,	// VPMINSDrr
    2952802834U,	// VPMINSWYrm
    204517906U,	// VPMINSWYrr
    1009824274U,	// VPMINSWrm
    204517906U,	// VPMINSWrr
    2952802843U,	// VPMINUBYrm
    204517915U,	// VPMINUBYrr
    1009824283U,	// VPMINUBrm
    204517915U,	// VPMINUBrr
    2952802852U,	// VPMINUDYrm
    204517924U,	// VPMINUDYrr
    1009824292U,	// VPMINUDrm
    204517924U,	// VPMINUDrr
    2952802861U,	// VPMINUWYrm
    204517933U,	// VPMINUWYrr
    1009824301U,	// VPMINUWrm
    204517933U,	// VPMINUWrr
    1145057846U,	// VPMOVMSKBYr64r
    1145057846U,	// VPMOVMSKBYrr
    1145057846U,	// VPMOVMSKBr64r
    1145057846U,	// VPMOVMSKBrr
    1409299009U,	// VPMOVSXBDYrm
    1145057857U,	// VPMOVSXBDYrr
    1409299009U,	// VPMOVSXBDrm
    1145057857U,	// VPMOVSXBDrr
    1543516748U,	// VPMOVSXBQYrm
    1145057868U,	// VPMOVSXBQYrr
    1543516748U,	// VPMOVSXBQrm
    1145057868U,	// VPMOVSXBQrr
    1073754711U,	// VPMOVSXBWYrm
    1145057879U,	// VPMOVSXBWYrr
    1476407895U,	// VPMOVSXBWrm
    1145057879U,	// VPMOVSXBWrr
    1073754722U,	// VPMOVSXDQYrm
    1145057890U,	// VPMOVSXDQYrr
    1476407906U,	// VPMOVSXDQrm
    1145057890U,	// VPMOVSXDQrr
    1073754733U,	// VPMOVSXWDYrm
    1145057901U,	// VPMOVSXWDYrr
    1476407917U,	// VPMOVSXWDrm
    1145057901U,	// VPMOVSXWDrr
    1409299064U,	// VPMOVSXWQYrm
    1145057912U,	// VPMOVSXWQYrr
    1409299064U,	// VPMOVSXWQrm
    1145057912U,	// VPMOVSXWQrr
    1409299075U,	// VPMOVZXBDYrm
    1145057923U,	// VPMOVZXBDYrr
    1409299075U,	// VPMOVZXBDrm
    1145057923U,	// VPMOVZXBDrr
    1543516814U,	// VPMOVZXBQYrm
    1145057934U,	// VPMOVZXBQYrr
    1543516814U,	// VPMOVZXBQrm
    1145057934U,	// VPMOVZXBQrr
    1073754777U,	// VPMOVZXBWYrm
    1145057945U,	// VPMOVZXBWYrr
    1476407961U,	// VPMOVZXBWrm
    1145057945U,	// VPMOVZXBWrr
    1073754788U,	// VPMOVZXDQYrm
    1145057956U,	// VPMOVZXDQYrr
    1476407972U,	// VPMOVZXDQrm
    1145057956U,	// VPMOVZXDQrr
    1073754799U,	// VPMOVZXWDYrm
    1145057967U,	// VPMOVZXWDYrr
    1476407983U,	// VPMOVZXWDrm
    1145057967U,	// VPMOVZXWDrr
    1409299130U,	// VPMOVZXWQYrm
    1145057978U,	// VPMOVZXWQYrr
    1409299130U,	// VPMOVZXWQrm
    1145057978U,	// VPMOVZXWQrr
    2952803013U,	// VPMULDQYrm
    204518085U,	// VPMULDQYrr
    1009824453U,	// VPMULDQrm
    204518085U,	// VPMULDQrr
    1009824462U,	// VPMULHRSWrm128
    2952803022U,	// VPMULHRSWrm256
    204518094U,	// VPMULHRSWrr128
    204518094U,	// VPMULHRSWrr256
    2952803033U,	// VPMULHUWYrm
    204518105U,	// VPMULHUWYrr
    1009824473U,	// VPMULHUWrm
    204518105U,	// VPMULHUWrr
    2952803043U,	// VPMULHWYrm
    204518115U,	// VPMULHWYrr
    1009824483U,	// VPMULHWrm
    204518115U,	// VPMULHWrr
    2952803052U,	// VPMULLDYrm
    204518124U,	// VPMULLDYrr
    1009824492U,	// VPMULLDrm
    204518124U,	// VPMULLDrr
    2952803061U,	// VPMULLWYrm
    204518133U,	// VPMULLWYrr
    1009824501U,	// VPMULLWrm
    204518133U,	// VPMULLWrr
    2952803070U,	// VPMULUDQYrm
    204518142U,	// VPMULUDQYrr
    1009824510U,	// VPMULUDQrm
    204518142U,	// VPMULUDQrr
    2952803080U,	// VPORYrm
    204518152U,	// VPORYrr
    1009824520U,	// VPORrm
    204518152U,	// VPORrr
    1294054158U,	// VPPERMmr
    2684367630U,	// VPPERMrm
    1345368846U,	// VPPERMrr
    1244672790U,	// VPROTBmi
    1244672790U,	// VPROTBmr
    204518166U,	// VPROTBri
    540062486U,	// VPROTBrm
    204518166U,	// VPROTBrr
    1244672798U,	// VPROTDmi
    1244672798U,	// VPROTDmr
    204518174U,	// VPROTDri
    540062494U,	// VPROTDrm
    204518174U,	// VPROTDrr
    1244672806U,	// VPROTQmi
    1244672806U,	// VPROTQmr
    204518182U,	// VPROTQri
    540062502U,	// VPROTQrm
    204518182U,	// VPROTQrr
    1244672814U,	// VPROTWmi
    1244672814U,	// VPROTWmr
    204518190U,	// VPROTWri
    540062510U,	// VPROTWrm
    204518190U,	// VPROTWrr
    2952803126U,	// VPSADBWYrm
    204518198U,	// VPSADBWYrr
    1009824566U,	// VPSADBWrm
    204518198U,	// VPSADBWrr
    1244672831U,	// VPSHABmr
    540062527U,	// VPSHABrm
    204518207U,	// VPSHABrr
    1244672839U,	// VPSHADmr
    540062535U,	// VPSHADrm
    204518215U,	// VPSHADrr
    1244672847U,	// VPSHAQmr
    540062543U,	// VPSHAQrm
    204518223U,	// VPSHAQrr
    1244672855U,	// VPSHAWmr
    540062551U,	// VPSHAWrm
    204518231U,	// VPSHAWrr
    1244672863U,	// VPSHLBmr
    540062559U,	// VPSHLBrm
    204518239U,	// VPSHLBrr
    1244672871U,	// VPSHLDmr
    540062567U,	// VPSHLDrm
    204518247U,	// VPSHLDrr
    1244672879U,	// VPSHLQmr
    540062575U,	// VPSHLQrm
    204518255U,	// VPSHLQrr
    1244672887U,	// VPSHLWmr
    540062583U,	// VPSHLWrm
    204518263U,	// VPSHLWrr
    1009824639U,	// VPSHUFBrm128
    2952803199U,	// VPSHUFBrm256
    204518271U,	// VPSHUFBrr128
    204518271U,	// VPSHUFBrr256
    1255158664U,	// VPSHUFDYmi
    204518280U,	// VPSHUFDYri
    1219507080U,	// VPSHUFDmi
    204518280U,	// VPSHUFDri
    1255158673U,	// VPSHUFHWYmi
    204518289U,	// VPSHUFHWYri
    1219507089U,	// VPSHUFHWmi
    204518289U,	// VPSHUFHWri
    1255158683U,	// VPSHUFLWYmi
    204518299U,	// VPSHUFLWYri
    1219507099U,	// VPSHUFLWmi
    204518299U,	// VPSHUFLWri
    1009824677U,	// VPSIGNBrm128
    2952803237U,	// VPSIGNBrm256
    204518309U,	// VPSIGNBrr128
    204518309U,	// VPSIGNBrr256
    1009824686U,	// VPSIGNDrm128
    2952803246U,	// VPSIGNDrm256
    204518318U,	// VPSIGNDrr128
    204518318U,	// VPSIGNDrr256
    1009824695U,	// VPSIGNWrm128
    2952803255U,	// VPSIGNWrm256
    204518327U,	// VPSIGNWrr128
    204518327U,	// VPSIGNWrr256
    204518336U,	// VPSLLDQYri
    204518336U,	// VPSLLDQri
    204518345U,	// VPSLLDYri
    1009824713U,	// VPSLLDYrm
    204518345U,	// VPSLLDYrr
    204518345U,	// VPSLLDri
    1009824713U,	// VPSLLDrm
    204518345U,	// VPSLLDrr
    204518353U,	// VPSLLQYri
    1009824721U,	// VPSLLQYrm
    204518353U,	// VPSLLQYrr
    204518353U,	// VPSLLQri
    1009824721U,	// VPSLLQrm
    204518353U,	// VPSLLQrr
    2952803289U,	// VPSLLVDYrm
    204518361U,	// VPSLLVDYrr
    1009824729U,	// VPSLLVDrm
    204518361U,	// VPSLLVDrr
    2952803298U,	// VPSLLVQYrm
    204518370U,	// VPSLLVQYrr
    1009824738U,	// VPSLLVQrm
    204518370U,	// VPSLLVQrr
    204518379U,	// VPSLLWYri
    1009824747U,	// VPSLLWYrm
    204518379U,	// VPSLLWYrr
    204518379U,	// VPSLLWri
    1009824747U,	// VPSLLWrm
    204518379U,	// VPSLLWrr
    204518387U,	// VPSRADYri
    1009824755U,	// VPSRADYrm
    204518387U,	// VPSRADYrr
    204518387U,	// VPSRADri
    1009824755U,	// VPSRADrm
    204518387U,	// VPSRADrr
    2952803323U,	// VPSRAVDYrm
    204518395U,	// VPSRAVDYrr
    1009824763U,	// VPSRAVDrm
    204518395U,	// VPSRAVDrr
    204518404U,	// VPSRAWYri
    1009824772U,	// VPSRAWYrm
    204518404U,	// VPSRAWYrr
    204518404U,	// VPSRAWri
    1009824772U,	// VPSRAWrm
    204518404U,	// VPSRAWrr
    204518412U,	// VPSRLDQYri
    204518412U,	// VPSRLDQri
    204518421U,	// VPSRLDYri
    1009824789U,	// VPSRLDYrm
    204518421U,	// VPSRLDYrr
    204518421U,	// VPSRLDri
    1009824789U,	// VPSRLDrm
    204518421U,	// VPSRLDrr
    204518429U,	// VPSRLQYri
    1009824797U,	// VPSRLQYrm
    204518429U,	// VPSRLQYrr
    204518429U,	// VPSRLQri
    1009824797U,	// VPSRLQrm
    204518429U,	// VPSRLQrr
    2952803365U,	// VPSRLVDYrm
    204518437U,	// VPSRLVDYrr
    1009824805U,	// VPSRLVDrm
    204518437U,	// VPSRLVDrr
    2952803374U,	// VPSRLVQYrm
    204518446U,	// VPSRLVQYrr
    1009824814U,	// VPSRLVQrm
    204518446U,	// VPSRLVQrr
    204518455U,	// VPSRLWYri
    1009824823U,	// VPSRLWYrm
    204518455U,	// VPSRLWYrr
    204518455U,	// VPSRLWri
    1009824823U,	// VPSRLWrm
    204518455U,	// VPSRLWrr
    2952803391U,	// VPSUBBYrm
    204518463U,	// VPSUBBYrr
    1009824831U,	// VPSUBBrm
    204518463U,	// VPSUBBrr
    2952803399U,	// VPSUBDYrm
    204518471U,	// VPSUBDYrr
    1009824839U,	// VPSUBDrm
    204518471U,	// VPSUBDrr
    2952803407U,	// VPSUBQYrm
    204518479U,	// VPSUBQYrr
    1009824847U,	// VPSUBQrm
    204518479U,	// VPSUBQrr
    2952803415U,	// VPSUBSBYrm
    204518487U,	// VPSUBSBYrr
    1009824855U,	// VPSUBSBrm
    204518487U,	// VPSUBSBrr
    2952803424U,	// VPSUBSWYrm
    204518496U,	// VPSUBSWYrr
    1009824864U,	// VPSUBSWrm
    204518496U,	// VPSUBSWrr
    2952803433U,	// VPSUBUSBYrm
    204518505U,	// VPSUBUSBYrr
    1009824873U,	// VPSUBUSBrm
    204518505U,	// VPSUBUSBrr
    2952803443U,	// VPSUBUSWYrm
    204518515U,	// VPSUBUSWYrr
    1009824883U,	// VPSUBUSWrm
    204518515U,	// VPSUBUSWrr
    2952803453U,	// VPSUBWYrm
    204518525U,	// VPSUBWYrr
    1009824893U,	// VPSUBWrm
    204518525U,	// VPSUBWrr
    2550150277U,	// VPTESTYrm
    1145058437U,	// VPTESTYrr
    2080388229U,	// VPTESTrm
    1145058437U,	// VPTESTrr
    2952803469U,	// VPUNPCKHBWYrm
    204518541U,	// VPUNPCKHBWYrr
    1009824909U,	// VPUNPCKHBWrm
    204518541U,	// VPUNPCKHBWrr
    2952803481U,	// VPUNPCKHDQYrm
    204518553U,	// VPUNPCKHDQYrr
    1009824921U,	// VPUNPCKHDQrm
    204518553U,	// VPUNPCKHDQrr
    2952803493U,	// VPUNPCKHQDQYrm
    204518565U,	// VPUNPCKHQDQYrr
    1009824933U,	// VPUNPCKHQDQrm
    204518565U,	// VPUNPCKHQDQrr
    2952803506U,	// VPUNPCKHWDYrm
    204518578U,	// VPUNPCKHWDYrr
    1009824946U,	// VPUNPCKHWDrm
    204518578U,	// VPUNPCKHWDrr
    2952803518U,	// VPUNPCKLBWYrm
    204518590U,	// VPUNPCKLBWYrr
    1009824958U,	// VPUNPCKLBWrm
    204518590U,	// VPUNPCKLBWrr
    2952803530U,	// VPUNPCKLDQYrm
    204518602U,	// VPUNPCKLDQYrr
    1009824970U,	// VPUNPCKLDQrm
    204518602U,	// VPUNPCKLDQrr
    2952803542U,	// VPUNPCKLQDQYrm
    204518614U,	// VPUNPCKLQDQYrr
    1009824982U,	// VPUNPCKLQDQrm
    204518614U,	// VPUNPCKLQDQrr
    2952803555U,	// VPUNPCKLWDYrm
    204518627U,	// VPUNPCKLWDYrr
    1009824995U,	// VPUNPCKLWDrm
    204518627U,	// VPUNPCKLWDrr
    2952803567U,	// VPXORYrm
    204518639U,	// VPXORYrr
    1009825007U,	// VPXORrm
    204518639U,	// VPXORrr
    2617259254U,	// VRCPPSYm
    2617259254U,	// VRCPPSYm_Int
    1145058550U,	// VRCPPSYr
    1145058550U,	// VRCPPSYr_Int
    2080388342U,	// VRCPPSm
    2080388342U,	// VRCPPSm_Int
    1145058550U,	// VRCPPSr
    1145058550U,	// VRCPPSr_Int
    674280702U,	// VRCPSSm
    674280702U,	// VRCPSSm_Int
    204518654U,	// VRCPSSr
    1244673286U,	// VROUNDPDm
    204518662U,	// VROUNDPDr
    1244673296U,	// VROUNDPSm
    204518672U,	// VROUNDPSr
    1297200410U,	// VROUNDSDm
    1345369370U,	// VROUNDSDr
    1345369370U,	// VROUNDSDr_Int
    1299297572U,	// VROUNDSSm
    1345369380U,	// VROUNDSSr
    1345369380U,	// VROUNDSSr_Int
    1254110470U,	// VROUNDYPDm
    204518662U,	// VROUNDYPDr
    1254110480U,	// VROUNDYPSm
    204518672U,	// VROUNDYPSr
    2617259310U,	// VRSQRTPSYm
    2617259310U,	// VRSQRTPSYm_Int
    1145058606U,	// VRSQRTPSYr
    1145058606U,	// VRSQRTPSYr_Int
    2080388398U,	// VRSQRTPSm
    2080388398U,	// VRSQRTPSm_Int
    1145058606U,	// VRSQRTPSr
    1145058606U,	// VRSQRTPSr_Int
    674280760U,	// VRSQRTSSm
    674280760U,	// VRSQRTSSm_Int
    204518712U,	// VRSQRTSSr
    1314927938U,	// VSHUFPDYrmi
    1345369410U,	// VSHUFPDYrri
    1294054722U,	// VSHUFPDrmi
    1345369410U,	// VSHUFPDrri
    1314927947U,	// VSHUFPSYrmi
    1345369419U,	// VSHUFPSYrri
    1294054731U,	// VSHUFPSrmi
    1345369419U,	// VSHUFPSrri
    2617259348U,	// VSQRTPDYm
    2617259348U,	// VSQRTPDYm_Int
    1145058644U,	// VSQRTPDYr
    1145058644U,	// VSQRTPDYr_Int
    2080388436U,	// VSQRTPDm
    2080388436U,	// VSQRTPDm_Int
    1145058644U,	// VSQRTPDr
    1145058644U,	// VSQRTPDr_Int
    2617259357U,	// VSQRTPSYm
    2617259357U,	// VSQRTPSYm_Int
    1145058653U,	// VSQRTPSYr
    1145058653U,	// VSQRTPSYr_Int
    2080388445U,	// VSQRTPSm
    2080388445U,	// VSQRTPSm_Int
    1145058653U,	// VSQRTPSr
    1145058653U,	// VSQRTPSr_Int
    607171942U,	// VSQRTSDm
    607171942U,	// VSQRTSDm_Int
    204518758U,	// VSQRTSDr
    674280815U,	// VSQRTSSm
    674280815U,	// VSQRTSSm_Int
    204518767U,	// VSQRTSSr
    939537784U,	// VSTMXCSR
    2483041666U,	// VSUBPDYrm
    204518786U,	// VSUBPDYrr
    540063106U,	// VSUBPDrm
    204518786U,	// VSUBPDrr
    2483041674U,	// VSUBPSYrm
    204518794U,	// VSUBPSYrr
    540063114U,	// VSUBPSrm
    204518794U,	// VSUBPSrr
    607171986U,	// VSUBSDrm
    607171986U,	// VSUBSDrm_Int
    204518802U,	// VSUBSDrr
    204518802U,	// VSUBSDrr_Int
    674280858U,	// VSUBSSrm
    674280858U,	// VSUBSSrm_Int
    204518810U,	// VSUBSSrr
    204518810U,	// VSUBSSrr_Int
    2617259426U,	// VTESTPDYrm
    1145058722U,	// VTESTPDYrr
    2080388514U,	// VTESTPDrm
    1145058722U,	// VTESTPDrr
    2617259435U,	// VTESTPSYrm
    1145058731U,	// VTESTPSYrr
    2080388523U,	// VTESTPSrm
    1145058731U,	// VTESTPSrr
    2147487612U,	// VUCOMISDrm
    1145048956U,	// VUCOMISDrr
    2214596486U,	// VUCOMISSrm
    1145048966U,	// VUCOMISSrr
    2483041716U,	// VUNPCKHPDYrm
    204518836U,	// VUNPCKHPDYrr
    540063156U,	// VUNPCKHPDrm
    204518836U,	// VUNPCKHPDrr
    2483041727U,	// VUNPCKHPSYrm
    204518847U,	// VUNPCKHPSYrr
    540063167U,	// VUNPCKHPSrm
    204518847U,	// VUNPCKHPSrr
    2483041738U,	// VUNPCKLPDYrm
    204518858U,	// VUNPCKLPDYrr
    540063178U,	// VUNPCKLPDrm
    204518858U,	// VUNPCKLPDrr
    2483041749U,	// VUNPCKLPSYrm
    204518869U,	// VUNPCKLPSYrr
    540063189U,	// VUNPCKLPSrm
    204518869U,	// VUNPCKLPSrr
    2483039082U,	// VXORPDYrm
    204516202U,	// VXORPDYrr
    540060522U,	// VXORPDrm
    204516202U,	// VXORPDrr
    2483039090U,	// VXORPSYrm
    204516210U,	// VXORPSYrr
    540060530U,	// VXORPSrm
    204516210U,	// VXORPSrr
    13792U,	// VZEROALL
    13801U,	// VZEROUPPER
    0U,	// V_SET0
    0U,	// V_SETALLONES
    1677722928U,	// W64ALLOCA
    13812U,	// WAIT
    13817U,	// WBINVD
    1610614056U,	// WINCALL64m
    1677722928U,	// WINCALL64pcrel32
    67110184U,	// WINCALL64r
    13824U,	// WIN_ALLOCA
    67122715U,	// WRFSBASE
    67122726U,	// WRFSBASE64
    67122737U,	// WRGSBASE
    67122748U,	// WRGSBASE64
    13895U,	// WRMSR
    136328781U,	// XADD16rm
    1145058893U,	// XADD16rr
    140523092U,	// XADD32rm
    1145058900U,	// XADD32rr
    142620251U,	// XADD64rm
    1145058907U,	// XADD64rr
    144717410U,	// XADD8rm
    1145058914U,	// XADD8rr
    68171369U,	// XCHG16ar
    1168127593U,	// XCHG16rm
    1189099113U,	// XCHG16rr
    72365680U,	// XCHG32ar
    72365680U,	// XCHG32ar64
    1169176176U,	// XCHG32rm
    1189099120U,	// XCHG32rr
    74462839U,	// XCHG64ar
    1170224759U,	// XCHG64rm
    1189099127U,	// XCHG64rr
    1171273342U,	// XCHG8rm
    1189099134U,	// XCHG8rr
    67122821U,	// XCH_F
    13963U,	// XCRYPTCBC
    13973U,	// XCRYPTCFB
    13983U,	// XCRYPTCTR
    13993U,	// XCRYPTECB
    14003U,	// XCRYPTOFB
    14013U,	// XGETBV
    14020U,	// XLAT
    68171466U,	// XOR16i16
    136328906U,	// XOR16mi
    136328906U,	// XOR16mi8
    136328906U,	// XOR16mr
    204486346U,	// XOR16ri
    204486346U,	// XOR16ri8
    271595210U,	// XOR16rm
    204486346U,	// XOR16rr
    205534922U,	// XOR16rr_REV
    72365776U,	// XOR32i32
    140523216U,	// XOR32mi
    140523216U,	// XOR32mi8
    140523216U,	// XOR32mr
    204486352U,	// XOR32ri
    204486352U,	// XOR32ri8
    338704080U,	// XOR32rm
    204486352U,	// XOR32rr
    205534928U,	// XOR32rr_REV
    74462934U,	// XOR64i32
    142620374U,	// XOR64mi32
    142620374U,	// XOR64mi8
    142620374U,	// XOR64mr
    204486358U,	// XOR64ri32
    204486358U,	// XOR64ri8
    405812950U,	// XOR64rm
    204486358U,	// XOR64rr
    205534934U,	// XOR64rr_REV
    76560092U,	// XOR8i8
    144717532U,	// XOR8mi
    144717532U,	// XOR8mr
    204486364U,	// XOR8ri
    469776092U,	// XOR8rm
    204486364U,	// XOR8rr
    205534940U,	// XOR8rr_REV
    541068608U,	// XORPDrm
    205524288U,	// XORPDrr
    541068615U,	// XORPSrm
    205524295U,	// XORPSrr
    2281715426U,	// XRSTOR
    2281715434U,	// XRSTOR64
    2281715443U,	// XSAVE
    2281715450U,	// XSAVE64
    2281715458U,	// XSAVEOPT
    2281715468U,	// XSAVEOPT64
    14103U,	// XSETBV
    14110U,	// XSHA1
    14116U,	// XSHA256
    14124U,	// XSTORE
    0U
  };

  const char *AsmStrs = 
    "DBG_VALUE\000BUNDLE\000aaa\000aad\t\000aam\t\000aas\000fabs\000#ACQUIRE"
    "_MOV PSEUDO!\000adcw\t\000adcl\t\000adcq\t\000adcb\t\000addw\t\000addl\t"
    "\000addq\t\000addb\t\000addpd\t\000addps\t\000addsd\t\000addss\t\000add"
    "subpd\t\000addsubps\t\000fadds\t\000faddl\t\000fiadds\t\000fiaddl\t\000"
    "faddp\t\000fadd\t\000fadd\t%st(0), \000#ADJCALLSTACKDOWN\000#ADJCALLSTA"
    "CKUP\000aesdeclast\t\000aesdec\t\000aesenclast\t\000aesenc\t\000aesimc\t"
    "\000aeskeygenassist\t\000andw\t\000andl\t\000andq\t\000andb\t\000andnl\t"
    "\000andnq\t\000andnpd\t\000andnps\t\000andpd\t\000andps\t\000arpl\t\000"
    "#ATOMADD6432 PSEUDO!\000#ATOMAND16 PSEUDO!\000#ATOMAND32 PSEUDO!\000#AT"
    "OMAND64 PSEUDO!\000#ATOMAND6432 PSEUDO!\000#ATOMAND8 PSEUDO!\000#ATOMMA"
    "X16 PSEUDO!\000#ATOMMAX32 PSEUDO!\000#ATOMMAX64 PSEUDO!\000#ATOMMIN16 P"
    "SEUDO!\000#ATOMMIN32 PSEUDO!\000#ATOMMIN64 PSEUDO!\000#ATOMNAND16 PSEUD"
    "O!\000#ATOMNAND32 PSEUDO!\000#ATOMNAND64 PSEUDO!\000#ATOMNAND6432 PSEUD"
    "O!\000#ATOMNAND8 PSEUDO!\000#ATOMOR16 PSEUDO!\000#ATOMOR32 PSEUDO!\000#"
    "ATOMOR64 PSEUDO!\000#ATOMOR6432 PSEUDO!\000#ATOMOR8 PSEUDO!\000#ATOMSUB"
    "6432 PSEUDO!\000#ATOMSWAP6432 PSEUDO!\000#ATOMUMAX16 PSEUDO!\000#ATOMUM"
    "AX32 PSEUDO!\000#ATOMUMAX64 PSEUDO!\000#ATOMUMIN16 PSEUDO!\000#ATOMUMIN"
    "32 PSEUDO!\000#ATOMUMIN64 PSEUDO!\000#ATOMXOR16 PSEUDO!\000#ATOMXOR32 P"
    "SEUDO!\000#ATOMXOR64 PSEUDO!\000#ATOMXOR6432 PSEUDO!\000#ATOMXOR8 PSEUD"
    "O!\000bextrl\t\000bextrq\t\000blendpd\t\000blendps\t\000blendvpd\t\000b"
    "lendvps\t\000blsil\t\000blsiq\t\000blsmskl\t\000blsmskq\t\000blsrl\t\000"
    "blsrq\t\000bound\t\000bsfw\t\000bsfl\t\000bsfq\t\000bsrw\t\000bsrl\t\000"
    "bsrq\t\000bswapl\t\000bswapq\t\000btw\t\000btl\t\000btq\t\000btcw\t\000"
    "btcl\t\000btcq\t\000btrw\t\000btrl\t\000btrq\t\000btsw\t\000btsl\t\000b"
    "tsq\t\000bzhil\t\000bzhiq\t\000calll\t*\000callq\t*\000callq\t\000callw"
    "\t\000calll\t\000cbtw\000cltd\000cltq\000fchs\000clc\000cld\000clflush\t"
    "\000cli\000clts\000cmc\000cmovaw\t\000cmoval\t\000cmovaq\t\000cmovaew\t"
    "\000cmovael\t\000cmovaeq\t\000cmovbw\t\000cmovbl\t\000cmovbq\t\000cmovb"
    "ew\t\000cmovbel\t\000cmovbeq\t\000fcmovbe\t\000fcmovb\t\000cmovew\t\000"
    "cmovel\t\000cmoveq\t\000fcmove\t\000cmovgw\t\000cmovgl\t\000cmovgq\t\000"
    "cmovgew\t\000cmovgel\t\000cmovgeq\t\000cmovlw\t\000cmovll\t\000cmovlq\t"
    "\000cmovlew\t\000cmovlel\t\000cmovleq\t\000fcmovnbe\t\000fcmovnb\t\000c"
    "movnew\t\000cmovnel\t\000cmovneq\t\000fcmovne\t\000cmovnow\t\000cmovnol"
    "\t\000cmovnoq\t\000cmovnpw\t\000cmovnpl\t\000cmovnpq\t\000fcmovnu\t\000"
    "cmovnsw\t\000cmovnsl\t\000cmovnsq\t\000cmovow\t\000cmovol\t\000cmovoq\t"
    "\000cmovpw\t\000cmovpl\t\000cmovpq\t\000fcmovu\t \000cmovsw\t\000cmovsl"
    "\t\000cmovsq\t\000#CMOV_FR32 PSEUDO!\000#CMOV_FR64 PSEUDO!\000#CMOV_GR1"
    "6* PSEUDO!\000#CMOV_GR32* PSEUDO!\000#CMOV_GR8 PSEUDO!\000#CMOV_RFP32 P"
    "SEUDO!\000#CMOV_RFP64 PSEUDO!\000#CMOV_RFP80 PSEUDO!\000#CMOV_V2F64 PSE"
    "UDO!\000#CMOV_V2I64 PSEUDO!\000#CMOV_V4F32 PSEUDO!\000#CMOV_V4F64 PSEUD"
    "O!\000#CMOV_V4I64 PSEUDO!\000#CMOV_V8F32 PSEUDO!\000cmpw\t\000cmpl\t\000"
    "cmpq\t\000cmpb\t\000cmp\000cmppd\t\000cmpps\t\000cmpsw\000cmpsl\000cmps"
    "q\000cmpsb\000cmpsd\t\000cmpss\t\000cmpxchg16b\t\000cmpxchgw\t\000cmpxc"
    "hgl\t\000cmpxchgq\t\000cmpxchg8b\t\000cmpxchgb\t\000comisd\t\000comiss\t"
    "\000fcomp\t\000fcompi\t\000fcomi\t\000fcom\t\000fcos\000cpuid\000cqto\000"
    "crc32w \t\000crc32l \t\000crc32b \t\000crc32q \t\000cs\000cvtdq2pd\t\000"
    "cvtdq2ps\t\000cvtpd2dq\t\000cvtpd2ps\t\000cvtps2dq\t\000cvtps2pd\t\000c"
    "vtsd2siq\t\000cvtsd2sil\t\000cvtsd2ss\t\000cvtsi2sdq\t\000cvtsi2sd\t\000"
    "cvtsi2ssq\t\000cvtsi2ss\t\000cvtss2sd\t\000cvtss2siq\t\000cvtss2sil\t\000"
    "cvttpd2dq\t\000cvttps2dq\t\000cvttsd2siq\t\000cvttsd2si\t\000cvttss2siq"
    "\t\000cvttss2si\t\000cwtd\000cwtl\000daa\000das\000data16\000decw\t\000"
    "decl\t\000decq\t\000decb\t\000divw\t\000divl\t\000divq\t\000divb\t\000d"
    "ivpd\t\000divps\t\000fdivrs\t\000fdivrl\t\000fidivrs\t\000fidivrl\t\000"
    "fdivp\t\000fdivr\t\000fdiv\t%st(0), \000divsd\t\000divss\t\000fdivs\t\000"
    "fdivl\t\000fidivs\t\000fidivl\t\000fdivrp\t\000fdiv\t\000fdivr\t%st(0),"
    " \000dppd\t\000dpps\t\000ds\000ret\t#eh_return, addr: \000enter\t\000es"
    "\000extractps\t\000f2xm1\000lcallw\t\000lcallw\t*\000lcalll\t\000lcalll"
    "\t*\000lcallq\t*\000ljmpw\t\000ljmpw\t*\000ljmpl\t\000ljmpl\t*\000ljmpq"
    "\t*\000fbld\t\000fbstp\t\000fcoms\t\000fcoml\t\000fcomps\t\000fcompl\t\000"
    "fcompp\000fdecstp\000femms\000ffree\t\000ficoms\t\000ficoml\t\000ficomp"
    "s\t\000ficompl\t\000fincstp\000fldcw\t\000fldenv\t\000fldl2e\000fldl2t\000"
    "fldlg2\000fldln2\000fldpi\000fnclex\000fninit\000fnop\000fnstcw\t\000fn"
    "stsw %ax\000fnstsw\t\000fpatan\000fprem\000fprem1\000fptan\000frndint\000"
    "frstor\t\000fnsave\t\000fscale\000fsincos\000fnstenv\t\000fs\000fxam\000"
    "fxrstor\t\000fxrstorq\t\000fxsave\t\000fxsaveq\t\000fxtract\000fyl2x\000"
    "fyl2xp1\000movapd\t\000movaps\t\000orpd\t\000orps\t\000vmovapd\t\000vmo"
    "vaps\t\000xorpd\t\000xorps\t\000gs\000haddpd\t\000haddps\t\000hlt\000hs"
    "ubpd\t\000hsubps\t\000idivw\t\000idivl\t\000idivq\t\000idivb\t\000filds"
    "\t\000fildl\t\000fildll\t\000imulw\t\000imull\t\000imulq\t\000imulb\t\000"
    "insw\000inw\t\000inw\t%dx, %ax\000insl\000inl\t\000inl\t%dx, %eax\000in"
    "sb\000inb\t\000inb\t%dx, %al\000incw\t\000incl\t\000incq\t\000incb\t\000"
    "insertps\t\000int\t\000int3\000into\000invd\000invept \000invlpg\t\000i"
    "nvpcid \000invvpid \000iretw\000iretl\000iretq\000fisttps\t\000fisttpl\t"
    "\000fisttpll\t\000fists\t\000fistl\t\000fistps\t\000fistpl\t\000fistpll"
    "\t\000#MEMBARRIER\000ucomisd\t\000ucomiss\t\000vcmp\000vcomisd\t\000vco"
    "miss\t\000vcvtdq2pd\t\000vcvtdq2ps\t\000vcvtpd2dq\t\000vcvtpd2ps\t\000v"
    "cvtps2dq\t\000vcvtps2pd\t\000vcvtsd2si\t\000vcvtsd2ss\t\000vcvtsi2sd\t\000"
    "vcvtsi2ss\t\000vcvtss2sd\t\000vcvttsd2si\t\000vcvttss2si\t\000vucomisd\t"
    "\000vucomiss\t\000jae\t\000ja\t\000jbe\t\000jb\t\000jcxz\t\000jecxz\t\000"
    "je\t\000jge\t\000jg\t\000jle\t\000jl\t\000jmpl\t*\000jmpq\t*\000jmpq\t\000"
    "jmp\t\000jne\t\000jno\t\000jnp\t\000jns\t\000jo\t\000jp\t\000jrcxz\t\000"
    "js\t\000lahf\000larw\t\000larl\t\000larq\t\000lock\n\tcmpxchgw\t\000loc"
    "k\n\tcmpxchg16b\t\000lock\n\tcmpxchgl\t\000lock\n\tcmpxchgq\t\000lock\n"
    "\tcmpxchgb\t\000lock\n\tcmpxchg8b\t\000lddqu\t\000ldmxcsr\t\000ldsw\t\000"
    "ldsl\t\000fldz\000fld1\000flds\t\000fldl\t\000fldt\t\000fld\t\000leaw\t"
    "\000leal\t\000leaq\t\000leave\000lesw\t\000lesl\t\000lfence\000lfsw\t\000"
    "lfsl\t\000lfsq\t\000lgdtw\t\000lgdt\t\000lgsw\t\000lgsl\t\000lgsq\t\000"
    "lidtw\t\000lidt\t\000lldtw\t\000lmsww\t\000lock\n\taddw\t\000lock\n\tad"
    "dl\t\000lock\n\taddq\t\000lock\n\taddb\t\000lock\n\tandw\t\000lock\n\ta"
    "ndl\t\000lock\n\tandq\t\000lock\n\tandb\t\000lock\n\tdecw\t\000lock\n\t"
    "decl\t\000lock\n\tdecq\t\000lock\n\tdecb\t\000lock\n\tincw\t\000lock\n\t"
    "incl\t\000lock\n\tincq\t\000lock\n\tincb\t\000lock\n\torw\t\000lock\n\t"
    "orl\t\000lock\n\torq\t\000lock\n\torb\t\000lock\000lock\n\tsubw\t\000lo"
    "ck\n\tsubl\t\000lock\n\tsubq\t\000lock\n\tsubb\t\000lock\n\txorw\t\000l"
    "ock\n\txorl\t\000lock\n\txorq\t\000lock\n\txorb\t\000lodsb\000lodsl\000"
    "lodsq\000lodsw\000loop\t\000loope\t\000loopne\t\000lret\t\000lretw\t\000"
    "lretl\000lretq\000lslw\t\000lsll\t\000lslq\t\000lssw\t\000lssl\t\000lss"
    "q\t\000ltrw\t\000lock\n\txaddw\t\000lock\n\txaddl\t\000lock\n\txaddq\t\000"
    "lock\n\txaddb\t\000lzcntw\t\000lzcntl\t\000lzcntq\t\000maskmovdqu\t\000"
    "maxpd\t\000maxps\t\000maxsd\t\000maxss\t\000mfence\000minpd\t\000minps\t"
    "\000minsd\t\000minss\t\000cvtpd2pi\t\000cvtpi2pd\t\000cvtpi2ps\t\000cvt"
    "ps2pi\t\000cvttpd2pi\t\000cvttps2pi\t\000emms\000maskmovq\t\000movd\t\000"
    "movdq2q\t\000movntq\t\000movq2dq\t\000movq\t\000pabsb\t\000pabsd\t\000p"
    "absw\t\000packssdw\t\000packsswb\t\000packuswb\t\000paddb\t\000paddd\t\000"
    "paddq\t\000paddsb\t\000paddsw\t\000paddusb\t\000paddusw\t\000paddw\t\000"
    "palignr\t\000pandn\t\000pand\t\000pavgb\t\000pavgw\t\000pcmpeqb\t\000pc"
    "mpeqd\t\000pcmpeqw\t\000pcmpgtb\t\000pcmpgtd\t\000pcmpgtw\t\000pextrw\t"
    "\000phaddsw\t\000phaddw\t\000phaddd\t\000phsubd\t\000phsubsw\t\000phsub"
    "w\t\000pinsrw\t\000pmaddubsw\t\000pmaddwd\t\000pmaxsw\t\000pmaxub\t\000"
    "pminsw\t\000pminub\t\000pmovmskb\t\000pmulhrsw\t\000pmulhuw\t\000pmulhw"
    "\t\000pmullw\t\000pmuludq\t\000por\t\000psadbw\t\000pshufb\t\000pshufw\t"
    "\000psignb\t\000psignd\t\000psignw\t\000pslld\t\000psllq\t\000psllw\t\000"
    "psrad\t\000psraw\t\000psrld\t\000psrlq\t\000psrlw\t\000psubb\t\000psubd"
    "\t\000psubq\t\000psubsb\t\000psubsw\t\000psubusb\t\000psubusw\t\000psub"
    "w\t\000punpckhbw\t\000punpckhdq\t\000punpckhwd\t\000punpcklbw\t\000punp"
    "ckldq\t\000punpcklwd\t\000pxor\t\000monitor\000montmul\000movw\t%ax, \000"
    "movw\t\000movl\t%eax, \000movl\t\000movabsq\t\000movb\t%al, \000movb\t\000"
    "movbew\t\000movbel\t\000movbeq\t\000movddup\t\000movdqa\t\000movdqu\t\000"
    "movhlps\t\000movhpd\t\000movhps\t\000movlhps\t\000movlpd\t\000movlps\t\000"
    "movmskpd\t\000movmskps\t\000movntdqa\t\000movntdq\t\000movntiq\t\000mov"
    "ntil\t\000movntpd\t\000movntps\t\000movsb\000movsl\000movsd\t\000movshd"
    "up\t\000movsldup\t\000movsq\000movss\t\000movsw\000movsbw\t\000movswl\t"
    "\000movsbl\t\000movswq\t\000movslq\t\000movsbq\t\000movupd\t\000movups\t"
    "\000movzbw\t\000movzbl\t\000movzwl\t\000movzwq\t\000movzbq\t\000mpsadbw"
    "\t\000mulw\t\000mull\t\000mulq\t\000mulb\t\000mulpd\t\000mulps\t\000mul"
    "sd\t\000mulss\t\000mulxl\t\000mulxq\t\000fmuls\t\000fmull\t\000fimuls\t"
    "\000fimull\t\000fmulp\t\000fmul\t\000fmul\t%st(0), \000mwait\000negw\t\000"
    "negl\t\000negq\t\000negb\t\000nop\000nopl\t\000nopw\t\000notw\t\000notl"
    "\t\000notq\t\000notb\t\000orw\t\000orl\t\000orq\t\000orb\t\000outw\t%ax"
    ", \000outw\t%ax, %dx\000outl\t%eax, \000outl\t%eax, %dx\000outb\t%al, \000"
    "outb\t%al, %dx\000outsb\000outsl\000outsw\000packusdw\t\000pause\000pav"
    "gusb\t\000pblendvb\t\000pblendw\t\000pclmulqdq\t\000pcmpeqq\t\000pcmpes"
    "tri\t\000pcmpestrm\t\000pcmpgtq\t\000pcmpistri\t\000pcmpistrm\t\000pdep"
    "l\t\000pdepq\t\000pextl\t\000pextq\t\000pextrb\t\000pextrd\t\000pextrq\t"
    "\000pf2id\t\000pf2iw\t\000pfacc\t\000pfadd\t\000pfcmpeq\t\000pfcmpge\t\000"
    "pfcmpgt\t\000pfmax\t\000pfmin\t\000pfmul\t\000pfnacc\t\000pfpnacc\t\000"
    "pfrcpit1\t\000pfrcpit2\t\000pfrcp\t\000pfrsqit1\t\000pfrsqrt\t\000pfsub"
    "r\t\000pfsub\t\000phminposuw\t\000pi2fd\t\000pi2fw\t\000pinsrb\t\000pin"
    "srd\t\000pinsrq\t\000pmaxsb\t\000pmaxsd\t\000pmaxud\t\000pmaxuw\t\000pm"
    "insb\t\000pminsd\t\000pminud\t\000pminuw\t\000pmovsxbd\t\000pmovsxbq\t\000"
    "pmovsxbw\t\000pmovsxdq\t\000pmovsxwd\t\000pmovsxwq\t\000pmovzxbd\t\000p"
    "movzxbq\t\000pmovzxbw\t\000pmovzxdq\t\000pmovzxwd\t\000pmovzxwq\t\000pm"
    "uldq\t\000pmulhrw\t\000pmulld\t\000popw\t\000popl\t\000popq\t\000popal\000"
    "popcntw\t\000popcntl\t\000popcntq\t\000popw\t%ds\000popl\t%ds\000popw\t"
    "%es\000popl\t%es\000popfw\000popfl\000popfq\000popw\t%fs\000popl\t%fs\000"
    "popq\t%fs\000popw\t%gs\000popl\t%gs\000popq\t%gs\000popw\t%ss\000popl\t"
    "%ss\000prefetch \000prefetchnta\t\000prefetcht0\t\000prefetcht1\t\000pr"
    "efetcht2\t\000prefetchw \000pshufd\t\000pshufhw\t\000pshuflw\t\000pslld"
    "q\t\000psrldq\t\000pswapd\t\000ptest\t\000punpckhqdq\t\000punpcklqdq\t\000"
    "pushw\t\000pushl\t\000pushq\t\000pushal\000pushw\t%cs\000pushl\t%cs\000"
    "pushw\t%ds\000pushl\t%ds\000pushw\t%es\000pushl\t%es\000pushfw\000pushf"
    "l\000pushfq\000pushw\t%fs\000pushl\t%fs\000pushq\t%fs\000pushw\t%gs\000"
    "pushl\t%gs\000pushq\t%gs\000pushw\t%ss\000pushl\t%ss\000rclw\t\000rclw\t"
    "%cl, \000rcll\t\000rcll\t%cl, \000rclq\t\000rclq\t%cl, \000rclb\t\000rc"
    "lb\t%cl, \000rcpps\t\000rcpss\t\000rcrw\t\000rcrw\t%cl, \000rcrl\t\000r"
    "crl\t%cl, \000rcrq\t\000rcrq\t%cl, \000rcrb\t\000rcrb\t%cl, \000rdfsbas"
    "el\t\000rdfsbaseq\t\000rdgsbasel\t\000rdgsbaseq\t\000rdmsr\000rdpmc\000"
    "rdrandw\t\000rdrandl\t\000rdrandq\t\000rdtsc\000rdtscp\000#RELEASE_MOV "
    "PSEUDO!\000repne\000rep;movsb\000rep;movsl\000rep;movsq\000rep;movsw\000"
    "rep\000rep;stosb\000rep;stosl\000rep;stosq\000rep;stosw\000ret\000ret\t"
    "\000retw\t\000rex64\000rolw\t\000rolw\t%cl, \000roll\t\000roll\t%cl, \000"
    "rolq\t\000rolq\t%cl, \000rolb\t\000rolb\t%cl, \000rorw\t\000rorw\t%cl, "
    "\000rorl\t\000rorl\t%cl, \000rorq\t\000rorq\t%cl, \000rorb\t\000rorb\t%"
    "cl, \000rorxl\t\000rorxq\t\000roundpd\t\000roundps\t\000roundsd\t\000ro"
    "undss\t\000rsm\000rsqrtps\t\000rsqrtss\t\000sahf\000sarw\t\000sarw\t%cl"
    ", \000sarl\t\000sarl\t%cl, \000sarq\t\000sarq\t%cl, \000sarb\t\000sarb\t"
    "%cl, \000sarxl\t\000sarxq\t\000sbbw\t\000sbbl\t\000sbbq\t\000sbbb\t\000"
    "scasw\000scasl\000scasq\000scasb\000# variable sized alloca for segment"
    "ed stacks\000setae\t\000seta\t\000setbe\t\000setb\t\000sete\t\000setge\t"
    "\000setg\t\000setle\t\000setl\t\000setne\t\000setno\t\000setnp\t\000set"
    "ns\t\000seto\t\000setp\t\000sets\t\000sfence\000sgdtw\t\000sgdt\t\000sh"
    "lw\t\000shlw\t%cl, \000shll\t\000shll\t%cl, \000shlq\t\000shlq\t%cl, \000"
    "shlb\t\000shlb\t%cl, \000shldw\t%cl, \000shldw\t\000shldl\t%cl, \000shl"
    "dl\t\000shldq\t%cl, \000shldq\t\000shlxl\t\000shlxq\t\000shrw\t\000shrw"
    "\t%cl, \000shrl\t\000shrl\t%cl, \000shrq\t\000shrq\t%cl, \000shrb\t\000"
    "shrb\t%cl, \000shrdw\t%cl, \000shrdw\t\000shrdl\t%cl, \000shrdl\t\000sh"
    "rdq\t%cl, \000shrdq\t\000shrxl\t\000shrxq\t\000shufpd\t\000shufps\t\000"
    "sidtw\t\000sidt\t\000fsin\000sldtw\t\000sldtl\t\000sldtq\t\000smsww\t\000"
    "smswl\t\000smswq\t\000sqrtpd\t\000sqrtps\t\000sqrtsd\t\000sqrtss\t\000f"
    "sqrt\000ss\000stc\000std\000sti\000stmxcsr\t\000stosb\000stosl\000stosq"
    "\000stosw\000strw\t\000strl\t\000strq\t\000fsts\t\000fstl\t\000fstps\t\000"
    "fstpl\t\000fstpt\t\000fstp\t\000fst\t\000subw\t\000subl\t\000subq\t\000"
    "subb\t\000subpd\t\000subps\t\000fsubrs\t\000fsubrl\t\000fisubrs\t\000fi"
    "subrl\t\000fsubp\t\000fsubr\t\000fsub\t%st(0), \000subsd\t\000subss\t\000"
    "fsubs\t\000fsubl\t\000fisubs\t\000fisubl\t\000fsubrp\t\000fsub\t\000fsu"
    "br\t%st(0), \000swapgs\000syscall\000sysenter\000sysexitl\000sysexitq\000"
    "sysretl\000sysretq\000testw\t\000testl\t\000testq\t\000testb\t\000# TLS"
    "Call_32\000# TLSCall_64\000# TLS_addr32\000# TLS_addr64\000ud2\000ftst\000"
    "tzcntw\t\000tzcntl\t\000tzcntq\t\000fucompi\t\000fucomi\t\000fucompp\000"
    "fucomp\t\000fucom\t\000ud2b\000unpckhpd\t\000unpckhps\t\000unpcklpd\t\000"
    "unpcklps\t\000#VAARG_64 \000vaddpd\t\000vaddps\t\000vaddsd\t\000vaddss\t"
    "\000vaddsubpd\t\000vaddsubps\t\000vaesdeclast\t\000vaesdec\t\000vaesenc"
    "last\t\000vaesenc\t\000vaesimc\t\000vaeskeygenassist\t\000vandnpd\t\000"
    "vandnps\t\000vandpd\t\000vandps\t\000#VASTART_SAVE_XMM_REGS \000vblendp"
    "d\t\000vblendps\t\000vblendvpd\t\000vblendvps\t\000vbroadcastf128\t\000"
    "vbroadcasti128\t\000vbroadcastsd\t\000vbroadcastss\t\000vcmppd\t\000vcm"
    "pps\t\000vcmpsd\t\000vcmpss\t\000vcvtpd2dqx\t\000vcvtpd2dqy\t\000vcvtpd"
    "2psx\t\000vcvtpd2psy\t\000vcvtph2ps\t\000vcvtps2ph\t\000vcvtsi2sdq\t\000"
    "vcvtsi2sdl\t\000vcvtsi2ssq\t\000vcvtss2si\t\000vcvtss2sil\t\000vcvttpd2"
    "dq\t\000vcvttpd2dqx\t\000vcvttpd2dqy\t\000vcvttps2dq\t\000vdivpd\t\000v"
    "divps\t\000vdivsd\t\000vdivss\t\000vdppd\t\000vdpps\t\000verr\t\000verw"
    "\t\000vextractf128\t\000vextracti128\t\000vextractps\t\000vextractps \t"
    "\000vfmaddpd\t\000vfmadd132pd\t\000vfmadd213pd\t\000vfmadd231pd\t\000vf"
    "maddps\t\000vfmadd132ps\t\000vfmadd213ps\t\000vfmadd231ps\t\000vfmaddsd"
    "\t\000vfmadd132sd\t\000vfmadd213sd\t\000vfmadd231sd\t\000vfmaddss\t\000"
    "vfmadd132ss\t\000vfmadd213ss\t\000vfmadd231ss\t\000vfmaddsubpd\t\000vfm"
    "addsub132pd\t\000vfmaddsub213pd\t\000vfmaddsub231pd\t\000vfmaddsubps\t\000"
    "vfmaddsub132ps\t\000vfmaddsub213ps\t\000vfmaddsub231ps\t\000vfmsubaddpd"
    "\t\000vfmsubadd132pd\t\000vfmsubadd213pd\t\000vfmsubadd231pd\t\000vfmsu"
    "baddps\t\000vfmsubadd132ps\t\000vfmsubadd213ps\t\000vfmsubadd231ps\t\000"
    "vfmsubpd\t\000vfmsub132pd\t\000vfmsub213pd\t\000vfmsub231pd\t\000vfmsub"
    "ps\t\000vfmsub132ps\t\000vfmsub213ps\t\000vfmsub231ps\t\000vfmsubsd\t\000"
    "vfmsub132sd\t\000vfmsub213sd\t\000vfmsub231sd\t\000vfmsubss\t\000vfmsub"
    "132ss\t\000vfmsub213ss\t\000vfmsub231ss\t\000vfnmaddpd\t\000vfnmadd132p"
    "d\t\000vfnmadd213pd\t\000vfnmadd231pd\t\000vfnmaddps\t\000vfnmadd132ps\t"
    "\000vfnmadd213ps\t\000vfnmadd231ps\t\000vfnmaddsd\t\000vfnmadd132sd\t\000"
    "vfnmadd213sd\t\000vfnmadd231sd\t\000vfnmaddss\t\000vfnmadd132ss\t\000vf"
    "nmadd213ss\t\000vfnmadd231ss\t\000vfnmsubpd\t\000vfnmsub132pd\t\000vfnm"
    "sub213pd\t\000vfnmsub231pd\t\000vfnmsubps\t\000vfnmsub132ps\t\000vfnmsu"
    "b213ps\t\000vfnmsub231ps\t\000vfnmsubsd\t\000vfnmsub132sd\t\000vfnmsub2"
    "13sd\t\000vfnmsub231sd\t\000vfnmsubss\t\000vfnmsub132ss\t\000vfnmsub213"
    "ss\t\000vfnmsub231ss\t\000vfrczpd\t\000vfrczps\t\000vfrczsd\t\000vfrczs"
    "s\t\000vorpd\t\000vorps\t\000vxorpd\t\000vxorps\t\000vhaddpd\t\000vhadd"
    "ps\t\000vhsubpd\t\000vhsubps\t\000vinsertf128\t\000vinserti128\t\000vin"
    "sertps\t\000vlddqu\t\000vldmxcsr\t\000vmaskmovdqu\t\000vmaskmovpd\t\000"
    "vmaskmovps\t\000vmaxpd\t\000vmaxps\t\000vmaxsd\t\000vmaxss\t\000vmcall\000"
    "vmclear\t\000vminpd\t\000vminps\t\000vminsd\t\000vminss\t\000vmlaunch\000"
    "vmovd\t\000vmovq\t\000vmovddup\t\000vmovdqa\t\000vmovdqu\t\000vmovhlps\t"
    "\000vmovhpd\t\000vmovhps\t\000vmovlhps\t\000vmovlpd\t\000vmovlps\t\000v"
    "movmskpd\t\000vmovmskps\t\000vmovntdqa\t\000vmovntdq\t\000vmovntpd\t\000"
    "vmovntps\t\000vmovsd\t\000vmovshdup\t\000vmovsldup\t\000vmovss\t\000vmo"
    "vupd\t\000vmovups\t\000vmpsadbw\t\000vmptrld\t\000vmptrst\t\000vmreadl\t"
    "\000vmreadq\t\000vmresume\000vmulpd\t\000vmulps\t\000vmulsd\t\000vmulss"
    "\t\000vmwritel\t\000vmwriteq\t\000vmxoff\000vmxon\t\000vpabsb\t\000vpab"
    "sd\t\000vpabsw\t\000vpackssdw\t\000vpacksswb\t\000vpackusdw\t\000vpacku"
    "swb\t\000vpaddb\t\000vpaddd\t\000vpaddq\t\000vpaddsb\t\000vpaddsw\t\000"
    "vpaddusb\t\000vpaddusw\t\000vpaddw\t\000vpalignr\t\000vpandn\t\000vpand"
    "\t\000vpavgb\t\000vpavgw\t\000vpblendd\t\000vpblendvb\t\000vpblendw\t\000"
    "vpbroadcastb\t\000vpbroadcastd\t\000vpbroadcastq\t\000vpbroadcastw\t\000"
    "vpclmulqdq\t\000vpcmov\t\000vpcmpeqb\t\000vpcmpeqd\t\000vpcmpeqq\t\000v"
    "pcmpeqw\t\000vpcmpestri\t\000vpcmpestrm\t\000vpcmpgtb\t\000vpcmpgtd\t\000"
    "vpcmpgtq\t\000vpcmpgtw\t\000vpcmpistri\t\000vpcmpistrm\t\000vpcomb\t\000"
    "vpcomd\t\000vpcomq\t\000vpcomub\t\000vpcomud\t\000vpcomuq\t\000vpcomuw\t"
    "\000vpcomw\t\000vperm2f128\t\000vperm2i128\t\000vpermd\t\000vpermil2pd\t"
    "\000vpermil2ps\t\000vpermilpd\t\000vpermilps\t\000vpermpd\t\000vpermps\t"
    "\000vpermq\t\000vpextrb\t\000vpextrd\t\000vpextrq\t\000vpextrw\t\000vph"
    "addbd\t\000vphaddbq\t\000vphaddbw\t\000vphadddq\t\000vphaddd\t\000vphad"
    "dsw\t\000vphaddubd\t\000vphaddubq\t\000vphaddubw\t\000vphaddudq\t\000vp"
    "hadduwd\t\000vphadduwq\t\000vphaddwd\t\000vphaddwq\t\000vphaddw\t\000vp"
    "hminposuw\t\000vphsubbw\t\000vphsubdq\t\000vphsubd\t\000vphsubsw\t\000v"
    "phsubwd\t\000vphsubw\t\000vpinsrb\t\000vpinsrd\t\000vpinsrq\t\000vpinsr"
    "w\t\000vpmacsdd\t\000vpmacsdqh\t\000vpmacsdql\t\000vpmacssdd\t\000vpmac"
    "ssdqh\t\000vpmacssdql\t\000vpmacsswd\t\000vpmacssww\t\000vpmacswd\t\000"
    "vpmacsww\t\000vpmadcsswd\t\000vpmadcswd\t\000vpmaddubsw\t\000vpmaddwd\t"
    "\000vpmaskmovd\t\000vpmaskmovq\t\000vpmaxsb\t\000vpmaxsd\t\000vpmaxsw\t"
    "\000vpmaxub\t\000vpmaxud\t\000vpmaxuw\t\000vpminsb\t\000vpminsd\t\000vp"
    "minsw\t\000vpminub\t\000vpminud\t\000vpminuw\t\000vpmovmskb\t\000vpmovs"
    "xbd\t\000vpmovsxbq\t\000vpmovsxbw\t\000vpmovsxdq\t\000vpmovsxwd\t\000vp"
    "movsxwq\t\000vpmovzxbd\t\000vpmovzxbq\t\000vpmovzxbw\t\000vpmovzxdq\t\000"
    "vpmovzxwd\t\000vpmovzxwq\t\000vpmuldq\t\000vpmulhrsw\t\000vpmulhuw\t\000"
    "vpmulhw\t\000vpmulld\t\000vpmullw\t\000vpmuludq\t\000vpor\t\000vpperm\t"
    "\000vprotb\t\000vprotd\t\000vprotq\t\000vprotw\t\000vpsadbw\t\000vpshab"
    "\t\000vpshad\t\000vpshaq\t\000vpshaw\t\000vpshlb\t\000vpshld\t\000vpshl"
    "q\t\000vpshlw\t\000vpshufb\t\000vpshufd\t\000vpshufhw\t\000vpshuflw\t\000"
    "vpsignb\t\000vpsignd\t\000vpsignw\t\000vpslldq\t\000vpslld\t\000vpsllq\t"
    "\000vpsllvd\t\000vpsllvq\t\000vpsllw\t\000vpsrad\t\000vpsravd\t\000vpsr"
    "aw\t\000vpsrldq\t\000vpsrld\t\000vpsrlq\t\000vpsrlvd\t\000vpsrlvq\t\000"
    "vpsrlw\t\000vpsubb\t\000vpsubd\t\000vpsubq\t\000vpsubsb\t\000vpsubsw\t\000"
    "vpsubusb\t\000vpsubusw\t\000vpsubw\t\000vptest\t\000vpunpckhbw\t\000vpu"
    "npckhdq\t\000vpunpckhqdq\t\000vpunpckhwd\t\000vpunpcklbw\t\000vpunpckld"
    "q\t\000vpunpcklqdq\t\000vpunpcklwd\t\000vpxor\t\000vrcpps\t\000vrcpss\t"
    "\000vroundpd\t\000vroundps\t\000vroundsd\t\000vroundss\t\000vrsqrtps\t\000"
    "vrsqrtss\t\000vshufpd\t\000vshufps\t\000vsqrtpd\t\000vsqrtps\t\000vsqrt"
    "sd\t\000vsqrtss\t\000vstmxcsr\t\000vsubpd\t\000vsubps\t\000vsubsd\t\000"
    "vsubss\t\000vtestpd\t\000vtestps\t\000vunpckhpd\t\000vunpckhps\t\000vun"
    "pcklpd\t\000vunpcklps\t\000vzeroall\000vzeroupper\000wait\000wbinvd\000"
    "# dynamic stack allocation\000wrfsbasel\t\000wrfsbaseq\t\000wrgsbasel\t"
    "\000wrgsbaseq\t\000wrmsr\000xaddw\t\000xaddl\t\000xaddq\t\000xaddb\t\000"
    "xchgw\t\000xchgl\t\000xchgq\t\000xchgb\t\000fxch\t\000xcryptcbc\000xcry"
    "ptcfb\000xcryptctr\000xcryptecb\000xcryptofb\000xgetbv\000xlatb\000xorw"
    "\t\000xorl\t\000xorq\t\000xorb\t\000xrstor\t\000xrstorq\t\000xsave\t\000"
    "xsaveq\t\000xsaveopt\t\000xsaveoptq\t\000xsetbv\000xsha1\000xsha256\000"
    "xstore\000";

  O << "\t";

  // Emit the opcode for the instruction.
  unsigned Bits = OpInfo[MI->getOpcode()];
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 16383)-1;


  // Fragment 0 encoded into 6 bits for 47 unique commands.
  switch ((Bits >> 26) & 63) {
  default:   // unreachable.
  case 0:
    // DBG_VALUE, BUNDLE, AAA, AAS, ABS_F, ACQUIRE_MOV16rm, ACQUIRE_MOV32rm, ...
    return;
    break;
  case 1:
    // AAD8i8, AAM8i8, ADC16i16, ADC32i32, ADC64i32, ADC8i8, ADD16i16, ADD32i...
    printOperand(MI, 0, O); 
    break;
  case 2:
    // ADC16mi, ADC16mi8, ADC16mr, ADC32mi, ADC32mi8, ADC32mr, ADC64mi32, ADC...
    printOperand(MI, 5, O); 
    O << ", "; 
    break;
  case 3:
    // ADC16ri, ADC16ri8, ADC16rr, ADC16rr_REV, ADC32ri, ADC32ri8, ADC32rr, A...
    printOperand(MI, 2, O); 
    O << ", "; 
    break;
  case 4:
    // ADC16rm, ADD16rm, AND16rm, CMOVA16rm, CMOVAE16rm, CMOVB16rm, CMOVBE16r...
    printi16mem(MI, 2, O); 
    O << ", "; 
    break;
  case 5:
    // ADC32rm, ADD32rm, AND32rm, ANDN32rm, CMOVA32rm, CMOVAE32rm, CMOVB32rm,...
    printi32mem(MI, 2, O); 
    O << ", "; 
    break;
  case 6:
    // ADC64rm, ADD64rm, AND64rm, ANDN64rm, CMOVA64rm, CMOVAE64rm, CMOVB64rm,...
    printi64mem(MI, 2, O); 
    O << ", "; 
    break;
  case 7:
    // ADC8rm, ADD8rm, AND8rm, CRC32r32m8, CRC32r64m8, OR8rm, SBB8rm, SUB8rm,...
    printi8mem(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 8:
    // ADDPDrm, ADDPSrm, ADDSUBPDrm, ADDSUBPSrm, ANDNPDrm, ANDNPSrm, ANDPDrm,...
    printf128mem(MI, 2, O); 
    O << ", "; 
    break;
  case 9:
    // ADDSDrm, ADDSDrm_Int, DIVSDrm, DIVSDrm_Int, Int_CVTSD2SSrm, Int_VCVTSD...
    printf64mem(MI, 2, O); 
    O << ", "; 
    break;
  case 10:
    // ADDSSrm, ADDSSrm_Int, DIVSSrm, DIVSSrm_Int, Int_CVTSS2SDrm, Int_VCVTSS...
    printf32mem(MI, 2, O); 
    O << ", "; 
    break;
  case 11:
    // ADD_F32m, DIVR_F32m, DIV_F32m, FBLDm, FBSTPm, FCOM32m, FCOMP32m, FLDEN...
    printf32mem(MI, 0, O); 
    return;
    break;
  case 12:
    // ADD_F64m, DIVR_F64m, DIV_F64m, FCOM64m, FCOMP64m, LD_F64m, MUL_F64m, S...
    printf64mem(MI, 0, O); 
    return;
    break;
  case 13:
    // ADD_FI16m, DEC16m, DEC64_16m, DIV16m, DIVR_FI16m, DIV_FI16m, FICOM16m,...
    printi16mem(MI, 0, O); 
    return;
    break;
  case 14:
    // ADD_FI32m, CALL32m, DEC32m, DEC64_32m, DIV32m, DIVR_FI32m, DIV_FI32m, ...
    printi32mem(MI, 0, O); 
    break;
  case 15:
    // AESDECLASTrm, AESDECrm, AESENCLASTrm, AESENCrm, BLENDVPDrm0, BLENDVPSr...
    printi128mem(MI, 2, O); 
    O << ", "; 
    break;
  case 16:
    // AESIMCrm, CVTDQ2PSrm, INVEPT32, INVEPT64, INVPCID32, INVPCID64, INVVPI...
    printi128mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 17:
    // AESIMCrr, BLSI32rr, BLSI64rr, BLSMSK32rr, BLSMSK64rr, BLSR32rr, BLSR64...
    printOperand(MI, 1, O); 
    O << ", "; 
    break;
  case 18:
    // AESKEYGENASSIST128rm, BEXTR32rm, BEXTR64rm, BZHI32rm, BZHI64rm, EXTRAC...
    printOperand(MI, 6, O); 
    O << ", "; 
    break;
  case 19:
    // BLENDPDrmi, BLENDPSrmi, CMPPDrmi_alt, CMPPSrmi_alt, CMPSDrm_alt, CMPSS...
    printOperand(MI, 7, O); 
    O << ", "; 
    break;
  case 20:
    // BLENDPDrri, BLENDPSrri, CMPPDrri_alt, CMPPSrri_alt, CMPSDrr_alt, CMPSS...
    printOperand(MI, 3, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ", "; 
    break;
  case 21:
    // BLSI32rm, BLSMSK32rm, BLSR32rm, BOUNDS32rm, BSF32rm, BSR32rm, CMP32rm,...
    printi32mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 22:
    // BLSI64rm, BLSMSK64rm, BLSR64rm, BSF64rm, BSR64rm, CMP64rm, CVTSI2SD64r...
    printi64mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 23:
    // BOUNDS16rm, BSF16rm, BSR16rm, CMP16rm, LAR16rm, LAR32rm, LAR64rm, LSL1...
    printi16mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 24:
    // CALL64m, CMPXCHG8B, DEC64m, DIV64m, IDIV64m, ILD_F64m, IMUL64m, INC64m...
    printi64mem(MI, 0, O); 
    break;
  case 25:
    // CALL64pcrel32, CALLpcrel16, CALLpcrel32, JAE_1, JAE_4, JA_1, JA_4, JBE...
    print_pcrel_imm(MI, 0, O); 
    break;
  case 26:
    // CLFLUSH, DEC8m, DIV8m, IDIV8m, IMUL8m, INC8m, INVLPG, LOCK_DEC8m, LOCK...
    printi8mem(MI, 0, O); 
    return;
    break;
  case 27:
    // CMP8rm, MOV8rm, MOV8rm_NOREX, MOVSX16rm8, MOVSX32rm8, MOVSX64rm8, MOVZ...
    printi8mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    break;
  case 28:
    // CMPPDrmi, CMPPSrmi, CMPSDrm, CMPSSrm, Int_CMPSDrm, Int_CMPSSrm, Int_VC...
    printSSECC(MI, 7, O); 
    break;
  case 29:
    // CMPPDrri, CMPPSrri, CMPSDrr, CMPSSrr, Int_CMPSDrr, Int_CMPSSrr, Int_VC...
    printSSECC(MI, 3, O); 
    break;
  case 30:
    // CMPXCHG16B, LCMPXCHG16B
    printi128mem(MI, 0, O); 
    return;
    break;
  case 31:
    // COMISDrm, COMISSrm, CVTDQ2PDrm, CVTPD2DQrm, CVTPD2PSrm, CVTPS2DQrm, CV...
    printf128mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 32:
    // CVTPS2PDrm, CVTSD2SSrm, CVTTSD2SI64rm, CVTTSD2SIrm, Int_CVTPS2PDrm, In...
    printf64mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 33:
    // CVTSS2SDrm, CVTSS2SI64rm, CVTSS2SIrm, CVTTSS2SI64rm, CVTTSS2SIrm, Int_...
    printf32mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 34:
    // FARCALL16m, FARCALL32m, FARCALL64, FARJMP16m, FARJMP32m, FARJMP64, FXR...
    printopaquemem(MI, 0, O); 
    return;
    break;
  case 35:
    // LDS16rm, LDS32rm, LES16rm, LES32rm, LFS16rm, LFS32rm, LFS64rm, LGS16rm...
    printopaquemem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 36:
    // LD_F80m, ST_FP80m
    printf80mem(MI, 0, O); 
    return;
    break;
  case 37:
    // VADDPDYrm, VADDPSYrm, VADDSUBPDYrm, VADDSUBPSYrm, VANDNPDYrm, VANDNPSY...
    printf256mem(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 38:
    // VCVTDQ2PSYrm, VLDDQUYrm, VMOVDQAYrm, VMOVDQUYrm, VMOVNTDQAYrm, VPABSBr...
    printi256mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 39:
    // VCVTPD2DQYrm, VCVTPD2PSYrm, VCVTPS2DQYrm, VCVTTPD2DQYrm, VCVTTPS2DQYrm...
    printf256mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 40:
    // VFMADDPD4rm, VFMADDPS4rm, VFMADDSUBPD4rm, VFMADDSUBPS4rm, VFMSUBADDPD4...
    printf128mem(MI, 3, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 41:
    // VFMADDPD4rmY, VFMADDPS4rmY, VFMADDSUBPD4rmY, VFMADDSUBPS4rmY, VFMSUBAD...
    printf256mem(MI, 3, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 42:
    // VFMADDSD4rm, VFMSUBSD4rm, VFNMADDSD4rm, VFNMSUBSD4rm
    printf64mem(MI, 3, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 43:
    // VFMADDSS4rm, VFMSUBSS4rm, VFNMADDSS4rm, VFNMSUBSS4rm
    printf32mem(MI, 3, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 44:
    // VPACKSSDWYrm, VPACKSSWBYrm, VPACKUSDWYrm, VPACKUSWBYrm, VPADDBYrm, VPA...
    printi256mem(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 45:
    // VPERMIL2PDmr, VPERMIL2PDmrY, VPERMIL2PDrm, VPERMIL2PDrmY, VPERMIL2PSmr...
    printOperand(MI, 8, O); 
    O << ", "; 
    break;
  case 46:
    // VPERMIL2PDrr, VPERMIL2PDrrY, VPERMIL2PSrr, VPERMIL2PSrrY
    printOperand(MI, 4, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  }


  // Fragment 1 encoded into 6 bits for 47 unique commands.
  switch ((Bits >> 20) & 63) {
  default:   // unreachable.
  case 0:
    // AAD8i8, AAM8i8, ADD_FI32m, ADD_FPrST0, ADD_FST0r, ADD_FrST0, BSWAP32r,...
    return;
    break;
  case 1:
    // ADC16i16, ADD16i16, AND16i16, CMP16i16, IN16ri, MOV16o16a, OR16i16, SB...
    O << ", %ax"; 
    return;
    break;
  case 2:
    // ADC16mi, ADC16mi8, ADC16mr, ADD16mi, ADD16mi8, ADD16mr, AND16mi, AND16...
    printi16mem(MI, 0, O); 
    return;
    break;
  case 3:
    // ADC16ri, ADC16ri8, ADC16rm, ADC16rr, ADC32ri, ADC32ri8, ADC32rm, ADC32...
    printOperand(MI, 1, O); 
    break;
  case 4:
    // ADC16rr_REV, ADC32rr_REV, ADC64rr_REV, ADC8rr_REV, ADD16rr_REV, ADD32r...
    printOperand(MI, 0, O); 
    break;
  case 5:
    // ADC32i32, ADD32i32, AND32i32, CMP32i32, IN32ri, MOV32o32a, OR32i32, SB...
    O << ", %eax"; 
    return;
    break;
  case 6:
    // ADC32mi, ADC32mi8, ADC32mr, ADD32mi, ADD32mi8, ADD32mr, AND32mi, AND32...
    printi32mem(MI, 0, O); 
    return;
    break;
  case 7:
    // ADC64i32, ADD64i32, AND64i32, CMP64i32, OR64i32, SBB64i32, SUB64i32, T...
    O << ", %rax"; 
    return;
    break;
  case 8:
    // ADC64mi32, ADC64mi8, ADC64mr, ADD64mi32, ADD64mi8, ADD64mr, AND64mi32,...
    printi64mem(MI, 0, O); 
    return;
    break;
  case 9:
    // ADC8i8, ADD8i8, AND8i8, CMP8i8, IN8ri, MOV8o8a, OR8i8, SBB8i8, SUB8i8,...
    O << ", %al"; 
    return;
    break;
  case 10:
    // ADC8mi, ADC8mr, ADD8mi, ADD8mr, AND8mi, AND8mr, CMP8mi, CMP8mr, CMPXCH...
    printi8mem(MI, 0, O); 
    break;
  case 11:
    // AESKEYGENASSIST128rm, PCMPESTRIArm, PCMPESTRICrm, PCMPESTRIOrm, PCMPES...
    printi128mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 12:
    // ARPL16mr, ARPL16rr, ENTER, VAARG_64, VASTART_SAVE_XMM_REGS
    O << ", "; 
    break;
  case 13:
    // BEXTR32rm, BZHI32rm, IMUL32rmi, IMUL32rmi8, RORX32mi, SARX32rm, SHLX32...
    printi32mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 14:
    // BEXTR64rm, BZHI64rm, IMUL64rmi32, IMUL64rmi8, MMX_PSHUFWmi, RORX64mi, ...
    printi64mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 15:
    // BLENDPDrmi, BLENDPSrmi, DPPDrmi, DPPSrmi, MPSADBWrmi, PALIGNR128rm, PB...
    printi128mem(MI, 2, O); 
    O << ", "; 
    break;
  case 16:
    // CMOVBE_F, CMOVB_F, CMOVE_F, CMOVNBE_F, CMOVNB_F, CMOVNE_F, CMOVNP_F, C...
    O << ", %st(0)"; 
    return;
    break;
  case 17:
    // CMPPDrmi, CMPPDrri, VCMPPDYrmi, VCMPPDYrri, VCMPPDrmi, VCMPPDrri
    O << "pd\t"; 
    break;
  case 18:
    // CMPPDrmi_alt, CMPPSrmi_alt, SHUFPDrmi, SHUFPSrmi, VCMPPDrmi_alt, VCMPP...
    printf128mem(MI, 2, O); 
    O << ", "; 
    break;
  case 19:
    // CMPPSrmi, CMPPSrri, VCMPPSYrmi, VCMPPSYrri, VCMPPSrmi, VCMPPSrri
    O << "ps\t"; 
    break;
  case 20:
    // CMPSDrm, CMPSDrr, Int_CMPSDrm, Int_CMPSDrr, Int_VCMPSDrm, Int_VCMPSDrr...
    O << "sd\t"; 
    break;
  case 21:
    // CMPSDrm_alt, ROUNDSDm, VCMPSDrm_alt, VFMADDSD4mr, VFMSUBSD4mr, VFNMADD...
    printf64mem(MI, 2, O); 
    O << ", "; 
    break;
  case 22:
    // CMPSSrm, CMPSSrr, Int_CMPSSrm, Int_CMPSSrr, Int_VCMPSSrm, Int_VCMPSSrr...
    O << "ss\t"; 
    break;
  case 23:
    // CMPSSrm_alt, INSERTPSrm, ROUNDSSm, VCMPSSrm_alt, VFMADDSS4mr, VFMSUBSS...
    printf32mem(MI, 2, O); 
    O << ", "; 
    break;
  case 24:
    // EXTRACTPSmr, PEXTRBmr, PEXTRDmr, PEXTRQmr, PEXTRWmr, SHLD16mri8, SHLD3...
    printOperand(MI, 5, O); 
    O << ", "; 
    break;
  case 25:
    // IMUL16rmi, IMUL16rmi8
    printi16mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 26:
    // LXADD16, MMX_PINSRWirmi, PINSRWrmi, VPINSRWrmi, XCHG16rm
    printi16mem(MI, 2, O); 
    break;
  case 27:
    // LXADD32, PINSRDrm, VPINSRDrm, XCHG32rm
    printi32mem(MI, 2, O); 
    break;
  case 28:
    // LXADD64, MMX_PALIGNR64irm, PINSRQrm, VPINSRQrm, XCHG64rm
    printi64mem(MI, 2, O); 
    break;
  case 29:
    // LXADD8, PINSRBrm, VPINSRBrm, XCHG8rm
    printi8mem(MI, 2, O); 
    break;
  case 30:
    // MOV8rm_NOREX
    O << "  # NOREX"; 
    return;
    break;
  case 31:
    // MOVAPDmr, MOVAPSmr, MOVNTDQmr, MOVNTPDmr, MOVNTPSmr, MOVUPDmr, MOVUPSm...
    printf128mem(MI, 0, O); 
    return;
    break;
  case 32:
    // MOVDQAmr, MOVDQUmr, MOVDQUmr_Int, VMOVDQAmr, VMOVDQUmr, VMOVDQUmr_Int
    printi128mem(MI, 0, O); 
    return;
    break;
  case 33:
    // MOVHPDmr, MOVHPSmr, MOVLPDmr, MOVLPSmr, MOVSDmr, VMOVHPDmr, VMOVHPSmr,...
    printf64mem(MI, 0, O); 
    return;
    break;
  case 34:
    // MOVSSmr, VMOVSSmr
    printf32mem(MI, 0, O); 
    return;
    break;
  case 35:
    // ROUNDPDm, ROUNDPSm, VPERMILPDmi, VPERMILPSmi, VPROTBmi, VPROTBmr, VPRO...
    printf128mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 36:
    // TAILJMPd, TAILJMPd64, TAILJMPm, TAILJMPm64, TAILJMPr64
    O << "  # TAILCALL"; 
    return;
    break;
  case 37:
    // VBLENDPDYrmi, VBLENDPSYrmi, VBLENDVPDYrm, VBLENDVPSYrm, VDPPSYrmi, VMP...
    printi256mem(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 38:
    // VCMPPDYrmi_alt, VCMPPSYrmi_alt, VFMADDPD4mrY, VFMADDPS4mrY, VFMADDSUBP...
    printf256mem(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 39:
    // VMOVAPDYmr, VMOVAPSYmr, VMOVNTDQYmr, VMOVNTPDYmr, VMOVNTPSYmr, VMOVUPD...
    printf256mem(MI, 0, O); 
    return;
    break;
  case 40:
    // VMOVDQAYmr, VMOVDQUYmr
    printi256mem(MI, 0, O); 
    return;
    break;
  case 41:
    // VPERMIL2PDmr, VPERMIL2PDmrY, VPERMIL2PSmr, VPERMIL2PSmrY
    printOperand(MI, 7, O); 
    O << ", "; 
    break;
  case 42:
    // VPERMIL2PDrm, VPERMIL2PSrm
    printf128mem(MI, 3, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 43:
    // VPERMIL2PDrmY, VPERMIL2PSrmY
    printf256mem(MI, 3, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 44:
    // VPERMILPDYmi, VPERMILPSYmi, VROUNDYPDm, VROUNDYPSm
    printf256mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 45:
    // VPERMPDYrm, VPERMQYrm, VPSHUFDYmi, VPSHUFHWYmi, VPSHUFLWYmi
    printi256mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 46:
    // XCHG16rr, XCHG32rr, XCHG64rr, XCHG8rr
    printOperand(MI, 2, O); 
    return;
    break;
  }


  // Fragment 2 encoded into 5 bits for 22 unique commands.
  switch ((Bits >> 15) & 31) {
  default:   // unreachable.
  case 0:
    // ADC16ri, ADC16ri8, ADC16rm, ADC16rr, ADC16rr_REV, ADC32ri, ADC32ri8, A...
    return;
    break;
  case 1:
    // AESKEYGENASSIST128rr, ANDN32rm, ANDN32rr, ANDN64rm, ANDN64rr, BEXTR32r...
    O << ", "; 
    break;
  case 2:
    // ARPL16mr
    printi16mem(MI, 1, O); 
    return;
    break;
  case 3:
    // ARPL16rr, ENTER, VASTART_SAVE_XMM_REGS, VBLENDPDrmi, VBLENDPSrmi, VBLE...
    printOperand(MI, 1, O); 
    break;
  case 4:
    // BLENDPDrmi, BLENDPSrmi, CMPPDrmi_alt, CMPPSrmi_alt, CMPSDrm_alt, CMPSS...
    printOperand(MI, 0, O); 
    return;
    break;
  case 5:
    // CMPPDrmi, CMPPSrmi, VCMPPDrmi, VCMPPSrmi, VPERMIL2PDmr, VPERMIL2PSmr
    printf128mem(MI, 2, O); 
    O << ", "; 
    break;
  case 6:
    // CMPPDrri, CMPPSrri, CMPSDrr, CMPSSrr, Int_CMPSDrr, Int_CMPSSrr, Int_VC...
    printOperand(MI, 2, O); 
    O << ", "; 
    break;
  case 7:
    // CMPSDrm, Int_CMPSDrm, Int_VCMPSDrm, VCMPSDrm
    printf64mem(MI, 2, O); 
    O << ", "; 
    break;
  case 8:
    // CMPSSrm, Int_CMPSSrm, Int_VCMPSSrm, VCMPSSrm
    printf32mem(MI, 2, O); 
    O << ", "; 
    break;
  case 9:
    // EXTRACTPSmr, VEXTRACTPSmr
    printf32mem(MI, 0, O); 
    return;
    break;
  case 10:
    // MOV8mr_NOREX, MOV8rr_NOREX
    O << "  # NOREX"; 
    return;
    break;
  case 11:
    // PEXTRBmr, VPEXTRBmr
    printi8mem(MI, 0, O); 
    return;
    break;
  case 12:
    // PEXTRDmr, SHLD32mri8, SHRD32mri8, VPEXTRDmr
    printi32mem(MI, 0, O); 
    return;
    break;
  case 13:
    // PEXTRQmr, SHLD64mri8, SHRD64mri8, VPEXTRQmr
    printi64mem(MI, 0, O); 
    return;
    break;
  case 14:
    // PEXTRWmr, SHLD16mri8, SHRD16mri8, VPEXTRWmr
    printi16mem(MI, 0, O); 
    return;
    break;
  case 15:
    // VAARG_64
    printi8mem(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 6, O); 
    O << ", "; 
    printOperand(MI, 7, O); 
    O << ", "; 
    printOperand(MI, 8, O); 
    return;
    break;
  case 16:
    // VCMPPDYrmi, VCMPPSYrmi, VPERMIL2PDmrY, VPERMIL2PSmrY
    printf256mem(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 17:
    // VCVTPS2PHYmr, VEXTRACTF128mr, VMASKMOVPDmr, VMASKMOVPSmr
    printf128mem(MI, 0, O); 
    return;
    break;
  case 18:
    // VCVTPS2PHmr
    printf64mem(MI, 0, O); 
    return;
    break;
  case 19:
    // VEXTRACTI128mr, VPMASKMOVDmr, VPMASKMOVQmr
    printi128mem(MI, 0, O); 
    return;
    break;
  case 20:
    // VMASKMOVPDYmr, VMASKMOVPSYmr
    printf256mem(MI, 0, O); 
    return;
    break;
  case 21:
    // VPMASKMOVDYmr, VPMASKMOVQYmr
    printi256mem(MI, 0, O); 
    return;
    break;
  }

  switch (MI->getOpcode()) {
  case X86::AESKEYGENASSIST128rr:
  case X86::ANDN32rm:
  case X86::ANDN32rr:
  case X86::ANDN64rm:
  case X86::ANDN64rr:
  case X86::BEXTR32rr:
  case X86::BEXTR64rr:
  case X86::BZHI32rr:
  case X86::BZHI64rr:
  case X86::CMPPDrmi:
  case X86::CMPPDrri:
  case X86::CMPPSrmi:
  case X86::CMPPSrri:
  case X86::CMPSDrm:
  case X86::CMPSDrr:
  case X86::CMPSSrm:
  case X86::CMPSSrr:
  case X86::EXTRACTPSrr:
  case X86::IMUL16rri:
  case X86::IMUL16rri8:
  case X86::IMUL32rri:
  case X86::IMUL32rri8:
  case X86::IMUL64rri32:
  case X86::IMUL64rri8:
  case X86::Int_CMPSDrm:
  case X86::Int_CMPSDrr:
  case X86::Int_CMPSSrm:
  case X86::Int_CMPSSrr:
  case X86::Int_VCVTSD2SSrm:
  case X86::Int_VCVTSD2SSrr:
  case X86::Int_VCVTSI2SD64rm:
  case X86::Int_VCVTSI2SD64rr:
  case X86::Int_VCVTSI2SDrm:
  case X86::Int_VCVTSI2SDrr:
  case X86::Int_VCVTSI2SS64rm:
  case X86::Int_VCVTSI2SS64rr:
  case X86::Int_VCVTSI2SSrm:
  case X86::Int_VCVTSI2SSrr:
  case X86::Int_VCVTSS2SDrm:
  case X86::Int_VCVTSS2SDrr:
  case X86::MMX_PALIGNR64irm:
  case X86::MMX_PEXTRWirri:
  case X86::MMX_PINSRWirmi:
  case X86::MMX_PSHUFWri:
  case X86::MULX32rm:
  case X86::MULX32rr:
  case X86::MULX64rm:
  case X86::MULX64rr:
  case X86::PCMPESTRIArr:
  case X86::PCMPESTRICrr:
  case X86::PCMPESTRIOrr:
  case X86::PCMPESTRISrr:
  case X86::PCMPESTRIZrr:
  case X86::PCMPESTRIrr:
  case X86::PCMPESTRM128rr:
  case X86::PCMPISTRIArr:
  case X86::PCMPISTRICrr:
  case X86::PCMPISTRIOrr:
  case X86::PCMPISTRISrr:
  case X86::PCMPISTRIZrr:
  case X86::PCMPISTRIrr:
  case X86::PCMPISTRM128rr:
  case X86::PDEP32rm:
  case X86::PDEP32rr:
  case X86::PDEP64rm:
  case X86::PDEP64rr:
  case X86::PEXT32rm:
  case X86::PEXT32rr:
  case X86::PEXT64rm:
  case X86::PEXT64rr:
  case X86::PEXTRBrr:
  case X86::PEXTRDrr:
  case X86::PEXTRQrr:
  case X86::PEXTRWri:
  case X86::PINSRBrm:
  case X86::PINSRDrm:
  case X86::PINSRQrm:
  case X86::PINSRWrmi:
  case X86::PSHUFDri:
  case X86::PSHUFHWri:
  case X86::PSHUFLWri:
  case X86::RORX32ri:
  case X86::RORX64ri:
  case X86::ROUNDPDr:
  case X86::ROUNDPSr:
  case X86::SARX32rr:
  case X86::SARX64rr:
  case X86::SHLX32rr:
  case X86::SHLX64rr:
  case X86::SHRX32rr:
  case X86::SHRX64rr:
  case X86::VADDPDYrr:
  case X86::VADDPDrm:
  case X86::VADDPDrr:
  case X86::VADDPSYrr:
  case X86::VADDPSrm:
  case X86::VADDPSrr:
  case X86::VADDSDrm:
  case X86::VADDSDrm_Int:
  case X86::VADDSDrr:
  case X86::VADDSDrr_Int:
  case X86::VADDSSrm:
  case X86::VADDSSrm_Int:
  case X86::VADDSSrr:
  case X86::VADDSSrr_Int:
  case X86::VADDSUBPDYrr:
  case X86::VADDSUBPDrm:
  case X86::VADDSUBPDrr:
  case X86::VADDSUBPSYrr:
  case X86::VADDSUBPSrm:
  case X86::VADDSUBPSrr:
  case X86::VAESDECLASTrm:
  case X86::VAESDECLASTrr:
  case X86::VAESDECrm:
  case X86::VAESDECrr:
  case X86::VAESENCLASTrm:
  case X86::VAESENCLASTrr:
  case X86::VAESENCrm:
  case X86::VAESENCrr:
  case X86::VAESKEYGENASSIST128rr:
  case X86::VANDNPDYrr:
  case X86::VANDNPDrm:
  case X86::VANDNPDrr:
  case X86::VANDNPSYrr:
  case X86::VANDNPSrm:
  case X86::VANDNPSrr:
  case X86::VANDPDYrr:
  case X86::VANDPDrm:
  case X86::VANDPDrr:
  case X86::VANDPSYrr:
  case X86::VANDPSrm:
  case X86::VANDPSrr:
  case X86::VBLENDPDYrri:
  case X86::VBLENDPDrri:
  case X86::VBLENDPSYrri:
  case X86::VBLENDPSrri:
  case X86::VBLENDVPDYrr:
  case X86::VBLENDVPDrr:
  case X86::VBLENDVPSYrr:
  case X86::VBLENDVPSrr:
  case X86::VCMPPDYrri_alt:
  case X86::VCMPPDrri_alt:
  case X86::VCMPPSYrri_alt:
  case X86::VCMPPSrri_alt:
  case X86::VCMPSDrr_alt:
  case X86::VCMPSSrr_alt:
  case X86::VCVTPS2PHYrr:
  case X86::VCVTPS2PHrr:
  case X86::VCVTSD2SSrm:
  case X86::VCVTSD2SSrr:
  case X86::VCVTSI2SD64rm:
  case X86::VCVTSI2SD64rr:
  case X86::VCVTSI2SDLrm:
  case X86::VCVTSI2SDLrr:
  case X86::VCVTSI2SDrm:
  case X86::VCVTSI2SDrr:
  case X86::VCVTSI2SS64rm:
  case X86::VCVTSI2SS64rr:
  case X86::VCVTSI2SSrm:
  case X86::VCVTSI2SSrr:
  case X86::VCVTSS2SDrm:
  case X86::VCVTSS2SDrr:
  case X86::VDIVPDYrr:
  case X86::VDIVPDrm:
  case X86::VDIVPDrr:
  case X86::VDIVPSYrr:
  case X86::VDIVPSrm:
  case X86::VDIVPSrr:
  case X86::VDIVSDrm:
  case X86::VDIVSDrm_Int:
  case X86::VDIVSDrr:
  case X86::VDIVSDrr_Int:
  case X86::VDIVSSrm:
  case X86::VDIVSSrm_Int:
  case X86::VDIVSSrr:
  case X86::VDIVSSrr_Int:
  case X86::VDPPDrri:
  case X86::VDPPSYrri:
  case X86::VDPPSrri:
  case X86::VEXTRACTF128rr:
  case X86::VEXTRACTI128rr:
  case X86::VEXTRACTPSrr:
  case X86::VEXTRACTPSrr64:
  case X86::VFMADDPD4rr:
  case X86::VFMADDPD4rrY:
  case X86::VFMADDPD4rrY_REV:
  case X86::VFMADDPD4rr_REV:
  case X86::VFMADDPDr132m:
  case X86::VFMADDPDr132r:
  case X86::VFMADDPDr132rY:
  case X86::VFMADDPDr213m:
  case X86::VFMADDPDr213r:
  case X86::VFMADDPDr213rY:
  case X86::VFMADDPDr231m:
  case X86::VFMADDPDr231r:
  case X86::VFMADDPDr231rY:
  case X86::VFMADDPS4rr:
  case X86::VFMADDPS4rrY:
  case X86::VFMADDPS4rrY_REV:
  case X86::VFMADDPS4rr_REV:
  case X86::VFMADDPSr132m:
  case X86::VFMADDPSr132r:
  case X86::VFMADDPSr132rY:
  case X86::VFMADDPSr213m:
  case X86::VFMADDPSr213r:
  case X86::VFMADDPSr213rY:
  case X86::VFMADDPSr231m:
  case X86::VFMADDPSr231r:
  case X86::VFMADDPSr231rY:
  case X86::VFMADDSD4rr:
  case X86::VFMADDSD4rr_REV:
  case X86::VFMADDSDr132m:
  case X86::VFMADDSDr132r:
  case X86::VFMADDSDr213m:
  case X86::VFMADDSDr213r:
  case X86::VFMADDSDr231m:
  case X86::VFMADDSDr231r:
  case X86::VFMADDSS4rr:
  case X86::VFMADDSS4rr_REV:
  case X86::VFMADDSSr132m:
  case X86::VFMADDSSr132r:
  case X86::VFMADDSSr213m:
  case X86::VFMADDSSr213r:
  case X86::VFMADDSSr231m:
  case X86::VFMADDSSr231r:
  case X86::VFMADDSUBPD4rr:
  case X86::VFMADDSUBPD4rrY:
  case X86::VFMADDSUBPD4rrY_REV:
  case X86::VFMADDSUBPD4rr_REV:
  case X86::VFMADDSUBPDr132m:
  case X86::VFMADDSUBPDr132r:
  case X86::VFMADDSUBPDr132rY:
  case X86::VFMADDSUBPDr213m:
  case X86::VFMADDSUBPDr213r:
  case X86::VFMADDSUBPDr213rY:
  case X86::VFMADDSUBPDr231m:
  case X86::VFMADDSUBPDr231r:
  case X86::VFMADDSUBPDr231rY:
  case X86::VFMADDSUBPS4rr:
  case X86::VFMADDSUBPS4rrY:
  case X86::VFMADDSUBPS4rrY_REV:
  case X86::VFMADDSUBPS4rr_REV:
  case X86::VFMADDSUBPSr132m:
  case X86::VFMADDSUBPSr132r:
  case X86::VFMADDSUBPSr132rY:
  case X86::VFMADDSUBPSr213m:
  case X86::VFMADDSUBPSr213r:
  case X86::VFMADDSUBPSr213rY:
  case X86::VFMADDSUBPSr231m:
  case X86::VFMADDSUBPSr231r:
  case X86::VFMADDSUBPSr231rY:
  case X86::VFMSUBADDPD4rr:
  case X86::VFMSUBADDPD4rrY:
  case X86::VFMSUBADDPD4rrY_REV:
  case X86::VFMSUBADDPD4rr_REV:
  case X86::VFMSUBADDPDr132m:
  case X86::VFMSUBADDPDr132r:
  case X86::VFMSUBADDPDr132rY:
  case X86::VFMSUBADDPDr213m:
  case X86::VFMSUBADDPDr213r:
  case X86::VFMSUBADDPDr213rY:
  case X86::VFMSUBADDPDr231m:
  case X86::VFMSUBADDPDr231r:
  case X86::VFMSUBADDPDr231rY:
  case X86::VFMSUBADDPS4rr:
  case X86::VFMSUBADDPS4rrY:
  case X86::VFMSUBADDPS4rrY_REV:
  case X86::VFMSUBADDPS4rr_REV:
  case X86::VFMSUBADDPSr132m:
  case X86::VFMSUBADDPSr132r:
  case X86::VFMSUBADDPSr132rY:
  case X86::VFMSUBADDPSr213m:
  case X86::VFMSUBADDPSr213r:
  case X86::VFMSUBADDPSr213rY:
  case X86::VFMSUBADDPSr231m:
  case X86::VFMSUBADDPSr231r:
  case X86::VFMSUBADDPSr231rY:
  case X86::VFMSUBPD4rr:
  case X86::VFMSUBPD4rrY:
  case X86::VFMSUBPD4rrY_REV:
  case X86::VFMSUBPD4rr_REV:
  case X86::VFMSUBPDr132m:
  case X86::VFMSUBPDr132r:
  case X86::VFMSUBPDr132rY:
  case X86::VFMSUBPDr213m:
  case X86::VFMSUBPDr213r:
  case X86::VFMSUBPDr213rY:
  case X86::VFMSUBPDr231m:
  case X86::VFMSUBPDr231r:
  case X86::VFMSUBPDr231rY:
  case X86::VFMSUBPS4rr:
  case X86::VFMSUBPS4rrY:
  case X86::VFMSUBPS4rrY_REV:
  case X86::VFMSUBPS4rr_REV:
  case X86::VFMSUBPSr132m:
  case X86::VFMSUBPSr132r:
  case X86::VFMSUBPSr132rY:
  case X86::VFMSUBPSr213m:
  case X86::VFMSUBPSr213r:
  case X86::VFMSUBPSr213rY:
  case X86::VFMSUBPSr231m:
  case X86::VFMSUBPSr231r:
  case X86::VFMSUBPSr231rY:
  case X86::VFMSUBSD4rr:
  case X86::VFMSUBSD4rr_REV:
  case X86::VFMSUBSDr132m:
  case X86::VFMSUBSDr132r:
  case X86::VFMSUBSDr213m:
  case X86::VFMSUBSDr213r:
  case X86::VFMSUBSDr231m:
  case X86::VFMSUBSDr231r:
  case X86::VFMSUBSS4rr:
  case X86::VFMSUBSS4rr_REV:
  case X86::VFMSUBSSr132m:
  case X86::VFMSUBSSr132r:
  case X86::VFMSUBSSr213m:
  case X86::VFMSUBSSr213r:
  case X86::VFMSUBSSr231m:
  case X86::VFMSUBSSr231r:
  case X86::VFNMADDPD4rr:
  case X86::VFNMADDPD4rrY:
  case X86::VFNMADDPD4rrY_REV:
  case X86::VFNMADDPD4rr_REV:
  case X86::VFNMADDPDr132m:
  case X86::VFNMADDPDr132r:
  case X86::VFNMADDPDr132rY:
  case X86::VFNMADDPDr213m:
  case X86::VFNMADDPDr213r:
  case X86::VFNMADDPDr213rY:
  case X86::VFNMADDPDr231m:
  case X86::VFNMADDPDr231r:
  case X86::VFNMADDPDr231rY:
  case X86::VFNMADDPS4rr:
  case X86::VFNMADDPS4rrY:
  case X86::VFNMADDPS4rrY_REV:
  case X86::VFNMADDPS4rr_REV:
  case X86::VFNMADDPSr132m:
  case X86::VFNMADDPSr132r:
  case X86::VFNMADDPSr132rY:
  case X86::VFNMADDPSr213m:
  case X86::VFNMADDPSr213r:
  case X86::VFNMADDPSr213rY:
  case X86::VFNMADDPSr231m:
  case X86::VFNMADDPSr231r:
  case X86::VFNMADDPSr231rY:
  case X86::VFNMADDSD4rr:
  case X86::VFNMADDSD4rr_REV:
  case X86::VFNMADDSDr132m:
  case X86::VFNMADDSDr132r:
  case X86::VFNMADDSDr213m:
  case X86::VFNMADDSDr213r:
  case X86::VFNMADDSDr231m:
  case X86::VFNMADDSDr231r:
  case X86::VFNMADDSS4rr:
  case X86::VFNMADDSS4rr_REV:
  case X86::VFNMADDSSr132m:
  case X86::VFNMADDSSr132r:
  case X86::VFNMADDSSr213m:
  case X86::VFNMADDSSr213r:
  case X86::VFNMADDSSr231m:
  case X86::VFNMADDSSr231r:
  case X86::VFNMSUBPD4rr:
  case X86::VFNMSUBPD4rrY:
  case X86::VFNMSUBPD4rrY_REV:
  case X86::VFNMSUBPD4rr_REV:
  case X86::VFNMSUBPDr132m:
  case X86::VFNMSUBPDr132r:
  case X86::VFNMSUBPDr132rY:
  case X86::VFNMSUBPDr213m:
  case X86::VFNMSUBPDr213r:
  case X86::VFNMSUBPDr213rY:
  case X86::VFNMSUBPDr231m:
  case X86::VFNMSUBPDr231r:
  case X86::VFNMSUBPDr231rY:
  case X86::VFNMSUBPS4rr:
  case X86::VFNMSUBPS4rrY:
  case X86::VFNMSUBPS4rrY_REV:
  case X86::VFNMSUBPS4rr_REV:
  case X86::VFNMSUBPSr132m:
  case X86::VFNMSUBPSr132r:
  case X86::VFNMSUBPSr132rY:
  case X86::VFNMSUBPSr213m:
  case X86::VFNMSUBPSr213r:
  case X86::VFNMSUBPSr213rY:
  case X86::VFNMSUBPSr231m:
  case X86::VFNMSUBPSr231r:
  case X86::VFNMSUBPSr231rY:
  case X86::VFNMSUBSD4rr:
  case X86::VFNMSUBSD4rr_REV:
  case X86::VFNMSUBSDr132m:
  case X86::VFNMSUBSDr132r:
  case X86::VFNMSUBSDr213m:
  case X86::VFNMSUBSDr213r:
  case X86::VFNMSUBSDr231m:
  case X86::VFNMSUBSDr231r:
  case X86::VFNMSUBSS4rr:
  case X86::VFNMSUBSS4rr_REV:
  case X86::VFNMSUBSSr132m:
  case X86::VFNMSUBSSr132r:
  case X86::VFNMSUBSSr213m:
  case X86::VFNMSUBSSr213r:
  case X86::VFNMSUBSSr231m:
  case X86::VFNMSUBSSr231r:
  case X86::VFsANDNPDrm:
  case X86::VFsANDNPDrr:
  case X86::VFsANDNPSrm:
  case X86::VFsANDNPSrr:
  case X86::VFsANDPDrm:
  case X86::VFsANDPDrr:
  case X86::VFsANDPSrm:
  case X86::VFsANDPSrr:
  case X86::VFsORPDrm:
  case X86::VFsORPDrr:
  case X86::VFsORPSrm:
  case X86::VFsORPSrr:
  case X86::VFsXORPDrm:
  case X86::VFsXORPDrr:
  case X86::VFsXORPSrm:
  case X86::VFsXORPSrr:
  case X86::VHADDPDYrr:
  case X86::VHADDPDrm:
  case X86::VHADDPDrr:
  case X86::VHADDPSYrr:
  case X86::VHADDPSrm:
  case X86::VHADDPSrr:
  case X86::VHSUBPDYrr:
  case X86::VHSUBPDrm:
  case X86::VHSUBPDrr:
  case X86::VHSUBPSYrr:
  case X86::VHSUBPSrm:
  case X86::VHSUBPSrr:
  case X86::VINSERTF128rr:
  case X86::VINSERTI128rr:
  case X86::VINSERTPSrr:
  case X86::VMASKMOVPDrm:
  case X86::VMASKMOVPSrm:
  case X86::VMAXPDYrr:
  case X86::VMAXPDYrr_Int:
  case X86::VMAXPDrm:
  case X86::VMAXPDrm_Int:
  case X86::VMAXPDrr:
  case X86::VMAXPDrr_Int:
  case X86::VMAXPSYrr:
  case X86::VMAXPSYrr_Int:
  case X86::VMAXPSrm:
  case X86::VMAXPSrm_Int:
  case X86::VMAXPSrr:
  case X86::VMAXPSrr_Int:
  case X86::VMAXSDrm:
  case X86::VMAXSDrm_Int:
  case X86::VMAXSDrr:
  case X86::VMAXSDrr_Int:
  case X86::VMAXSSrm:
  case X86::VMAXSSrm_Int:
  case X86::VMAXSSrr:
  case X86::VMAXSSrr_Int:
  case X86::VMINPDYrr:
  case X86::VMINPDYrr_Int:
  case X86::VMINPDrm:
  case X86::VMINPDrm_Int:
  case X86::VMINPDrr:
  case X86::VMINPDrr_Int:
  case X86::VMINPSYrr:
  case X86::VMINPSYrr_Int:
  case X86::VMINPSrm:
  case X86::VMINPSrm_Int:
  case X86::VMINPSrr:
  case X86::VMINPSrr_Int:
  case X86::VMINSDrm:
  case X86::VMINSDrm_Int:
  case X86::VMINSDrr:
  case X86::VMINSDrr_Int:
  case X86::VMINSSrm:
  case X86::VMINSSrm_Int:
  case X86::VMINSSrr:
  case X86::VMINSSrr_Int:
  case X86::VMOVHLPSrr:
  case X86::VMOVHPDrm:
  case X86::VMOVHPSrm:
  case X86::VMOVLHPSrr:
  case X86::VMOVLPDrm:
  case X86::VMOVLPSrm:
  case X86::VMOVSDrr:
  case X86::VMOVSDrr_REV:
  case X86::VMOVSSrr:
  case X86::VMOVSSrr_REV:
  case X86::VMPSADBWYrri:
  case X86::VMPSADBWrri:
  case X86::VMULPDYrr:
  case X86::VMULPDrm:
  case X86::VMULPDrr:
  case X86::VMULPSYrr:
  case X86::VMULPSrm:
  case X86::VMULPSrr:
  case X86::VMULSDrm:
  case X86::VMULSDrm_Int:
  case X86::VMULSDrr:
  case X86::VMULSDrr_Int:
  case X86::VMULSSrm:
  case X86::VMULSSrm_Int:
  case X86::VMULSSrr:
  case X86::VMULSSrr_Int:
  case X86::VORPDYrr:
  case X86::VORPDrm:
  case X86::VORPDrr:
  case X86::VORPSYrr:
  case X86::VORPSrm:
  case X86::VORPSrr:
  case X86::VPACKSSDWYrr:
  case X86::VPACKSSDWrm:
  case X86::VPACKSSDWrr:
  case X86::VPACKSSWBYrr:
  case X86::VPACKSSWBrm:
  case X86::VPACKSSWBrr:
  case X86::VPACKUSDWYrr:
  case X86::VPACKUSDWrm:
  case X86::VPACKUSDWrr:
  case X86::VPACKUSWBYrr:
  case X86::VPACKUSWBrm:
  case X86::VPACKUSWBrr:
  case X86::VPADDBYrr:
  case X86::VPADDBrm:
  case X86::VPADDBrr:
  case X86::VPADDDYrr:
  case X86::VPADDDrm:
  case X86::VPADDDrr:
  case X86::VPADDQYrr:
  case X86::VPADDQrm:
  case X86::VPADDQrr:
  case X86::VPADDSBYrr:
  case X86::VPADDSBrm:
  case X86::VPADDSBrr:
  case X86::VPADDSWYrr:
  case X86::VPADDSWrm:
  case X86::VPADDSWrr:
  case X86::VPADDUSBYrr:
  case X86::VPADDUSBrm:
  case X86::VPADDUSBrr:
  case X86::VPADDUSWYrr:
  case X86::VPADDUSWrm:
  case X86::VPADDUSWrr:
  case X86::VPADDWYrr:
  case X86::VPADDWrm:
  case X86::VPADDWrr:
  case X86::VPALIGNR128rr:
  case X86::VPALIGNR256rr:
  case X86::VPANDNYrr:
  case X86::VPANDNrm:
  case X86::VPANDNrr:
  case X86::VPANDYrr:
  case X86::VPANDrm:
  case X86::VPANDrr:
  case X86::VPAVGBYrr:
  case X86::VPAVGBrm:
  case X86::VPAVGBrr:
  case X86::VPAVGWYrr:
  case X86::VPAVGWrm:
  case X86::VPAVGWrr:
  case X86::VPBLENDDYrri:
  case X86::VPBLENDDrri:
  case X86::VPBLENDVBYrr:
  case X86::VPBLENDVBrr:
  case X86::VPBLENDWYrri:
  case X86::VPBLENDWrri:
  case X86::VPCLMULQDQrr:
  case X86::VPCMOVrr:
  case X86::VPCMOVrrY:
  case X86::VPCMPEQBYrr:
  case X86::VPCMPEQBrm:
  case X86::VPCMPEQBrr:
  case X86::VPCMPEQDYrr:
  case X86::VPCMPEQDrm:
  case X86::VPCMPEQDrr:
  case X86::VPCMPEQQYrr:
  case X86::VPCMPEQQrm:
  case X86::VPCMPEQQrr:
  case X86::VPCMPEQWYrr:
  case X86::VPCMPEQWrm:
  case X86::VPCMPEQWrr:
  case X86::VPCMPESTRIArr:
  case X86::VPCMPESTRICrr:
  case X86::VPCMPESTRIOrr:
  case X86::VPCMPESTRISrr:
  case X86::VPCMPESTRIZrr:
  case X86::VPCMPESTRIrr:
  case X86::VPCMPESTRM128rr:
  case X86::VPCMPGTBYrr:
  case X86::VPCMPGTBrm:
  case X86::VPCMPGTBrr:
  case X86::VPCMPGTDYrr:
  case X86::VPCMPGTDrm:
  case X86::VPCMPGTDrr:
  case X86::VPCMPGTQYrr:
  case X86::VPCMPGTQrm:
  case X86::VPCMPGTQrr:
  case X86::VPCMPGTWYrr:
  case X86::VPCMPGTWrm:
  case X86::VPCMPGTWrr:
  case X86::VPCMPISTRIArr:
  case X86::VPCMPISTRICrr:
  case X86::VPCMPISTRIOrr:
  case X86::VPCMPISTRISrr:
  case X86::VPCMPISTRIZrr:
  case X86::VPCMPISTRIrr:
  case X86::VPCMPISTRM128rr:
  case X86::VPCOMBri:
  case X86::VPCOMDri:
  case X86::VPCOMQri:
  case X86::VPCOMUBri:
  case X86::VPCOMUDri:
  case X86::VPCOMUQri:
  case X86::VPCOMUWri:
  case X86::VPCOMWri:
  case X86::VPERM2F128rr:
  case X86::VPERM2I128rr:
  case X86::VPERMDYrr:
  case X86::VPERMILPDYri:
  case X86::VPERMILPDYrr:
  case X86::VPERMILPDri:
  case X86::VPERMILPDrm:
  case X86::VPERMILPDrr:
  case X86::VPERMILPSYri:
  case X86::VPERMILPSYrr:
  case X86::VPERMILPSri:
  case X86::VPERMILPSrm:
  case X86::VPERMILPSrr:
  case X86::VPERMPDYrr:
  case X86::VPERMPSYrr:
  case X86::VPERMQYrr:
  case X86::VPEXTRBrr:
  case X86::VPEXTRBrr64:
  case X86::VPEXTRDrr:
  case X86::VPEXTRQrr:
  case X86::VPEXTRWri:
  case X86::VPHADDDrm128:
  case X86::VPHADDDrr128:
  case X86::VPHADDDrr256:
  case X86::VPHADDSWrm128:
  case X86::VPHADDSWrr128:
  case X86::VPHADDSWrr256:
  case X86::VPHADDWrm128:
  case X86::VPHADDWrr128:
  case X86::VPHADDWrr256:
  case X86::VPHSUBDrm128:
  case X86::VPHSUBDrr128:
  case X86::VPHSUBDrr256:
  case X86::VPHSUBSWrm128:
  case X86::VPHSUBSWrr128:
  case X86::VPHSUBSWrr256:
  case X86::VPHSUBWrm128:
  case X86::VPHSUBWrr128:
  case X86::VPHSUBWrr256:
  case X86::VPINSRBrr:
  case X86::VPINSRDrr:
  case X86::VPINSRQrr:
  case X86::VPINSRWrr64i:
  case X86::VPINSRWrri:
  case X86::VPMACSDDrr:
  case X86::VPMACSDQHrr:
  case X86::VPMACSDQLrr:
  case X86::VPMACSSDDrr:
  case X86::VPMACSSDQHrr:
  case X86::VPMACSSDQLrr:
  case X86::VPMACSSWDrr:
  case X86::VPMACSSWWrr:
  case X86::VPMACSWDrr:
  case X86::VPMACSWWrr:
  case X86::VPMADCSSWDrr:
  case X86::VPMADCSWDrr:
  case X86::VPMADDUBSWrm128:
  case X86::VPMADDUBSWrr128:
  case X86::VPMADDUBSWrr256:
  case X86::VPMADDWDYrr:
  case X86::VPMADDWDrm:
  case X86::VPMADDWDrr:
  case X86::VPMASKMOVDrm:
  case X86::VPMASKMOVQrm:
  case X86::VPMAXSBYrr:
  case X86::VPMAXSBrm:
  case X86::VPMAXSBrr:
  case X86::VPMAXSDYrr:
  case X86::VPMAXSDrm:
  case X86::VPMAXSDrr:
  case X86::VPMAXSWYrr:
  case X86::VPMAXSWrm:
  case X86::VPMAXSWrr:
  case X86::VPMAXUBYrr:
  case X86::VPMAXUBrm:
  case X86::VPMAXUBrr:
  case X86::VPMAXUDYrr:
  case X86::VPMAXUDrm:
  case X86::VPMAXUDrr:
  case X86::VPMAXUWYrr:
  case X86::VPMAXUWrm:
  case X86::VPMAXUWrr:
  case X86::VPMINSBYrr:
  case X86::VPMINSBrm:
  case X86::VPMINSBrr:
  case X86::VPMINSDYrr:
  case X86::VPMINSDrm:
  case X86::VPMINSDrr:
  case X86::VPMINSWYrr:
  case X86::VPMINSWrm:
  case X86::VPMINSWrr:
  case X86::VPMINUBYrr:
  case X86::VPMINUBrm:
  case X86::VPMINUBrr:
  case X86::VPMINUDYrr:
  case X86::VPMINUDrm:
  case X86::VPMINUDrr:
  case X86::VPMINUWYrr:
  case X86::VPMINUWrm:
  case X86::VPMINUWrr:
  case X86::VPMULDQYrr:
  case X86::VPMULDQrm:
  case X86::VPMULDQrr:
  case X86::VPMULHRSWrm128:
  case X86::VPMULHRSWrr128:
  case X86::VPMULHRSWrr256:
  case X86::VPMULHUWYrr:
  case X86::VPMULHUWrm:
  case X86::VPMULHUWrr:
  case X86::VPMULHWYrr:
  case X86::VPMULHWrm:
  case X86::VPMULHWrr:
  case X86::VPMULLDYrr:
  case X86::VPMULLDrm:
  case X86::VPMULLDrr:
  case X86::VPMULLWYrr:
  case X86::VPMULLWrm:
  case X86::VPMULLWrr:
  case X86::VPMULUDQYrr:
  case X86::VPMULUDQrm:
  case X86::VPMULUDQrr:
  case X86::VPORYrr:
  case X86::VPORrm:
  case X86::VPORrr:
  case X86::VPPERMrr:
  case X86::VPROTBri:
  case X86::VPROTBrm:
  case X86::VPROTBrr:
  case X86::VPROTDri:
  case X86::VPROTDrm:
  case X86::VPROTDrr:
  case X86::VPROTQri:
  case X86::VPROTQrm:
  case X86::VPROTQrr:
  case X86::VPROTWri:
  case X86::VPROTWrm:
  case X86::VPROTWrr:
  case X86::VPSADBWYrr:
  case X86::VPSADBWrm:
  case X86::VPSADBWrr:
  case X86::VPSHABrm:
  case X86::VPSHABrr:
  case X86::VPSHADrm:
  case X86::VPSHADrr:
  case X86::VPSHAQrm:
  case X86::VPSHAQrr:
  case X86::VPSHAWrm:
  case X86::VPSHAWrr:
  case X86::VPSHLBrm:
  case X86::VPSHLBrr:
  case X86::VPSHLDrm:
  case X86::VPSHLDrr:
  case X86::VPSHLQrm:
  case X86::VPSHLQrr:
  case X86::VPSHLWrm:
  case X86::VPSHLWrr:
  case X86::VPSHUFBrm128:
  case X86::VPSHUFBrr128:
  case X86::VPSHUFBrr256:
  case X86::VPSHUFDYri:
  case X86::VPSHUFDri:
  case X86::VPSHUFHWYri:
  case X86::VPSHUFHWri:
  case X86::VPSHUFLWYri:
  case X86::VPSHUFLWri:
  case X86::VPSIGNBrm128:
  case X86::VPSIGNBrr128:
  case X86::VPSIGNBrr256:
  case X86::VPSIGNDrm128:
  case X86::VPSIGNDrr128:
  case X86::VPSIGNDrr256:
  case X86::VPSIGNWrm128:
  case X86::VPSIGNWrr128:
  case X86::VPSIGNWrr256:
  case X86::VPSLLDQYri:
  case X86::VPSLLDQri:
  case X86::VPSLLDYri:
  case X86::VPSLLDYrm:
  case X86::VPSLLDYrr:
  case X86::VPSLLDri:
  case X86::VPSLLDrm:
  case X86::VPSLLDrr:
  case X86::VPSLLQYri:
  case X86::VPSLLQYrm:
  case X86::VPSLLQYrr:
  case X86::VPSLLQri:
  case X86::VPSLLQrm:
  case X86::VPSLLQrr:
  case X86::VPSLLVDYrr:
  case X86::VPSLLVDrm:
  case X86::VPSLLVDrr:
  case X86::VPSLLVQYrr:
  case X86::VPSLLVQrm:
  case X86::VPSLLVQrr:
  case X86::VPSLLWYri:
  case X86::VPSLLWYrm:
  case X86::VPSLLWYrr:
  case X86::VPSLLWri:
  case X86::VPSLLWrm:
  case X86::VPSLLWrr:
  case X86::VPSRADYri:
  case X86::VPSRADYrm:
  case X86::VPSRADYrr:
  case X86::VPSRADri:
  case X86::VPSRADrm:
  case X86::VPSRADrr:
  case X86::VPSRAVDYrr:
  case X86::VPSRAVDrm:
  case X86::VPSRAVDrr:
  case X86::VPSRAWYri:
  case X86::VPSRAWYrm:
  case X86::VPSRAWYrr:
  case X86::VPSRAWri:
  case X86::VPSRAWrm:
  case X86::VPSRAWrr:
  case X86::VPSRLDQYri:
  case X86::VPSRLDQri:
  case X86::VPSRLDYri:
  case X86::VPSRLDYrm:
  case X86::VPSRLDYrr:
  case X86::VPSRLDri:
  case X86::VPSRLDrm:
  case X86::VPSRLDrr:
  case X86::VPSRLQYri:
  case X86::VPSRLQYrm:
  case X86::VPSRLQYrr:
  case X86::VPSRLQri:
  case X86::VPSRLQrm:
  case X86::VPSRLQrr:
  case X86::VPSRLVDYrr:
  case X86::VPSRLVDrm:
  case X86::VPSRLVDrr:
  case X86::VPSRLVQYrr:
  case X86::VPSRLVQrm:
  case X86::VPSRLVQrr:
  case X86::VPSRLWYri:
  case X86::VPSRLWYrm:
  case X86::VPSRLWYrr:
  case X86::VPSRLWri:
  case X86::VPSRLWrm:
  case X86::VPSRLWrr:
  case X86::VPSUBBYrr:
  case X86::VPSUBBrm:
  case X86::VPSUBBrr:
  case X86::VPSUBDYrr:
  case X86::VPSUBDrm:
  case X86::VPSUBDrr:
  case X86::VPSUBQYrr:
  case X86::VPSUBQrm:
  case X86::VPSUBQrr:
  case X86::VPSUBSBYrr:
  case X86::VPSUBSBrm:
  case X86::VPSUBSBrr:
  case X86::VPSUBSWYrr:
  case X86::VPSUBSWrm:
  case X86::VPSUBSWrr:
  case X86::VPSUBUSBYrr:
  case X86::VPSUBUSBrm:
  case X86::VPSUBUSBrr:
  case X86::VPSUBUSWYrr:
  case X86::VPSUBUSWrm:
  case X86::VPSUBUSWrr:
  case X86::VPSUBWYrr:
  case X86::VPSUBWrm:
  case X86::VPSUBWrr:
  case X86::VPUNPCKHBWYrr:
  case X86::VPUNPCKHBWrm:
  case X86::VPUNPCKHBWrr:
  case X86::VPUNPCKHDQYrr:
  case X86::VPUNPCKHDQrm:
  case X86::VPUNPCKHDQrr:
  case X86::VPUNPCKHQDQYrr:
  case X86::VPUNPCKHQDQrm:
  case X86::VPUNPCKHQDQrr:
  case X86::VPUNPCKHWDYrr:
  case X86::VPUNPCKHWDrm:
  case X86::VPUNPCKHWDrr:
  case X86::VPUNPCKLBWYrr:
  case X86::VPUNPCKLBWrm:
  case X86::VPUNPCKLBWrr:
  case X86::VPUNPCKLDQYrr:
  case X86::VPUNPCKLDQrm:
  case X86::VPUNPCKLDQrr:
  case X86::VPUNPCKLQDQYrr:
  case X86::VPUNPCKLQDQrm:
  case X86::VPUNPCKLQDQrr:
  case X86::VPUNPCKLWDYrr:
  case X86::VPUNPCKLWDrm:
  case X86::VPUNPCKLWDrr:
  case X86::VPXORYrr:
  case X86::VPXORrm:
  case X86::VPXORrr:
  case X86::VRCPSSm:
  case X86::VRCPSSm_Int:
  case X86::VRCPSSr:
  case X86::VROUNDPDr:
  case X86::VROUNDPSr:
  case X86::VROUNDSDr:
  case X86::VROUNDSDr_Int:
  case X86::VROUNDSSr:
  case X86::VROUNDSSr_Int:
  case X86::VROUNDYPDr:
  case X86::VROUNDYPSr:
  case X86::VRSQRTSSm:
  case X86::VRSQRTSSm_Int:
  case X86::VRSQRTSSr:
  case X86::VSHUFPDYrri:
  case X86::VSHUFPDrri:
  case X86::VSHUFPSYrri:
  case X86::VSHUFPSrri:
  case X86::VSQRTSDm:
  case X86::VSQRTSDm_Int:
  case X86::VSQRTSDr:
  case X86::VSQRTSSm:
  case X86::VSQRTSSm_Int:
  case X86::VSQRTSSr:
  case X86::VSUBPDYrr:
  case X86::VSUBPDrm:
  case X86::VSUBPDrr:
  case X86::VSUBPSYrr:
  case X86::VSUBPSrm:
  case X86::VSUBPSrr:
  case X86::VSUBSDrm:
  case X86::VSUBSDrm_Int:
  case X86::VSUBSDrr:
  case X86::VSUBSDrr_Int:
  case X86::VSUBSSrm:
  case X86::VSUBSSrm_Int:
  case X86::VSUBSSrr:
  case X86::VSUBSSrr_Int:
  case X86::VUNPCKHPDYrr:
  case X86::VUNPCKHPDrm:
  case X86::VUNPCKHPDrr:
  case X86::VUNPCKHPSYrr:
  case X86::VUNPCKHPSrm:
  case X86::VUNPCKHPSrr:
  case X86::VUNPCKLPDYrr:
  case X86::VUNPCKLPDrm:
  case X86::VUNPCKLPDrr:
  case X86::VUNPCKLPSYrr:
  case X86::VUNPCKLPSrm:
  case X86::VUNPCKLPSrr:
  case X86::VXORPDYrr:
  case X86::VXORPDrm:
  case X86::VXORPDrr:
  case X86::VXORPSYrr:
  case X86::VXORPSrm:
  case X86::VXORPSrr:
    printOperand(MI, 0, O); 
    return;
    break;
  case X86::ARPL16rr:
  case X86::ENTER:
    return;
    break;
  case X86::Int_VCMPSDrm:
  case X86::Int_VCMPSDrr:
  case X86::Int_VCMPSSrm:
  case X86::Int_VCMPSSrr:
  case X86::VCMPPDYrri:
  case X86::VCMPPDrmi:
  case X86::VCMPPDrri:
  case X86::VCMPPSYrri:
  case X86::VCMPPSrmi:
  case X86::VCMPPSrri:
  case X86::VCMPSDrm:
  case X86::VCMPSDrr:
  case X86::VCMPSSrm:
  case X86::VCMPSSrr:
  case X86::VPERMIL2PDmr:
  case X86::VPERMIL2PSmr:
  case X86::VPINSRBrm:
  case X86::VPINSRDrm:
  case X86::VPINSRQrm:
  case X86::VPINSRWrmi:
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case X86::VASTART_SAVE_XMM_REGS:
  case X86::VBLENDPDrmi:
  case X86::VBLENDPSrmi:
  case X86::VBLENDVPDrm:
  case X86::VBLENDVPSrm:
  case X86::VCMPPDrmi_alt:
  case X86::VCMPPSrmi_alt:
  case X86::VCMPSDrm_alt:
  case X86::VCMPSSrm_alt:
  case X86::VDPPDrmi:
  case X86::VDPPSrmi:
  case X86::VFMADDPD4mr:
  case X86::VFMADDPS4mr:
  case X86::VFMADDSD4mr:
  case X86::VFMADDSS4mr:
  case X86::VFMADDSUBPD4mr:
  case X86::VFMADDSUBPS4mr:
  case X86::VFMSUBADDPD4mr:
  case X86::VFMSUBADDPS4mr:
  case X86::VFMSUBPD4mr:
  case X86::VFMSUBPS4mr:
  case X86::VFMSUBSD4mr:
  case X86::VFMSUBSS4mr:
  case X86::VFNMADDPD4mr:
  case X86::VFNMADDPS4mr:
  case X86::VFNMADDSD4mr:
  case X86::VFNMADDSS4mr:
  case X86::VFNMSUBPD4mr:
  case X86::VFNMSUBPS4mr:
  case X86::VFNMSUBSD4mr:
  case X86::VFNMSUBSS4mr:
  case X86::VINSERTF128rm:
  case X86::VINSERTI128rm:
  case X86::VINSERTPSrm:
  case X86::VMPSADBWrmi:
  case X86::VPALIGNR128rm:
  case X86::VPBLENDDrmi:
  case X86::VPBLENDVBrm:
  case X86::VPBLENDWrmi:
  case X86::VPCLMULQDQrm:
  case X86::VPCMOVmr:
  case X86::VPCOMBmi:
  case X86::VPCOMDmi:
  case X86::VPCOMQmi:
  case X86::VPCOMUBmi:
  case X86::VPCOMUDmi:
  case X86::VPCOMUQmi:
  case X86::VPCOMUWmi:
  case X86::VPCOMWmi:
  case X86::VPMACSDDrm:
  case X86::VPMACSDQHrm:
  case X86::VPMACSDQLrm:
  case X86::VPMACSSDDrm:
  case X86::VPMACSSDQHrm:
  case X86::VPMACSSDQLrm:
  case X86::VPMACSSWDrm:
  case X86::VPMACSSWWrm:
  case X86::VPMACSWDrm:
  case X86::VPMACSWWrm:
  case X86::VPMADCSSWDrm:
  case X86::VPMADCSWDrm:
  case X86::VPPERMmr:
  case X86::VROUNDSDm:
  case X86::VROUNDSSm:
  case X86::VSHUFPDrmi:
  case X86::VSHUFPSrmi:
    O << ", "; 
    switch (MI->getOpcode()) {
    case X86::VASTART_SAVE_XMM_REGS: printOperand(MI, 2, O); break;
    case X86::VBLENDPDrmi: 
    case X86::VBLENDPSrmi: 
    case X86::VBLENDVPDrm: 
    case X86::VBLENDVPSrm: 
    case X86::VCMPPDrmi_alt: 
    case X86::VCMPPSrmi_alt: 
    case X86::VCMPSDrm_alt: 
    case X86::VCMPSSrm_alt: 
    case X86::VDPPDrmi: 
    case X86::VDPPSrmi: 
    case X86::VFMADDPD4mr: 
    case X86::VFMADDPS4mr: 
    case X86::VFMADDSD4mr: 
    case X86::VFMADDSS4mr: 
    case X86::VFMADDSUBPD4mr: 
    case X86::VFMADDSUBPS4mr: 
    case X86::VFMSUBADDPD4mr: 
    case X86::VFMSUBADDPS4mr: 
    case X86::VFMSUBPD4mr: 
    case X86::VFMSUBPS4mr: 
    case X86::VFMSUBSD4mr: 
    case X86::VFMSUBSS4mr: 
    case X86::VFNMADDPD4mr: 
    case X86::VFNMADDPS4mr: 
    case X86::VFNMADDSD4mr: 
    case X86::VFNMADDSS4mr: 
    case X86::VFNMSUBPD4mr: 
    case X86::VFNMSUBPS4mr: 
    case X86::VFNMSUBSD4mr: 
    case X86::VFNMSUBSS4mr: 
    case X86::VINSERTF128rm: 
    case X86::VINSERTI128rm: 
    case X86::VINSERTPSrm: 
    case X86::VMPSADBWrmi: 
    case X86::VPALIGNR128rm: 
    case X86::VPBLENDDrmi: 
    case X86::VPBLENDVBrm: 
    case X86::VPBLENDWrmi: 
    case X86::VPCLMULQDQrm: 
    case X86::VPCMOVmr: 
    case X86::VPCOMBmi: 
    case X86::VPCOMDmi: 
    case X86::VPCOMQmi: 
    case X86::VPCOMUBmi: 
    case X86::VPCOMUDmi: 
    case X86::VPCOMUQmi: 
    case X86::VPCOMUWmi: 
    case X86::VPCOMWmi: 
    case X86::VPMACSDDrm: 
    case X86::VPMACSDQHrm: 
    case X86::VPMACSDQLrm: 
    case X86::VPMACSSDDrm: 
    case X86::VPMACSSDQHrm: 
    case X86::VPMACSSDQLrm: 
    case X86::VPMACSSWDrm: 
    case X86::VPMACSSWWrm: 
    case X86::VPMACSWDrm: 
    case X86::VPMACSWWrm: 
    case X86::VPMADCSSWDrm: 
    case X86::VPMADCSWDrm: 
    case X86::VPPERMmr: 
    case X86::VROUNDSDm: 
    case X86::VROUNDSSm: 
    case X86::VSHUFPDrmi: 
    case X86::VSHUFPSrmi: printOperand(MI, 0, O); break;
    }
    return;
    break;
  }
  return;
}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *X86ATTInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 160 && "Invalid register number!");

  static const unsigned RegAsmOffset[] = {
    0, 3, 6, 9, 12, 15, 18, 22, 25, 28, 31, 35, 39, 43,
    47, 51, 55, 59, 63, 67, 71, 76, 81, 86, 91, 96, 101, 104,
    107, 110, 113, 117, 120, 124, 128, 132, 136, 140, 144, 148, 152, 155,
    158, 162, 166, 170, 174, 178, 182, 188, 192, 196, 199, 203, 207, 211,
    215, 219, 223, 227, 231, 235, 238, 241, 244, 248, 252, 256, 260, 264,
    268, 272, 276, 279, 283, 287, 291, 294, 298, 302, 306, 310, 315, 320,
    325, 329, 334, 339, 344, 348, 353, 358, 363, 367, 372, 377, 382, 386,
    391, 396, 401, 405, 410, 415, 420, 424, 428, 432, 436, 440, 444, 448,
    452, 456, 460, 463, 467, 470, 474, 477, 483, 489, 495, 501, 507, 513,
    519, 525, 530, 535, 540, 545, 550, 555, 560, 565, 570, 575, 581, 587,
    593, 599, 605, 611, 616, 621, 626, 631, 636, 641, 646, 651, 656, 661,
    667, 673, 679, 685, 691, 0
  };

  const char *AsmStrs =
    "ah\000al\000ax\000bh\000bl\000bp\000bpl\000bx\000ch\000cl\000cr0\000cr1"
    "\000cr2\000cr3\000cr4\000cr5\000cr6\000cr7\000cr8\000cr9\000cr10\000cr1"
    "1\000cr12\000cr13\000cr14\000cr15\000cs\000cx\000dh\000di\000dil\000dl\000"
    "dr0\000dr1\000dr2\000dr3\000dr4\000dr5\000dr6\000dr7\000ds\000dx\000eax"
    "\000ebp\000ebx\000ecx\000edi\000edx\000flags\000eip\000eiz\000es\000esi"
    "\000esp\000fp0\000fp1\000fp2\000fp3\000fp4\000fp5\000fp6\000fs\000gs\000"
    "ip\000mm0\000mm1\000mm2\000mm3\000mm4\000mm5\000mm6\000mm7\000r8\000r8b"
    "\000r8d\000r8w\000r9\000r9b\000r9d\000r9w\000r10\000r10b\000r10d\000r10"
    "w\000r11\000r11b\000r11d\000r11w\000r12\000r12b\000r12d\000r12w\000r13\000"
    "r13b\000r13d\000r13w\000r14\000r14b\000r14d\000r14w\000r15\000r15b\000r"
    "15d\000r15w\000rax\000rbp\000rbx\000rcx\000rdi\000rdx\000rip\000riz\000"
    "rsi\000rsp\000si\000sil\000sp\000spl\000ss\000st(0)\000st(1)\000st(2)\000"
    "st(3)\000st(4)\000st(5)\000st(6)\000st(7)\000xmm0\000xmm1\000xmm2\000xm"
    "m3\000xmm4\000xmm5\000xmm6\000xmm7\000xmm8\000xmm9\000xmm10\000xmm11\000"
    "xmm12\000xmm13\000xmm14\000xmm15\000ymm0\000ymm1\000ymm2\000ymm3\000ymm"
    "4\000ymm5\000ymm6\000ymm7\000ymm8\000ymm9\000ymm10\000ymm11\000ymm12\000"
    "ymm13\000ymm14\000ymm15\000";
  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}


#ifdef GET_INSTRUCTION_NAME
#undef GET_INSTRUCTION_NAME

/// getInstructionName: This method is automatically generated by tblgen
/// from the instruction set description.  This returns the enum name of the
/// specified instruction.
const char *X86ATTInstPrinter::getInstructionName(unsigned Opcode) {
  assert(Opcode < 4458 && "Invalid instruction number!");

  static const unsigned InstAsmOffset[] = {
    0, 4, 14, 27, 36, 45, 50, 65, 79, 92, 106, 123, 133, 146, 
    151, 158, 162, 169, 176, 180, 186, 195, 204, 213, 229, 245, 261, 276, 
    285, 293, 302, 310, 318, 327, 335, 343, 355, 364, 372, 381, 389, 397, 
    406, 414, 422, 434, 443, 453, 462, 470, 480, 489, 497, 505, 517, 524, 
    531, 538, 545, 552, 559, 570, 579, 587, 596, 604, 612, 621, 633, 644, 
    652, 660, 671, 683, 692, 700, 709, 717, 725, 734, 746, 757, 765, 773, 
    784, 796, 805, 815, 824, 832, 842, 855, 864, 876, 884, 892, 903, 915, 
    922, 929, 936, 943, 950, 957, 968, 976, 984, 992, 1000, 1008, 1020, 1028, 
    1040, 1048, 1060, 1068, 1080, 1091, 1102, 1113, 1124, 1133, 1142, 1152, 1162, 1173, 
    1183, 1192, 1202, 1211, 1221, 1233, 1242, 1254, 1266, 1279, 1292, 1305, 1318, 1331, 
    1344, 1354, 1373, 1392, 1409, 1426, 1439, 1452, 1461, 1470, 1483, 1496, 1505, 1514, 
    1523, 1532, 1553, 1574, 1583, 1591, 1600, 1608, 1616, 1625, 1633, 1641, 1653, 1662, 
    1670, 1679, 1687, 1695, 1704, 1712, 1720, 1732, 1741, 1751, 1760, 1768, 1778, 1787, 
    1795, 1803, 1815, 1822, 1829, 1836, 1843, 1850, 1857, 1868, 1877, 1886, 1895, 1904, 
    1913, 1922, 1931, 1940, 1948, 1956, 1964, 1972, 1981, 1990, 2002, 2012, 2022, 2032, 
    2044, 2053, 2063, 2073, 2083, 2093, 2103, 2113, 2124, 2135, 2146, 2159, 2169, 2178, 
    2187, 2196, 2207, 2215, 2227, 2240, 2251, 2262, 2273, 2284, 2295, 2306, 2316, 2326, 
    2336, 2348, 2357, 2367, 2383, 2395, 2407, 2422, 2432, 2442, 2452, 2462, 2473, 2484, 
    2495, 2506, 2518, 2530, 2542, 2554, 2563, 2572, 2581, 2590, 2601, 2612, 2623, 2634, 
    2643, 2652, 2661, 2670, 2681, 2692, 2700, 2708, 2716, 2724, 2732, 2740, 2748, 2756, 
    2764, 2772, 2780, 2788, 2797, 2806, 2814, 2821, 2829, 2836, 2844, 2851, 2859, 2866, 
    2874, 2881, 2889, 2896, 2905, 2913, 2922, 2930, 2939, 2947, 2956, 2964, 2973, 2981, 
    2990, 2998, 3007, 3015, 3024, 3032, 3041, 3049, 3058, 3066, 3075, 3083, 3092, 3100, 
    3109, 3117, 3126, 3134, 3143, 3151, 3160, 3168, 3177, 3185, 3194, 3202, 3211, 3220, 
    3229, 3238, 3246, 3254, 3262, 3276, 3284, 3296, 3308, 3312, 3316, 3321, 3327, 3336, 
    3345, 3354, 3358, 3362, 3370, 3374, 3379, 3383, 3393, 3403, 3413, 3423, 3433, 3443, 
    3454, 3465, 3476, 3487, 3498, 3509, 3519, 3529, 3539, 3549, 3559, 3569, 3580, 3591, 
    3602, 3613, 3624, 3635, 3644, 3656, 3668, 3680, 3688, 3699, 3710, 3721, 3731, 3741, 
    3751, 3761, 3771, 3781, 3789, 3800, 3811, 3822, 3832, 3842, 3852, 3862, 3872, 3882, 
    3893, 3904, 3915, 3926, 3937, 3948, 3958, 3968, 3978, 3988, 3998, 4008, 4019, 4030, 
    4041, 4052, 4063, 4074, 4084, 4097, 4110, 4123, 4132, 4144, 4156, 4168, 4179, 4190, 
    4201, 4212, 4223, 4234, 4243, 4255, 4267, 4279, 4290, 4301, 4312, 4323, 4334, 4345, 
    4356, 4367, 4378, 4389, 4400, 4411, 4420, 4432, 4444, 4456, 4467, 4478, 4489, 4500, 
    4511, 4522, 4532, 4542, 4552, 4562, 4572, 4582, 4592, 4602, 4612, 4622, 4632, 4642, 
    4650, 4661, 4672, 4683, 4693, 4703, 4713, 4723, 4733, 4743, 4753, 4763, 4773, 4783, 
    4792, 4803, 4814, 4825, 4836, 4847, 4858, 4869, 4880, 4891, 4900, 4908, 4917, 4925, 
    4933, 4942, 4950, 4958, 4970, 4979, 4987, 4996, 5004, 5012, 5021, 5029, 5037, 5049, 
    5058, 5068, 5077, 5085, 5095, 5104, 5112, 5120, 5132, 5139, 5146, 5153, 5160, 5167, 
    5174, 5185, 5194, 5207, 5216, 5229, 5238, 5251, 5260, 5273, 5280, 5287, 5294, 5300, 
    5308, 5320, 5328, 5340, 5348, 5360, 5368, 5380, 5391, 5403, 5415, 5427, 5439, 5451, 
    5463, 5473, 5484, 5495, 5504, 5513, 5522, 5531, 5542, 5551, 5559, 5569, 5575, 5584, 
    5593, 5602, 5608, 5612, 5624, 5636, 5647, 5659, 5671, 5682, 5694, 5705, 5717, 5728, 
    5738, 5749, 5760, 5771, 5782, 5793, 5804, 5815, 5826, 5837, 5848, 5859, 5870, 5883, 
    5896, 5907, 5918, 5929, 5940, 5953, 5966, 5977, 5988, 6001, 6014, 6025, 6036, 6047, 
    6058, 6071, 6084, 6095, 6106, 6118, 6130, 6142, 6154, 6168, 6182, 6194, 6206, 6220, 
    6234, 6246, 6258, 6262, 6267, 6271, 6275, 6289, 6296, 6303, 6310, 6317, 6327, 6337, 
    6347, 6357, 6364, 6371, 6377, 6383, 6390, 6397, 6404, 6411, 6418, 6425, 6431, 6437, 
    6445, 6453, 6461, 6469, 6479, 6489, 6500, 6511, 6523, 6534, 6545, 6556, 6569, 6582, 
    6595, 6609, 6623, 6637, 6651, 6665, 6679, 6690, 6698, 6710, 6718, 6730, 6738, 6750, 
    6758, 6770, 6779, 6788, 6798, 6808, 6819, 6829, 6838, 6848, 6857, 6867, 6879, 6888, 
    6900, 6912, 6925, 6938, 6951, 6964, 6977, 6990, 7000, 7008, 7016, 7024, 7032, 7042, 
    7052, 7064, 7070, 7080, 7092, 7104, 7110, 7121, 7132, 7143, 7154, 7164, 7174, 7184, 
    7194, 7204, 7213, 7219, 7226, 7234, 7242, 7251, 7260, 7267, 7275, 7281, 7287, 7296, 
    7305, 7315, 7325, 7333, 7342, 7350, 7357, 7364, 7371, 7378, 7384, 7391, 7398, 7403, 
    7413, 7422, 7430, 7451, 7472, 7493, 7514, 7535, 7556, 7577, 7598, 7619, 7626, 7632, 
    7639, 7645, 7653, 7661, 7668, 7675, 7683, 7691, 7701, 7706, 7714, 7724, 7731, 7740, 
    7748, 7754, 7762, 7775, 7786, 7797, 7808, 7819, 7829, 7839, 7849, 7859, 7868, 7877, 
    7888, 7899, 7910, 7921, 7930, 7939, 7948, 7957, 7969, 7981, 7993, 8005, 8015, 8025, 
    8035, 8045, 8055, 8064, 8073, 8082, 8091, 8095, 8104, 8113, 8122, 8131, 8139, 8147, 
    8155, 8163, 8171, 8179, 8186, 8193, 8202, 8211, 8220, 8232, 8244, 8256, 8268, 8280, 
    8292, 8304, 8316, 8328, 8336, 8344, 8353, 8363, 8374, 8383, 8393, 8404, 8412, 8420, 
    8429, 8439, 8450, 8459, 8469, 8480, 8488, 8496, 8505, 8517, 8528, 8537, 8549, 8560, 
    8567, 8574, 8579, 8586, 8593, 8598, 8605, 8612, 8616, 8622, 8628, 8635, 8642, 8649, 
    8656, 8666, 8676, 8686, 8696, 8703, 8710, 8716, 8722, 8733, 8744, 8748, 8753, 8758, 
    8763, 8772, 8781, 8788, 8798, 8808, 8818, 8828, 8835, 8842, 8849, 8860, 8871, 8882, 
    8895, 8908, 8921, 8934, 8947, 8960, 8973, 8986, 8999, 9008, 9017, 9027, 9037, 9047, 
    9059, 9071, 9083, 9095, 9107, 9119, 9131, 9143, 9155, 9167, 9179, 9191, 9203, 9216, 
    9229, 9242, 9255, 9270, 9285, 9300, 9315, 9330, 9345, 9360, 9375, 9390, 9405, 9420, 
    9435, 9450, 9465, 9482, 9499, 9514, 9529, 9546, 9563, 9578, 9593, 9608, 9623, 9641, 
    9659, 9675, 9691, 9709, 9727, 9743, 9759, 9774, 9788, 9802, 9816, 9830, 9843, 9856, 
    9869, 9882, 9896, 9910, 9924, 9938, 9954, 9970, 9986, 10002, 10018, 10034, 10050, 10066, 
    10082, 10098, 10114, 10130, 10148, 10166, 10182, 10198, 10214, 10230, 10248, 10266, 10282, 10298, 
    10316, 10334, 10350, 10366, 10382, 10398, 10417, 10436, 10453, 10470, 10489, 10508, 10525, 10542, 
    10557, 10572, 10587, 10602, 10608, 10614, 10619, 10624, 10630, 10636, 10641, 10646, 10651, 10660, 
    10669, 10674, 10679, 10685, 10691, 10696, 10701, 10707, 10713, 10718, 10723, 10730, 10737, 10744, 
    10757, 10764, 10770, 10776, 10782, 10788, 10794, 10800, 10806, 10812, 10818, 10824, 10829, 10834, 
    10839, 10844, 10850, 10855, 10860, 10865, 10873, 10881, 10889, 10897, 10905, 10913, 10924, 10936, 
    10947, 10958, 10968, 10979, 10987, 10995, 11003, 11011, 11017, 11023, 11031, 11039, 11047, 11056, 
    11065, 11074, 11083, 11092, 11101, 11110, 11121, 11132, 11141, 11152, 11161, 11168, 11175, 11182, 
    11192, 11199, 11205, 11213, 11221, 11229, 11236, 11244, 11252, 11260, 11268, 11274, 11282, 11290, 
    11298, 11306, 11312, 11320, 11328, 11336, 11344, 11357, 11371, 11384, 11397, 11411, 11424, 11439, 
    11453, 11466, 11478, 11490, 11503, 11517, 11530, 11543, 11557, 11570, 11585, 11599, 11612, 11624, 
    11636, 11648, 11660, 11672, 11683, 11695, 11707, 11719, 11730, 11742, 11755, 11767, 11779, 11792, 
    11804, 11818, 11831, 11843, 11854, 11865, 11877, 11890, 11904, 11917, 11930, 11944, 11957, 11972, 
    11986, 11999, 12011, 12023, 12036, 12050, 12063, 12076, 12090, 12103, 12118, 12132, 12145, 12157, 
    12169, 12175, 12181, 12187, 12193, 12198, 12204, 12211, 12217, 12224, 12230, 12236, 12244, 12252, 
    12260, 12268, 12276, 12284, 12292, 12300, 12308, 12313, 12318, 12326, 12334, 12342, 12349, 12359, 
    12369, 12379, 12389, 12399, 12409, 12420, 12433, 12441, 12453, 12461, 12473, 12481, 12493, 12501, 
    12513, 12521, 12533, 12541, 12553, 12561, 12573, 12581, 12593, 12600, 12608, 12620, 12628, 12640, 
    12648, 12660, 12668, 12680, 12688, 12700, 12708, 12720, 12728, 12740, 12748, 12760, 12776, 12792, 
    12808, 12824, 12840, 12856, 12872, 12888, 12905, 12922, 12939, 12956, 12965, 12978, 12993, 13012, 
    13026, 13039, 13052, 13065, 13082, 13099, 13113, 13129, 13142, 13156, 13172, 13185, 13198, 13211, 
    13228, 13245, 13259, 13273, 13287, 13301, 13315, 13329, 13345, 13361, 13377, 13393, 13409, 13425, 
    13438, 13451, 13464, 13477, 13490, 13503, 13517, 13531, 13545, 13559, 13574, 13589, 13604, 13619, 
    13632, 13645, 13662, 13679, 13692, 13705, 13717, 13729, 13742, 13755, 13768, 13781, 13796, 13811, 
    13826, 13841, 13856, 13871, 13886, 13901, 13916, 13931, 13946, 13961, 13976, 13992, 14008, 14023, 
    14038, 14052, 14066, 14081, 14096, 14112, 14128, 14143, 14158, 14173, 14188, 14206, 14224, 14239, 
    14254, 14268, 14282, 14296, 14310, 14324, 14338, 14352, 14366, 14381, 14398, 14415, 14430, 14445, 
    14459, 14473, 14487, 14501, 14516, 14531, 14542, 14553, 14567, 14581, 14596, 14611, 14624, 14637, 
    14652, 14667, 14682, 14697, 14712, 14727, 14739, 14751, 14763, 14775, 14787, 14799, 14811, 14823, 
    14835, 14847, 14859, 14871, 14883, 14895, 14907, 14919, 14931, 14943, 14955, 14967, 14979, 14991, 
    15003, 15015, 15028, 15041, 15054, 15067, 15080, 15093, 15107, 15121, 15135, 15149, 15164, 15179, 
    15194, 15209, 15222, 15235, 15252, 15269, 15286, 15303, 15320, 15337, 15354, 15371, 15388, 15405, 
    15422, 15439, 15451, 15463, 15471, 15482, 15490, 15504, 15530, 15540, 15548, 15556, 15564, 15574, 
    15582, 15590, 15598, 15606, 15618, 15626, 15634, 15642, 15652, 15660, 15668, 15676, 15684, 15692, 
    15702, 15710, 15718, 15726, 15734, 15742, 15750, 15762, 15770, 15778, 15786, 15794, 15802, 15812, 
    15820, 15828, 15836, 15844, 15852, 15860, 15870, 15883, 15891, 15899, 15911, 15919, 15927, 15935, 
    15948, 15960, 15972, 15980, 15987, 15994, 16007, 16015, 16022, 16029, 16036, 16049, 16056, 16069, 
    16080, 16089, 16098, 16107, 16120, 16129, 16138, 16147, 16160, 16170, 16180, 16190, 16200, 16210, 
    16220, 16230, 16240, 16252, 16264, 16275, 16286, 16295, 16304, 16313, 16326, 16335, 16348, 16357, 
    16366, 16379, 16389, 16398, 16407, 16416, 16425, 16435, 16444, 16453, 16462, 16471, 16482, 16495, 
    16508, 16521, 16534, 16545, 16555, 16567, 16576, 16586, 16596, 16605, 16617, 16629, 16641, 16654, 
    16666, 16675, 16681, 16687, 16695, 16703, 16711, 16723, 16735, 16747, 16758, 16769, 16780, 16791, 
    16797, 16808, 16819, 16827, 16835, 16843, 16855, 16861, 16872, 16883, 16895, 16906, 16918, 16929, 
    16941, 16953, 16964, 16976, 16988, 16999, 17008, 17017, 17026, 17039, 17048, 17057, 17066, 17079, 
    17092, 17105, 17121, 17137, 17150, 17163, 17174, 17185, 17202, 17219, 17231, 17242, 17254, 17265, 
    17277, 17291, 17303, 17314, 17327, 17339, 17353, 17365, 17376, 17389, 17400, 17411, 17418, 17425, 
    17432, 17439, 17446, 17453, 17459, 17465, 17473, 17481, 17489, 17497, 17505, 17517, 17525, 17537, 
    17545, 17557, 17565, 17577, 17586, 17595, 17604, 17613, 17622, 17631, 17641, 17651, 17662, 17672, 
    17681, 17691, 17700, 17710, 17722, 17731, 17743, 17755, 17768, 17781, 17794, 17807, 17820, 17833, 
    17843, 17849, 17857, 17864, 17871, 17878, 17885, 17892, 17899, 17905, 17911, 17916, 17922, 17928, 
    17935, 17942, 17949, 17956, 17963, 17970, 17976, 17982, 17990, 17997, 18005, 18012, 18019, 18027, 
    18034, 18041, 18052, 18060, 18067, 18075, 18082, 18095, 18102, 18110, 18117, 18124, 18135, 18143, 
    18152, 18160, 18167, 18176, 18184, 18191, 18198, 18209, 18215, 18221, 18227, 18233, 18239, 18245, 
    18255, 18262, 18269, 18276, 18283, 18291, 18299, 18307, 18315, 18322, 18329, 18335, 18341, 18347, 
    18358, 18369, 18380, 18391, 18402, 18413, 18424, 18435, 18446, 18457, 18468, 18479, 18490, 18501, 
    18509, 18517, 18525, 18533, 18541, 18549, 18558, 18567, 18576, 18585, 18595, 18605, 18615, 18625, 
    18633, 18641, 18654, 18667, 18675, 18683, 18690, 18697, 18703, 18711, 18719, 18729, 18739, 18747, 
    18755, 18767, 18779, 18790, 18801, 18813, 18825, 18835, 18845, 18855, 18865, 18875, 18885, 18895, 
    18905, 18918, 18931, 18944, 18957, 18970, 18983, 18996, 19009, 19022, 19035, 19047, 19059, 19075, 
    19091, 19106, 19121, 19131, 19141, 19151, 19161, 19171, 19181, 19191, 19201, 19214, 19227, 19240, 
    19253, 19266, 19279, 19292, 19305, 19318, 19331, 19343, 19355, 19371, 19387, 19402, 19417, 19426, 
    19435, 19444, 19453, 19462, 19471, 19480, 19489, 19498, 19507, 19516, 19525, 19534, 19543, 19552, 
    19561, 19569, 19577, 19585, 19593, 19601, 19609, 19617, 19625, 19635, 19645, 19655, 19665, 19675, 
    19685, 19693, 19701, 19709, 19717, 19725, 19733, 19742, 19751, 19761, 19771, 19782, 19793, 19804, 
    19815, 19823, 19831, 19842, 19853, 19863, 19873, 19882, 19891, 19899, 19907, 19919, 19931, 19944, 
    19957, 19969, 19981, 19997, 20013, 20025, 20037, 20050, 20063, 20075, 20087, 20095, 20103, 20111, 
    20119, 20128, 20137, 20146, 20155, 20164, 20173, 20183, 20193, 20208, 20223, 20233, 20243, 20252, 
    20261, 20270, 20279, 20288, 20297, 20306, 20315, 20324, 20333, 20342, 20351, 20360, 20369, 20378, 
    20387, 20396, 20405, 20414, 20423, 20432, 20441, 20450, 20459, 20470, 20481, 20492, 20503, 20514, 
    20525, 20536, 20547, 20558, 20569, 20580, 20591, 20602, 20613, 20624, 20635, 20646, 20657, 20668, 
    20679, 20690, 20701, 20712, 20723, 20734, 20743, 20752, 20766, 20780, 20790, 20800, 20810, 20820, 
    20829, 20838, 20847, 20856, 20865, 20874, 20884, 20894, 20901, 20910, 20919, 20926, 20935, 20944, 
    20951, 20960, 20969, 20976, 20987, 20998, 21009, 21020, 21031, 21042, 21050, 21058, 21066, 21074, 
    21081, 21088, 21095, 21103, 21111, 21119, 21127, 21135, 21143, 21151, 21159, 21165, 21171, 21180, 
    21192, 21203, 21214, 21225, 21235, 21244, 21253, 21265, 21277, 21286, 21295, 21305, 21315, 21325, 
    21335, 21347, 21359, 21371, 21383, 21395, 21407, 21416, 21424, 21432, 21440, 21448, 21456, 21464, 
    21472, 21480, 21488, 21496, 21504, 21512, 21520, 21528, 21536, 21545, 21553, 21561, 21569, 21577, 
    21585, 21593, 21601, 21609, 21617, 21625, 21633, 21641, 21649, 21657, 21665, 21674, 21683, 21692, 
    21701, 21711, 21721, 21731, 21741, 21749, 21757, 21766, 21775, 21783, 21791, 21803, 21815, 21827, 
    21839, 21852, 21865, 21877, 21889, 21901, 21913, 21925, 21937, 21950, 21963, 21975, 21987, 21995, 
    22005, 22015, 22023, 22033, 22043, 22053, 22063, 22072, 22080, 22090, 22100, 22108, 22117, 22126, 
    22135, 22144, 22153, 22162, 22170, 22178, 22186, 22195, 22204, 22213, 22222, 22231, 22240, 22249, 
    22258, 22266, 22274, 22281, 22288, 22295, 22303, 22312, 22320, 22328, 22337, 22345, 22353, 22362, 
    22370, 22378, 22387, 22395, 22403, 22412, 22420, 22428, 22437, 22445, 22452, 22460, 22467, 22474, 
    22482, 22489, 22496, 22507, 22514, 22525, 22532, 22543, 22550, 22561, 22569, 22578, 22586, 22594, 
    22603, 22611, 22619, 22628, 22636, 22644, 22653, 22661, 22669, 22678, 22686, 22694, 22703, 22711, 
    22718, 22726, 22733, 22740, 22748, 22755, 22764, 22775, 22784, 22795, 22801, 22807, 22817, 22827, 
    22837, 22843, 22850, 22866, 22882, 22898, 22913, 22926, 22936, 22946, 22956, 22966, 22977, 22987, 
    22997, 23007, 23017, 23021, 23026, 23032, 23045, 23053, 23062, 23070, 23078, 23087, 23095, 23103, 
    23112, 23120, 23128, 23137, 23145, 23153, 23162, 23170, 23178, 23187, 23195, 23202, 23210, 23217, 
    23224, 23232, 23239, 23247, 23256, 23264, 23272, 23281, 23289, 23297, 23306, 23314, 23322, 23331, 
    23339, 23347, 23356, 23364, 23372, 23381, 23389, 23396, 23404, 23411, 23418, 23426, 23433, 23442, 
    23451, 23460, 23469, 23478, 23487, 23496, 23505, 23514, 23523, 23536, 23545, 23554, 23567, 23571, 
    23580, 23593, 23602, 23615, 23624, 23637, 23646, 23659, 23664, 23672, 23681, 23689, 23697, 23706, 
    23714, 23722, 23731, 23739, 23747, 23756, 23764, 23772, 23781, 23789, 23797, 23806, 23814, 23821, 
    23829, 23836, 23843, 23851, 23858, 23867, 23876, 23885, 23894, 23903, 23911, 23920, 23928, 23936, 
    23945, 23953, 23961, 23973, 23982, 23990, 23999, 24007, 24015, 24024, 24032, 24040, 24052, 24061, 
    24071, 24080, 24088, 24098, 24107, 24115, 24123, 24135, 24142, 24149, 24156, 24163, 24170, 24177, 
    24188, 24195, 24202, 24209, 24215, 24229, 24243, 24250, 24257, 24263, 24269, 24276, 24283, 24293, 
    24303, 24313, 24322, 24328, 24334, 24340, 24346, 24353, 24360, 24366, 24372, 24379, 24386, 24392, 
    24398, 24405, 24412, 24419, 24426, 24433, 24440, 24447, 24454, 24460, 24466, 24472, 24478, 24484, 
    24490, 24497, 24505, 24511, 24519, 24528, 24536, 24544, 24553, 24561, 24569, 24578, 24586, 24594, 
    24603, 24611, 24619, 24628, 24636, 24644, 24653, 24661, 24668, 24676, 24683, 24690, 24698, 24705, 
    24716, 24727, 24738, 24749, 24760, 24771, 24782, 24793, 24804, 24815, 24826, 24837, 24846, 24855, 
    24864, 24873, 24881, 24890, 24898, 24906, 24915, 24923, 24931, 24940, 24948, 24956, 24965, 24973, 
    24981, 24990, 24998, 25006, 25015, 25023, 25030, 25038, 25045, 25052, 25060, 25067, 25078, 25089, 
    25100, 25111, 25122, 25133, 25144, 25155, 25166, 25177, 25188, 25199, 25208, 25217, 25226, 25235, 
    25245, 25255, 25265, 25275, 25283, 25289, 25295, 25304, 25313, 25322, 25330, 25338, 25346, 25354, 
    25362, 25370, 25378, 25386, 25394, 25402, 25414, 25422, 25434, 25442, 25454, 25462, 25474, 25482, 
    25494, 25502, 25514, 25522, 25534, 25542, 25554, 25561, 25571, 25581, 25591, 25601, 25605, 25609, 
    25613, 25621, 25627, 25633, 25639, 25645, 25652, 25659, 25666, 25671, 25679, 25687, 25696, 25705, 
    25714, 25722, 25731, 25740, 25751, 25762, 25773, 25783, 25793, 25805, 25815, 25827, 25839, 25846, 
    25855, 25863, 25872, 25880, 25888, 25897, 25905, 25913, 25925, 25934, 25942, 25951, 25959, 25967, 
    25976, 25984, 25992, 26004, 26013, 26023, 26032, 26040, 26050, 26059, 26067, 26075, 26087, 26094, 
    26101, 26108, 26115, 26122, 26129, 26140, 26148, 26156, 26164, 26172, 26182, 26192, 26203, 26214, 
    26226, 26237, 26248, 26259, 26272, 26285, 26298, 26312, 26326, 26340, 26354, 26368, 26382, 26393, 
    26401, 26413, 26421, 26433, 26441, 26453, 26461, 26473, 26482, 26491, 26501, 26511, 26522, 26532, 
    26541, 26551, 26560, 26570, 26582, 26591, 26603, 26615, 26628, 26641, 26654, 26667, 26680, 26693, 
    26703, 26710, 26718, 26727, 26735, 26745, 26753, 26761, 26770, 26781, 26790, 26801, 26810, 26821, 
    26832, 26845, 26856, 26869, 26880, 26893, 26903, 26912, 26921, 26930, 26939, 26949, 26958, 26967, 
    26976, 26985, 26995, 27006, 27017, 27026, 27035, 27043, 27051, 27059, 27073, 27081, 27089, 27100, 
    27111, 27122, 27133, 27138, 27144, 27153, 27162, 27171, 27181, 27191, 27201, 27211, 27221, 27231, 
    27241, 27251, 27261, 27271, 27281, 27290, 27300, 27309, 27321, 27333, 27345, 27356, 27367, 27378, 
    27386, 27391, 27402, 27413, 27424, 27435, 27446, 27457, 27468, 27479, 27488, 27498, 27508, 27517, 
    27526, 27536, 27546, 27555, 27564, 27573, 27586, 27595, 27608, 27617, 27630, 27639, 27652, 27665, 
    27678, 27690, 27702, 27715, 27728, 27740, 27752, 27766, 27780, 27790, 27800, 27814, 27828, 27838, 
    27848, 27858, 27868, 27890, 27912, 27923, 27934, 27944, 27954, 27965, 27976, 27986, 27996, 28006, 
    28016, 28025, 28034, 28044, 28054, 28063, 28072, 28094, 28107, 28120, 28132, 28144, 28157, 28170, 
    28182, 28194, 28207, 28220, 28232, 28244, 28257, 28270, 28282, 28294, 28309, 28324, 28339, 28354, 
    28370, 28386, 28401, 28416, 28427, 28442, 28453, 28468, 28478, 28492, 28502, 28516, 28527, 28542, 
    28553, 28568, 28578, 28592, 28602, 28616, 28625, 28638, 28647, 28660, 28669, 28682, 28691, 28704, 
    28714, 28724, 28734, 28744, 28757, 28770, 28782, 28794, 28807, 28820, 28832, 28844, 28858, 28871, 
    28884, 28897, 28910, 28922, 28936, 28949, 28962, 28975, 28988, 29000, 29013, 29026, 29038, 29050, 
    29063, 29076, 29088, 29100, 29113, 29126, 29138, 29150, 29163, 29176, 29188, 29200, 29214, 29228, 
    29240, 29252, 29264, 29276, 29290, 29304, 29317, 29330, 29342, 29354, 29368, 29382, 29394, 29406, 
    29418, 29430, 29444, 29458, 29470, 29482, 29497, 29511, 29525, 29539, 29553, 29566, 29579, 29593, 
    29607, 29620, 29633, 29648, 29663, 29676, 29689, 29704, 29719, 29732, 29745, 29755, 29765, 29774, 
    29783, 29793, 29803, 29812, 29821, 29830, 29843, 29852, 29865, 29874, 29887, 29896, 29909, 29918, 
    29927, 29937, 29947, 29956, 29965, 29971, 29977, 29983, 29989, 30004, 30019, 30034, 30049, 30062, 
    30075, 30090, 30102, 30115, 30127, 30140, 30152, 30165, 30182, 30198, 30212, 30227, 30241, 30256, 
    30270, 30285, 30299, 30314, 30328, 30343, 30357, 30372, 30384, 30397, 30409, 30422, 30434, 30447, 
    30464, 30480, 30494, 30509, 30523, 30538, 30552, 30567, 30581, 30596, 30610, 30625, 30639, 30654, 
    30666, 30678, 30690, 30706, 30720, 30734, 30748, 30762, 30776, 30790, 30802, 30814, 30826, 30842, 
    30856, 30870, 30884, 30898, 30912, 30926, 30941, 30957, 30972, 30988, 31003, 31019, 31039, 31058, 
    31075, 31093, 31110, 31128, 31145, 31163, 31180, 31198, 31215, 31233, 31250, 31268, 31283, 31299, 
    31314, 31330, 31345, 31361, 31381, 31400, 31417, 31435, 31452, 31470, 31487, 31505, 31522, 31540, 
    31557, 31575, 31592, 31610, 31625, 31641, 31656, 31672, 31687, 31703, 31723, 31742, 31759, 31777, 
    31794, 31812, 31829, 31847, 31864, 31882, 31899, 31917, 31934, 31952, 31967, 31983, 31998, 32014, 
    32029, 32045, 32065, 32084, 32101, 32119, 32136, 32154, 32171, 32189, 32206, 32224, 32241, 32259, 
    32276, 32294, 32306, 32319, 32331, 32344, 32356, 32369, 32386, 32402, 32416, 32431, 32445, 32460, 
    32474, 32489, 32503, 32518, 32532, 32547, 32561, 32576, 32588, 32601, 32613, 32626, 32638, 32651, 
    32668, 32684, 32698, 32713, 32727, 32742, 32756, 32771, 32785, 32800, 32814, 32829, 32843, 32858, 
    32870, 32882, 32894, 32910, 32924, 32938, 32952, 32966, 32980, 32994, 33006, 33018, 33030, 33046, 
    33060, 33074, 33088, 33102, 33116, 33130, 33143, 33157, 33170, 33184, 33197, 33211, 33229, 33246, 
    33261, 33277, 33292, 33308, 33323, 33339, 33354, 33370, 33385, 33401, 33416, 33432, 33445, 33459, 
    33472, 33486, 33499, 33513, 33531, 33548, 33563, 33579, 33594, 33610, 33625, 33641, 33656, 33672, 
    33687, 33703, 33718, 33734, 33747, 33760, 33773, 33790, 33805, 33820, 33835, 33850, 33865, 33880, 
    33893, 33906, 33919, 33936, 33951, 33966, 33981, 33996, 34011, 34026, 34039, 34053, 34066, 34080, 
    34093, 34107, 34125, 34142, 34157, 34173, 34188, 34204, 34219, 34235, 34250, 34266, 34281, 34297, 
    34312, 34328, 34341, 34355, 34368, 34382, 34395, 34409, 34427, 34444, 34459, 34475, 34490, 34506, 
    34521, 34537, 34552, 34568, 34583, 34599, 34614, 34630, 34643, 34656, 34669, 34686, 34701, 34716, 
    34731, 34746, 34761, 34776, 34789, 34802, 34815, 34832, 34847, 34862, 34877, 34892, 34907, 34922, 
    34932, 34943, 34953, 34964, 34974, 34985, 34995, 35006, 35016, 35026, 35036, 35046, 35058, 35070, 
    35082, 35094, 35105, 35116, 35127, 35138, 35148, 35158, 35168, 35178, 35189, 35200, 35211, 35222, 
    35233, 35244, 35254, 35264, 35275, 35286, 35296, 35306, 35317, 35328, 35338, 35348, 35359, 35370, 
    35380, 35390, 35404, 35418, 35432, 35446, 35458, 35470, 35480, 35489, 35498, 35510, 35524, 35538, 
    35552, 35565, 35578, 35592, 35606, 35619, 35632, 35642, 35656, 35666, 35680, 35689, 35702, 35711, 
    35724, 35734, 35748, 35758, 35772, 35781, 35794, 35803, 35816, 35825, 35838, 35847, 35860, 35869, 
    35882, 35891, 35904, 35911, 35920, 35930, 35944, 35954, 35968, 35977, 35990, 35999, 36012, 36022, 
    36036, 36046, 36060, 36069, 36082, 36091, 36104, 36113, 36126, 36135, 36148, 36157, 36170, 36179, 
    36192, 36201, 36215, 36228, 36241, 36252, 36263, 36274, 36289, 36299, 36309, 36319, 36333, 36344, 
    36355, 36366, 36381, 36391, 36401, 36411, 36425, 36437, 36449, 36460, 36471, 36484, 36497, 36509, 
    36521, 36532, 36543, 36554, 36569, 36579, 36589, 36599, 36613, 36624, 36635, 36646, 36661, 36671, 
    36685, 36695, 36705, 36719, 36730, 36740, 36750, 36760, 36770, 36781, 36791, 36801, 36811, 36821, 
    36833, 36848, 36863, 36878, 36892, 36906, 36920, 36935, 36950, 36965, 36979, 36993, 37007, 37020, 
    37032, 37044, 37055, 37067, 37078, 37090, 37101, 37114, 37127, 37140, 37154, 37167, 37178, 37193, 
    37204, 37214, 37223, 37232, 37241, 37254, 37267, 37280, 37293, 37306, 37318, 37330, 37343, 37356, 
    37368, 37380, 37392, 37404, 37413, 37422, 37431, 37444, 37455, 37466, 37477, 37492, 37502, 37512, 
    37522, 37536, 37547, 37558, 37569, 37584, 37594, 37604, 37614, 37628, 37642, 37656, 37673, 37690, 
    37704, 37718, 37731, 37744, 37756, 37768, 37777, 37786, 37797, 37808, 37819, 37830, 37839, 37849, 
    37859, 37868, 37877, 37887, 37897, 37906, 37915, 37924, 37937, 37946, 37959, 37968, 37981, 37990, 
    38003, 38015, 38027, 38039, 38051, 38058, 38064, 38073, 38082, 38090, 38098, 38107, 38116, 38124, 
    38132, 38144, 38156, 38168, 38180, 38192, 38204, 38216, 38228, 38240, 38252, 38264, 38276, 38289, 
    38302, 38314, 38326, 38339, 38352, 38364, 38376, 38389, 38402, 38414, 38426, 38439, 38452, 38464, 
    38476, 38486, 38496, 38505, 38514, 38524, 38534, 38543, 38552, 38562, 38572, 38581, 38590, 38601, 
    38612, 38622, 38632, 38643, 38654, 38664, 38674, 38686, 38698, 38709, 38720, 38732, 38744, 38755, 
    38766, 38776, 38786, 38795, 38804, 38818, 38832, 38846, 38860, 38870, 38880, 38889, 38898, 38907, 
    38916, 38924, 38932, 38942, 38952, 38961, 38970, 38980, 38990, 38999, 39008, 39021, 39034, 39046, 
    39058, 39071, 39084, 39096, 39108, 39121, 39134, 39146, 39158, 39174, 39190, 39205, 39220, 39236, 
    39252, 39267, 39282, 39298, 39314, 39329, 39344, 39360, 39376, 39391, 39406, 39419, 39432, 39441, 
    39451, 39460, 39470, 39479, 39489, 39501, 39513, 39524, 39535, 39547, 39559, 39570, 39581, 39593, 
    39605, 39616, 39627, 39639, 39651, 39662, 39673, 39687, 39701, 39715, 39729, 39743, 39757, 39771, 
    39785, 39799, 39813, 39826, 39839, 39856, 39873, 39889, 39905, 39917, 39929, 39940, 39951, 39963, 
    39975, 39986, 39997, 40009, 40021, 40032, 40043, 40055, 40067, 40078, 40089, 40103, 40117, 40131, 
    40145, 40159, 40173, 40187, 40201, 40215, 40229, 40242, 40255, 40272, 40289, 40305, 40321, 40330, 
    40339, 40348, 40357, 40366, 40375, 40385, 40395, 40405, 40415, 40425, 40435, 40445, 40455, 40464, 
    40473, 40486, 40499, 40512, 40525, 40535, 40545, 40558, 40572, 40585, 40599, 40612, 40626, 40639, 
    40653, 40666, 40680, 40693, 40707, 40720, 40733, 40746, 40759, 40771, 40783, 40795, 40807, 40820, 
    40833, 40846, 40859, 40871, 40883, 40895, 40907, 40918, 40929, 40940, 40951, 40961, 40971, 40981, 
    40991, 41003, 41013, 41023, 41033, 41043, 41053, 41063, 41074, 41085, 41096, 41107, 41118, 41129, 
    41140, 41151, 41164, 41177, 41190, 41203, 41217, 41231, 41245, 41259, 41271, 41283, 41295, 41307, 
    41319, 41331, 41343, 41355, 41367, 41379, 41391, 41403, 41414, 41425, 41436, 41447, 41460, 41473, 
    41486, 41499, 41516, 41533, 41544, 41555, 41566, 41577, 41590, 41603, 41616, 41629, 41643, 41657, 
    41671, 41685, 41696, 41707, 41720, 41733, 41746, 41759, 41769, 41779, 41789, 41799, 41809, 41819, 
    41830, 41843, 41854, 41865, 41876, 41888, 41900, 41912, 41924, 41936, 41948, 41961, 41974, 41987, 
    42000, 42012, 42024, 42036, 42048, 42059, 42070, 42081, 42092, 42105, 42118, 42130, 42142, 42158, 
    42174, 42190, 42206, 42218, 42230, 42241, 42252, 42266, 42280, 42293, 42306, 42320, 42334, 42347, 
    42360, 42371, 42382, 42392, 42402, 42413, 42424, 42434, 42444, 42455, 42466, 42476, 42486, 42497, 
    42508, 42518, 42528, 42539, 42550, 42560, 42570, 42581, 42592, 42602, 42612, 42623, 42634, 42644, 
    42654, 42665, 42676, 42686, 42696, 42707, 42718, 42728, 42738, 42749, 42760, 42770, 42780, 42791, 
    42802, 42812, 42822, 42833, 42844, 42854, 42864, 42879, 42892, 42906, 42918, 42931, 42944, 42956, 
    42968, 42981, 42994, 43006, 43018, 43031, 43044, 43056, 43068, 43081, 43094, 43106, 43118, 43131, 
    43144, 43156, 43168, 43181, 43194, 43206, 43218, 43231, 43244, 43256, 43268, 43281, 43294, 43306, 
    43318, 43331, 43344, 43356, 43368, 43381, 43394, 43406, 43418, 43431, 43444, 43456, 43468, 43481, 
    43494, 43506, 43518, 43529, 43540, 43550, 43560, 43575, 43590, 43605, 43620, 43632, 43644, 43655, 
    43666, 43677, 43688, 43698, 43708, 43719, 43730, 43740, 43750, 43761, 43772, 43782, 43792, 43804, 
    43816, 43827, 43838, 43846, 43854, 43861, 43868, 43877, 43886, 43895, 43904, 43913, 43922, 43931, 
    43940, 43949, 43958, 43967, 43976, 43985, 43994, 44003, 44012, 44021, 44030, 44039, 44048, 44057, 
    44066, 44075, 44086, 44097, 44107, 44117, 44126, 44135, 44144, 44153, 44162, 44171, 44180, 44189, 
    44198, 44207, 44216, 44225, 44234, 44243, 44252, 44261, 44270, 44279, 44288, 44297, 44306, 44315, 
    44324, 44333, 44346, 44359, 44372, 44385, 44396, 44407, 44417, 44427, 44439, 44451, 44462, 44473, 
    44485, 44497, 44508, 44519, 44532, 44545, 44558, 44571, 44584, 44597, 44610, 44623, 44636, 44649, 
    44662, 44675, 44686, 44696, 44706, 44716, 44726, 44735, 44744, 44753, 44763, 44773, 44783, 44792, 
    44801, 44810, 44821, 44832, 44842, 44852, 44863, 44874, 44884, 44894, 44904, 44914, 44924, 44933, 
    44942, 44951, 44961, 44971, 44981, 44990, 44999, 45008, 45019, 45030, 45040, 45050, 45060, 45070, 
    45080, 45089, 45098, 45107, 45118, 45128, 45138, 45148, 45158, 45167, 45176, 45185, 45195, 45205, 
    45215, 45224, 45233, 45242, 45253, 45264, 45274, 45284, 45295, 45306, 45316, 45326, 45336, 45346, 
    45356, 45365, 45374, 45383, 45393, 45403, 45412, 45421, 45431, 45441, 45450, 45459, 45469, 45479, 
    45488, 45497, 45508, 45519, 45529, 45539, 45550, 45561, 45571, 45581, 45593, 45605, 45616, 45627, 
    45639, 45651, 45662, 45673, 45683, 45693, 45702, 45711, 45721, 45731, 45740, 45749, 45763, 45777, 
    45790, 45803, 45817, 45831, 45844, 45857, 45872, 45887, 45901, 45915, 45929, 45943, 45956, 45969, 
    45983, 45997, 46010, 46023, 46037, 46051, 46064, 46077, 46092, 46107, 46121, 46135, 46149, 46163, 
    46176, 46189, 46198, 46207, 46215, 46223, 46232, 46245, 46254, 46267, 46275, 46287, 46295, 46307, 
    46315, 46327, 46335, 46345, 46355, 46365, 46375, 46385, 46395, 46409, 46419, 46429, 46443, 46454, 
    46465, 46476, 46487, 46498, 46513, 46524, 46539, 46549, 46563, 46573, 46587, 46597, 46611, 46621, 
    46633, 46645, 46656, 46667, 46679, 46691, 46702, 46713, 46723, 46737, 46747, 46761, 46770, 46783, 
    46792, 46805, 46815, 46829, 46839, 46853, 46862, 46875, 46884, 46897, 46906, 46919, 46928, 46937, 
    46950, 46959, 46968, 46978, 46988, 46997, 47006, 47016, 47026, 47035, 47044, 47053, 47066, 47075, 
    47088, 47097, 47110, 47119, 47132, 47143, 47154, 47164, 47174, 47185, 47196, 47206, 47216, 47227, 
    47238, 47249, 47260, 47273, 47286, 47298, 47310, 47323, 47336, 47348, 47360, 47373, 47386, 47398, 
    47410, 47423, 47436, 47448, 47460, 47470, 47480, 47489, 47498, 47508, 47518, 47527, 47536, 47545, 
    47556, 47563, 47576, 47586, 47591, 47598, 47609, 47626, 47637, 47648, 47657, 47668, 47677, 47688, 
    47694, 47703, 47712, 47721, 47730, 47739, 47748, 47756, 47764, 47773, 47782, 47791, 47800, 47811, 
    47820, 47829, 47838, 47847, 47856, 47864, 47872, 47878, 47888, 47898, 47908, 47918, 47928, 47935, 
    47940, 47949, 47957, 47966, 47974, 47982, 47991, 47999, 48007, 48019, 48028, 48036, 48045, 48053, 
    48061, 48070, 48078, 48086, 48098, 48107, 48117, 48126, 48134, 48144, 48153, 48161, 48169, 48181, 
    48188, 48195, 48202, 48209, 48216, 48223, 48234, 48242, 48250, 48258, 48266, 48273, 48282, 48288, 
    48296, 48305, 48316, 48323, 48329, 48337, 0
  };

  const char *Strs =
    "PHI\000INLINEASM\000PROLOG_LABEL\000EH_LABEL\000GC_LABEL\000KILL\000EXT"
    "RACT_SUBREG\000INSERT_SUBREG\000IMPLICIT_DEF\000SUBREG_TO_REG\000COPY_T"
    "O_REGCLASS\000DBG_VALUE\000REG_SEQUENCE\000COPY\000BUNDLE\000AAA\000AAD"
    "8i8\000AAM8i8\000AAS\000ABS_F\000ABS_Fp32\000ABS_Fp64\000ABS_Fp80\000AC"
    "QUIRE_MOV16rm\000ACQUIRE_MOV32rm\000ACQUIRE_MOV64rm\000ACQUIRE_MOV8rm\000"
    "ADC16i16\000ADC16mi\000ADC16mi8\000ADC16mr\000ADC16ri\000ADC16ri8\000AD"
    "C16rm\000ADC16rr\000ADC16rr_REV\000ADC32i32\000ADC32mi\000ADC32mi8\000A"
    "DC32mr\000ADC32ri\000ADC32ri8\000ADC32rm\000ADC32rr\000ADC32rr_REV\000A"
    "DC64i32\000ADC64mi32\000ADC64mi8\000ADC64mr\000ADC64ri32\000ADC64ri8\000"
    "ADC64rm\000ADC64rr\000ADC64rr_REV\000ADC8i8\000ADC8mi\000ADC8mr\000ADC8"
    "ri\000ADC8rm\000ADC8rr\000ADC8rr_REV\000ADD16i16\000ADD16mi\000ADD16mi8"
    "\000ADD16mr\000ADD16ri\000ADD16ri8\000ADD16ri8_DB\000ADD16ri_DB\000ADD1"
    "6rm\000ADD16rr\000ADD16rr_DB\000ADD16rr_REV\000ADD32i32\000ADD32mi\000A"
    "DD32mi8\000ADD32mr\000ADD32ri\000ADD32ri8\000ADD32ri8_DB\000ADD32ri_DB\000"
    "ADD32rm\000ADD32rr\000ADD32rr_DB\000ADD32rr_REV\000ADD64i32\000ADD64mi3"
    "2\000ADD64mi8\000ADD64mr\000ADD64ri32\000ADD64ri32_DB\000ADD64ri8\000AD"
    "D64ri8_DB\000ADD64rm\000ADD64rr\000ADD64rr_DB\000ADD64rr_REV\000ADD8i8\000"
    "ADD8mi\000ADD8mr\000ADD8ri\000ADD8rm\000ADD8rr\000ADD8rr_REV\000ADDPDrm"
    "\000ADDPDrr\000ADDPSrm\000ADDPSrr\000ADDSDrm\000ADDSDrm_Int\000ADDSDrr\000"
    "ADDSDrr_Int\000ADDSSrm\000ADDSSrm_Int\000ADDSSrr\000ADDSSrr_Int\000ADDS"
    "UBPDrm\000ADDSUBPDrr\000ADDSUBPSrm\000ADDSUBPSrr\000ADD_F32m\000ADD_F64"
    "m\000ADD_FI16m\000ADD_FI32m\000ADD_FPrST0\000ADD_FST0r\000ADD_Fp32\000A"
    "DD_Fp32m\000ADD_Fp64\000ADD_Fp64m\000ADD_Fp64m32\000ADD_Fp80\000ADD_Fp8"
    "0m32\000ADD_Fp80m64\000ADD_FpI16m32\000ADD_FpI16m64\000ADD_FpI16m80\000"
    "ADD_FpI32m32\000ADD_FpI32m64\000ADD_FpI32m80\000ADD_FrST0\000ADJCALLSTA"
    "CKDOWN32\000ADJCALLSTACKDOWN64\000ADJCALLSTACKUP32\000ADJCALLSTACKUP64\000"
    "AESDECLASTrm\000AESDECLASTrr\000AESDECrm\000AESDECrr\000AESENCLASTrm\000"
    "AESENCLASTrr\000AESENCrm\000AESENCrr\000AESIMCrm\000AESIMCrr\000AESKEYG"
    "ENASSIST128rm\000AESKEYGENASSIST128rr\000AND16i16\000AND16mi\000AND16mi"
    "8\000AND16mr\000AND16ri\000AND16ri8\000AND16rm\000AND16rr\000AND16rr_RE"
    "V\000AND32i32\000AND32mi\000AND32mi8\000AND32mr\000AND32ri\000AND32ri8\000"
    "AND32rm\000AND32rr\000AND32rr_REV\000AND64i32\000AND64mi32\000AND64mi8\000"
    "AND64mr\000AND64ri32\000AND64ri8\000AND64rm\000AND64rr\000AND64rr_REV\000"
    "AND8i8\000AND8mi\000AND8mr\000AND8ri\000AND8rm\000AND8rr\000AND8rr_REV\000"
    "ANDN32rm\000ANDN32rr\000ANDN64rm\000ANDN64rr\000ANDNPDrm\000ANDNPDrr\000"
    "ANDNPSrm\000ANDNPSrr\000ANDPDrm\000ANDPDrr\000ANDPSrm\000ANDPSrr\000ARP"
    "L16mr\000ARPL16rr\000ATOMADD6432\000ATOMAND16\000ATOMAND32\000ATOMAND64"
    "\000ATOMAND6432\000ATOMAND8\000ATOMMAX16\000ATOMMAX32\000ATOMMAX64\000A"
    "TOMMIN16\000ATOMMIN32\000ATOMMIN64\000ATOMNAND16\000ATOMNAND32\000ATOMN"
    "AND64\000ATOMNAND6432\000ATOMNAND8\000ATOMOR16\000ATOMOR32\000ATOMOR64\000"
    "ATOMOR6432\000ATOMOR8\000ATOMSUB6432\000ATOMSWAP6432\000ATOMUMAX16\000A"
    "TOMUMAX32\000ATOMUMAX64\000ATOMUMIN16\000ATOMUMIN32\000ATOMUMIN64\000AT"
    "OMXOR16\000ATOMXOR32\000ATOMXOR64\000ATOMXOR6432\000ATOMXOR8\000AVX2_SE"
    "T0\000AVX2_SETALLONES\000AVX_SET0PDY\000AVX_SET0PSY\000AVX_SETALLONES\000"
    "BEXTR32rm\000BEXTR32rr\000BEXTR64rm\000BEXTR64rr\000BLENDPDrmi\000BLEND"
    "PDrri\000BLENDPSrmi\000BLENDPSrri\000BLENDVPDrm0\000BLENDVPDrr0\000BLEN"
    "DVPSrm0\000BLENDVPSrr0\000BLSI32rm\000BLSI32rr\000BLSI64rm\000BLSI64rr\000"
    "BLSMSK32rm\000BLSMSK32rr\000BLSMSK64rm\000BLSMSK64rr\000BLSR32rm\000BLS"
    "R32rr\000BLSR64rm\000BLSR64rr\000BOUNDS16rm\000BOUNDS32rm\000BSF16rm\000"
    "BSF16rr\000BSF32rm\000BSF32rr\000BSF64rm\000BSF64rr\000BSR16rm\000BSR16"
    "rr\000BSR32rm\000BSR32rr\000BSR64rm\000BSR64rr\000BSWAP32r\000BSWAP64r\000"
    "BT16mi8\000BT16mr\000BT16ri8\000BT16rr\000BT32mi8\000BT32mr\000BT32ri8\000"
    "BT32rr\000BT64mi8\000BT64mr\000BT64ri8\000BT64rr\000BTC16mi8\000BTC16mr"
    "\000BTC16ri8\000BTC16rr\000BTC32mi8\000BTC32mr\000BTC32ri8\000BTC32rr\000"
    "BTC64mi8\000BTC64mr\000BTC64ri8\000BTC64rr\000BTR16mi8\000BTR16mr\000BT"
    "R16ri8\000BTR16rr\000BTR32mi8\000BTR32mr\000BTR32ri8\000BTR32rr\000BTR6"
    "4mi8\000BTR64mr\000BTR64ri8\000BTR64rr\000BTS16mi8\000BTS16mr\000BTS16r"
    "i8\000BTS16rr\000BTS32mi8\000BTS32mr\000BTS32ri8\000BTS32rr\000BTS64mi8"
    "\000BTS64mr\000BTS64ri8\000BTS64rr\000BZHI32rm\000BZHI32rr\000BZHI64rm\000"
    "BZHI64rr\000CALL32m\000CALL32r\000CALL64m\000CALL64pcrel32\000CALL64r\000"
    "CALLpcrel16\000CALLpcrel32\000CBW\000CDQ\000CDQE\000CHS_F\000CHS_Fp32\000"
    "CHS_Fp64\000CHS_Fp80\000CLC\000CLD\000CLFLUSH\000CLI\000CLTS\000CMC\000"
    "CMOVA16rm\000CMOVA16rr\000CMOVA32rm\000CMOVA32rr\000CMOVA64rm\000CMOVA6"
    "4rr\000CMOVAE16rm\000CMOVAE16rr\000CMOVAE32rm\000CMOVAE32rr\000CMOVAE64"
    "rm\000CMOVAE64rr\000CMOVB16rm\000CMOVB16rr\000CMOVB32rm\000CMOVB32rr\000"
    "CMOVB64rm\000CMOVB64rr\000CMOVBE16rm\000CMOVBE16rr\000CMOVBE32rm\000CMO"
    "VBE32rr\000CMOVBE64rm\000CMOVBE64rr\000CMOVBE_F\000CMOVBE_Fp32\000CMOVB"
    "E_Fp64\000CMOVBE_Fp80\000CMOVB_F\000CMOVB_Fp32\000CMOVB_Fp64\000CMOVB_F"
    "p80\000CMOVE16rm\000CMOVE16rr\000CMOVE32rm\000CMOVE32rr\000CMOVE64rm\000"
    "CMOVE64rr\000CMOVE_F\000CMOVE_Fp32\000CMOVE_Fp64\000CMOVE_Fp80\000CMOVG"
    "16rm\000CMOVG16rr\000CMOVG32rm\000CMOVG32rr\000CMOVG64rm\000CMOVG64rr\000"
    "CMOVGE16rm\000CMOVGE16rr\000CMOVGE32rm\000CMOVGE32rr\000CMOVGE64rm\000C"
    "MOVGE64rr\000CMOVL16rm\000CMOVL16rr\000CMOVL32rm\000CMOVL32rr\000CMOVL6"
    "4rm\000CMOVL64rr\000CMOVLE16rm\000CMOVLE16rr\000CMOVLE32rm\000CMOVLE32r"
    "r\000CMOVLE64rm\000CMOVLE64rr\000CMOVNBE_F\000CMOVNBE_Fp32\000CMOVNBE_F"
    "p64\000CMOVNBE_Fp80\000CMOVNB_F\000CMOVNB_Fp32\000CMOVNB_Fp64\000CMOVNB"
    "_Fp80\000CMOVNE16rm\000CMOVNE16rr\000CMOVNE32rm\000CMOVNE32rr\000CMOVNE"
    "64rm\000CMOVNE64rr\000CMOVNE_F\000CMOVNE_Fp32\000CMOVNE_Fp64\000CMOVNE_"
    "Fp80\000CMOVNO16rm\000CMOVNO16rr\000CMOVNO32rm\000CMOVNO32rr\000CMOVNO6"
    "4rm\000CMOVNO64rr\000CMOVNP16rm\000CMOVNP16rr\000CMOVNP32rm\000CMOVNP32"
    "rr\000CMOVNP64rm\000CMOVNP64rr\000CMOVNP_F\000CMOVNP_Fp32\000CMOVNP_Fp6"
    "4\000CMOVNP_Fp80\000CMOVNS16rm\000CMOVNS16rr\000CMOVNS32rm\000CMOVNS32r"
    "r\000CMOVNS64rm\000CMOVNS64rr\000CMOVO16rm\000CMOVO16rr\000CMOVO32rm\000"
    "CMOVO32rr\000CMOVO64rm\000CMOVO64rr\000CMOVP16rm\000CMOVP16rr\000CMOVP3"
    "2rm\000CMOVP32rr\000CMOVP64rm\000CMOVP64rr\000CMOVP_F\000CMOVP_Fp32\000"
    "CMOVP_Fp64\000CMOVP_Fp80\000CMOVS16rm\000CMOVS16rr\000CMOVS32rm\000CMOV"
    "S32rr\000CMOVS64rm\000CMOVS64rr\000CMOV_FR32\000CMOV_FR64\000CMOV_GR16\000"
    "CMOV_GR32\000CMOV_GR8\000CMOV_RFP32\000CMOV_RFP64\000CMOV_RFP80\000CMOV"
    "_V2F64\000CMOV_V2I64\000CMOV_V4F32\000CMOV_V4F64\000CMOV_V4I64\000CMOV_"
    "V8F32\000CMP16i16\000CMP16mi\000CMP16mi8\000CMP16mr\000CMP16ri\000CMP16"
    "ri8\000CMP16rm\000CMP16rr\000CMP16rr_REV\000CMP32i32\000CMP32mi\000CMP3"
    "2mi8\000CMP32mr\000CMP32ri\000CMP32ri8\000CMP32rm\000CMP32rr\000CMP32rr"
    "_REV\000CMP64i32\000CMP64mi32\000CMP64mi8\000CMP64mr\000CMP64ri32\000CM"
    "P64ri8\000CMP64rm\000CMP64rr\000CMP64rr_REV\000CMP8i8\000CMP8mi\000CMP8"
    "mr\000CMP8ri\000CMP8rm\000CMP8rr\000CMP8rr_REV\000CMPPDrmi\000CMPPDrmi_"
    "alt\000CMPPDrri\000CMPPDrri_alt\000CMPPSrmi\000CMPPSrmi_alt\000CMPPSrri"
    "\000CMPPSrri_alt\000CMPS16\000CMPS32\000CMPS64\000CMPS8\000CMPSDrm\000C"
    "MPSDrm_alt\000CMPSDrr\000CMPSDrr_alt\000CMPSSrm\000CMPSSrm_alt\000CMPSS"
    "rr\000CMPSSrr_alt\000CMPXCHG16B\000CMPXCHG16rm\000CMPXCHG16rr\000CMPXCH"
    "G32rm\000CMPXCHG32rr\000CMPXCHG64rm\000CMPXCHG64rr\000CMPXCHG8B\000CMPX"
    "CHG8rm\000CMPXCHG8rr\000COMISDrm\000COMISDrr\000COMISSrm\000COMISSrr\000"
    "COMP_FST0r\000COM_FIPr\000COM_FIr\000COM_FST0r\000COS_F\000COS_Fp32\000"
    "COS_Fp64\000COS_Fp80\000CPUID\000CQO\000CRC32r32m16\000CRC32r32m32\000C"
    "RC32r32m8\000CRC32r32r16\000CRC32r32r32\000CRC32r32r8\000CRC32r64m64\000"
    "CRC32r64m8\000CRC32r64r64\000CRC32r64r8\000CS_PREFIX\000CVTDQ2PDrm\000C"
    "VTDQ2PDrr\000CVTDQ2PSrm\000CVTDQ2PSrr\000CVTPD2DQrm\000CVTPD2DQrr\000CV"
    "TPD2PSrm\000CVTPD2PSrr\000CVTPS2DQrm\000CVTPS2DQrr\000CVTPS2PDrm\000CVT"
    "PS2PDrr\000CVTSD2SI64rm\000CVTSD2SI64rr\000CVTSD2SIrm\000CVTSD2SIrr\000"
    "CVTSD2SSrm\000CVTSD2SSrr\000CVTSI2SD64rm\000CVTSI2SD64rr\000CVTSI2SDrm\000"
    "CVTSI2SDrr\000CVTSI2SS64rm\000CVTSI2SS64rr\000CVTSI2SSrm\000CVTSI2SSrr\000"
    "CVTSS2SDrm\000CVTSS2SDrr\000CVTSS2SI64rm\000CVTSS2SI64rr\000CVTSS2SIrm\000"
    "CVTSS2SIrr\000CVTTPD2DQrm\000CVTTPD2DQrr\000CVTTPS2DQrm\000CVTTPS2DQrr\000"
    "CVTTSD2SI64rm\000CVTTSD2SI64rr\000CVTTSD2SIrm\000CVTTSD2SIrr\000CVTTSS2"
    "SI64rm\000CVTTSS2SI64rr\000CVTTSS2SIrm\000CVTTSS2SIrr\000CWD\000CWDE\000"
    "DAA\000DAS\000DATA16_PREFIX\000DEC16m\000DEC16r\000DEC32m\000DEC32r\000"
    "DEC64_16m\000DEC64_16r\000DEC64_32m\000DEC64_32r\000DEC64m\000DEC64r\000"
    "DEC8m\000DEC8r\000DIV16m\000DIV16r\000DIV32m\000DIV32r\000DIV64m\000DIV"
    "64r\000DIV8m\000DIV8r\000DIVPDrm\000DIVPDrr\000DIVPSrm\000DIVPSrr\000DI"
    "VR_F32m\000DIVR_F64m\000DIVR_FI16m\000DIVR_FI32m\000DIVR_FPrST0\000DIVR"
    "_FST0r\000DIVR_Fp32m\000DIVR_Fp64m\000DIVR_Fp64m32\000DIVR_Fp80m32\000D"
    "IVR_Fp80m64\000DIVR_FpI16m32\000DIVR_FpI16m64\000DIVR_FpI16m80\000DIVR_"
    "FpI32m32\000DIVR_FpI32m64\000DIVR_FpI32m80\000DIVR_FrST0\000DIVSDrm\000"
    "DIVSDrm_Int\000DIVSDrr\000DIVSDrr_Int\000DIVSSrm\000DIVSSrm_Int\000DIVS"
    "Srr\000DIVSSrr_Int\000DIV_F32m\000DIV_F64m\000DIV_FI16m\000DIV_FI32m\000"
    "DIV_FPrST0\000DIV_FST0r\000DIV_Fp32\000DIV_Fp32m\000DIV_Fp64\000DIV_Fp6"
    "4m\000DIV_Fp64m32\000DIV_Fp80\000DIV_Fp80m32\000DIV_Fp80m64\000DIV_FpI1"
    "6m32\000DIV_FpI16m64\000DIV_FpI16m80\000DIV_FpI32m32\000DIV_FpI32m64\000"
    "DIV_FpI32m80\000DIV_FrST0\000DPPDrmi\000DPPDrri\000DPPSrmi\000DPPSrri\000"
    "DS_PREFIX\000EH_RETURN\000EH_RETURN64\000ENTER\000ES_PREFIX\000EXTRACTP"
    "Smr\000EXTRACTPSrr\000F2XM1\000FARCALL16i\000FARCALL16m\000FARCALL32i\000"
    "FARCALL32m\000FARCALL64\000FARJMP16i\000FARJMP16m\000FARJMP32i\000FARJM"
    "P32m\000FARJMP64\000FBLDm\000FBSTPm\000FCOM32m\000FCOM64m\000FCOMP32m\000"
    "FCOMP64m\000FCOMPP\000FDECSTP\000FEMMS\000FFREE\000FICOM16m\000FICOM32m"
    "\000FICOMP16m\000FICOMP32m\000FINCSTP\000FLDCW16m\000FLDENVm\000FLDL2E\000"
    "FLDL2T\000FLDLG2\000FLDLN2\000FLDPI\000FNCLEX\000FNINIT\000FNOP\000FNST"
    "CW16m\000FNSTSW8r\000FNSTSWm\000FP32_TO_INT16_IN_MEM\000FP32_TO_INT32_I"
    "N_MEM\000FP32_TO_INT64_IN_MEM\000FP64_TO_INT16_IN_MEM\000FP64_TO_INT32_"
    "IN_MEM\000FP64_TO_INT64_IN_MEM\000FP80_TO_INT16_IN_MEM\000FP80_TO_INT32"
    "_IN_MEM\000FP80_TO_INT64_IN_MEM\000FPATAN\000FPREM\000FPREM1\000FPTAN\000"
    "FRNDINT\000FRSTORm\000FSAVEm\000FSCALE\000FSINCOS\000FSTENVm\000FS_PREF"
    "IX\000FXAM\000FXRSTOR\000FXRSTOR64\000FXSAVE\000FXSAVE64\000FXTRACT\000"
    "FYL2X\000FYL2XP1\000FpPOP_RETVAL\000FsANDNPDrm\000FsANDNPDrr\000FsANDNP"
    "Srm\000FsANDNPSrr\000FsANDPDrm\000FsANDPDrr\000FsANDPSrm\000FsANDPSrr\000"
    "FsFLD0SD\000FsFLD0SS\000FsMOVAPDrm\000FsMOVAPDrr\000FsMOVAPSrm\000FsMOV"
    "APSrr\000FsORPDrm\000FsORPDrr\000FsORPSrm\000FsORPSrr\000FsVMOVAPDrm\000"
    "FsVMOVAPDrr\000FsVMOVAPSrm\000FsVMOVAPSrr\000FsXORPDrm\000FsXORPDrr\000"
    "FsXORPSrm\000FsXORPSrr\000GS_PREFIX\000HADDPDrm\000HADDPDrr\000HADDPSrm"
    "\000HADDPSrr\000HLT\000HSUBPDrm\000HSUBPDrr\000HSUBPSrm\000HSUBPSrr\000"
    "IDIV16m\000IDIV16r\000IDIV32m\000IDIV32r\000IDIV64m\000IDIV64r\000IDIV8"
    "m\000IDIV8r\000ILD_F16m\000ILD_F32m\000ILD_F64m\000ILD_Fp16m32\000ILD_F"
    "p16m64\000ILD_Fp16m80\000ILD_Fp32m32\000ILD_Fp32m64\000ILD_Fp32m80\000I"
    "LD_Fp64m32\000ILD_Fp64m64\000ILD_Fp64m80\000IMUL16m\000IMUL16r\000IMUL1"
    "6rm\000IMUL16rmi\000IMUL16rmi8\000IMUL16rr\000IMUL16rri\000IMUL16rri8\000"
    "IMUL32m\000IMUL32r\000IMUL32rm\000IMUL32rmi\000IMUL32rmi8\000IMUL32rr\000"
    "IMUL32rri\000IMUL32rri8\000IMUL64m\000IMUL64r\000IMUL64rm\000IMUL64rmi3"
    "2\000IMUL64rmi8\000IMUL64rr\000IMUL64rri32\000IMUL64rri8\000IMUL8m\000I"
    "MUL8r\000IN16\000IN16ri\000IN16rr\000IN32\000IN32ri\000IN32rr\000IN8\000"
    "IN8ri\000IN8rr\000INC16m\000INC16r\000INC32m\000INC32r\000INC64_16m\000"
    "INC64_16r\000INC64_32m\000INC64_32r\000INC64m\000INC64r\000INC8m\000INC"
    "8r\000INSERTPSrm\000INSERTPSrr\000INT\000INT3\000INTO\000INVD\000INVEPT"
    "32\000INVEPT64\000INVLPG\000INVPCID32\000INVPCID64\000INVVPID32\000INVV"
    "PID64\000IRET16\000IRET32\000IRET64\000ISTT_FP16m\000ISTT_FP32m\000ISTT"
    "_FP64m\000ISTT_Fp16m32\000ISTT_Fp16m64\000ISTT_Fp16m80\000ISTT_Fp32m32\000"
    "ISTT_Fp32m64\000ISTT_Fp32m80\000ISTT_Fp64m32\000ISTT_Fp64m64\000ISTT_Fp"
    "64m80\000IST_F16m\000IST_F32m\000IST_FP16m\000IST_FP32m\000IST_FP64m\000"
    "IST_Fp16m32\000IST_Fp16m64\000IST_Fp16m80\000IST_Fp32m32\000IST_Fp32m64"
    "\000IST_Fp32m80\000IST_Fp64m32\000IST_Fp64m64\000IST_Fp64m80\000Int_CMP"
    "SDrm\000Int_CMPSDrr\000Int_CMPSSrm\000Int_CMPSSrr\000Int_COMISDrm\000In"
    "t_COMISDrr\000Int_COMISSrm\000Int_COMISSrr\000Int_CVTDQ2PDrm\000Int_CVT"
    "DQ2PDrr\000Int_CVTDQ2PSrm\000Int_CVTDQ2PSrr\000Int_CVTPD2DQrm\000Int_CV"
    "TPD2DQrr\000Int_CVTPD2PSrm\000Int_CVTPD2PSrr\000Int_CVTPS2DQrm\000Int_C"
    "VTPS2DQrr\000Int_CVTPS2PDrm\000Int_CVTPS2PDrr\000Int_CVTSD2SSrm\000Int_"
    "CVTSD2SSrr\000Int_CVTSI2SD64rm\000Int_CVTSI2SD64rr\000Int_CVTSI2SDrm\000"
    "Int_CVTSI2SDrr\000Int_CVTSI2SS64rm\000Int_CVTSI2SS64rr\000Int_CVTSI2SSr"
    "m\000Int_CVTSI2SSrr\000Int_CVTSS2SDrm\000Int_CVTSS2SDrr\000Int_CVTTSD2S"
    "I64rm\000Int_CVTTSD2SI64rr\000Int_CVTTSD2SIrm\000Int_CVTTSD2SIrr\000Int"
    "_CVTTSS2SI64rm\000Int_CVTTSS2SI64rr\000Int_CVTTSS2SIrm\000Int_CVTTSS2SI"
    "rr\000Int_MemBarrier\000Int_UCOMISDrm\000Int_UCOMISDrr\000Int_UCOMISSrm"
    "\000Int_UCOMISSrr\000Int_VCMPSDrm\000Int_VCMPSDrr\000Int_VCMPSSrm\000In"
    "t_VCMPSSrr\000Int_VCOMISDrm\000Int_VCOMISDrr\000Int_VCOMISSrm\000Int_VC"
    "OMISSrr\000Int_VCVTDQ2PDrm\000Int_VCVTDQ2PDrr\000Int_VCVTDQ2PSrm\000Int"
    "_VCVTDQ2PSrr\000Int_VCVTPD2DQrm\000Int_VCVTPD2DQrr\000Int_VCVTPD2PSrm\000"
    "Int_VCVTPD2PSrr\000Int_VCVTPS2DQrm\000Int_VCVTPS2DQrr\000Int_VCVTPS2PDr"
    "m\000Int_VCVTPS2PDrr\000Int_VCVTSD2SI64rm\000Int_VCVTSD2SI64rr\000Int_V"
    "CVTSD2SIrm\000Int_VCVTSD2SIrr\000Int_VCVTSD2SSrm\000Int_VCVTSD2SSrr\000"
    "Int_VCVTSI2SD64rm\000Int_VCVTSI2SD64rr\000Int_VCVTSI2SDrm\000Int_VCVTSI"
    "2SDrr\000Int_VCVTSI2SS64rm\000Int_VCVTSI2SS64rr\000Int_VCVTSI2SSrm\000I"
    "nt_VCVTSI2SSrr\000Int_VCVTSS2SDrm\000Int_VCVTSS2SDrr\000Int_VCVTTSD2SI6"
    "4rm\000Int_VCVTTSD2SI64rr\000Int_VCVTTSD2SIrm\000Int_VCVTTSD2SIrr\000In"
    "t_VCVTTSS2SI64rm\000Int_VCVTTSS2SI64rr\000Int_VCVTTSS2SIrm\000Int_VCVTT"
    "SS2SIrr\000Int_VUCOMISDrm\000Int_VUCOMISDrr\000Int_VUCOMISSrm\000Int_VU"
    "COMISSrr\000JAE_1\000JAE_4\000JA_1\000JA_4\000JBE_1\000JBE_4\000JB_1\000"
    "JB_4\000JCXZ\000JECXZ_32\000JECXZ_64\000JE_1\000JE_4\000JGE_1\000JGE_4\000"
    "JG_1\000JG_4\000JLE_1\000JLE_4\000JL_1\000JL_4\000JMP32m\000JMP32r\000J"
    "MP64m\000JMP64pcrel32\000JMP64r\000JMP_1\000JMP_4\000JNE_1\000JNE_4\000"
    "JNO_1\000JNO_4\000JNP_1\000JNP_4\000JNS_1\000JNS_4\000JO_1\000JO_4\000J"
    "P_1\000JP_4\000JRCXZ\000JS_1\000JS_4\000LAHF\000LAR16rm\000LAR16rr\000L"
    "AR32rm\000LAR32rr\000LAR64rm\000LAR64rr\000LCMPXCHG16\000LCMPXCHG16B\000"
    "LCMPXCHG32\000LCMPXCHG64\000LCMPXCHG8\000LCMPXCHG8B\000LDDQUrm\000LDMXC"
    "SR\000LDS16rm\000LDS32rm\000LD_F0\000LD_F1\000LD_F32m\000LD_F64m\000LD_"
    "F80m\000LD_Fp032\000LD_Fp064\000LD_Fp080\000LD_Fp132\000LD_Fp164\000LD_"
    "Fp180\000LD_Fp32m\000LD_Fp32m64\000LD_Fp32m80\000LD_Fp64m\000LD_Fp64m80"
    "\000LD_Fp80m\000LD_Frr\000LEA16r\000LEA32r\000LEA64_32r\000LEA64r\000LE"
    "AVE\000LEAVE64\000LES16rm\000LES32rm\000LFENCE\000LFS16rm\000LFS32rm\000"
    "LFS64rm\000LGDT16m\000LGDTm\000LGS16rm\000LGS32rm\000LGS64rm\000LIDT16m"
    "\000LIDTm\000LLDT16m\000LLDT16r\000LMSW16m\000LMSW16r\000LOCK_ADD16mi\000"
    "LOCK_ADD16mi8\000LOCK_ADD16mr\000LOCK_ADD32mi\000LOCK_ADD32mi8\000LOCK_"
    "ADD32mr\000LOCK_ADD64mi32\000LOCK_ADD64mi8\000LOCK_ADD64mr\000LOCK_ADD8"
    "mi\000LOCK_ADD8mr\000LOCK_AND16mi\000LOCK_AND16mi8\000LOCK_AND16mr\000L"
    "OCK_AND32mi\000LOCK_AND32mi8\000LOCK_AND32mr\000LOCK_AND64mi32\000LOCK_"
    "AND64mi8\000LOCK_AND64mr\000LOCK_AND8mi\000LOCK_AND8mr\000LOCK_DEC16m\000"
    "LOCK_DEC32m\000LOCK_DEC64m\000LOCK_DEC8m\000LOCK_INC16m\000LOCK_INC32m\000"
    "LOCK_INC64m\000LOCK_INC8m\000LOCK_OR16mi\000LOCK_OR16mi8\000LOCK_OR16mr"
    "\000LOCK_OR32mi\000LOCK_OR32mi8\000LOCK_OR32mr\000LOCK_OR64mi32\000LOCK"
    "_OR64mi8\000LOCK_OR64mr\000LOCK_OR8mi\000LOCK_OR8mr\000LOCK_PREFIX\000L"
    "OCK_SUB16mi\000LOCK_SUB16mi8\000LOCK_SUB16mr\000LOCK_SUB32mi\000LOCK_SU"
    "B32mi8\000LOCK_SUB32mr\000LOCK_SUB64mi32\000LOCK_SUB64mi8\000LOCK_SUB64"
    "mr\000LOCK_SUB8mi\000LOCK_SUB8mr\000LOCK_XOR16mi\000LOCK_XOR16mi8\000LO"
    "CK_XOR16mr\000LOCK_XOR32mi\000LOCK_XOR32mi8\000LOCK_XOR32mr\000LOCK_XOR"
    "64mi32\000LOCK_XOR64mi8\000LOCK_XOR64mr\000LOCK_XOR8mi\000LOCK_XOR8mr\000"
    "LODSB\000LODSD\000LODSQ\000LODSW\000LOOP\000LOOPE\000LOOPNE\000LRETI\000"
    "LRETIW\000LRETL\000LRETQ\000LSL16rm\000LSL16rr\000LSL32rm\000LSL32rr\000"
    "LSL64rm\000LSL64rr\000LSS16rm\000LSS32rm\000LSS64rm\000LTRm\000LTRr\000"
    "LXADD16\000LXADD32\000LXADD64\000LXADD8\000LZCNT16rm\000LZCNT16rr\000LZ"
    "CNT32rm\000LZCNT32rr\000LZCNT64rm\000LZCNT64rr\000MASKMOVDQU\000MASKMOV"
    "DQU64\000MAXPDrm\000MAXPDrm_Int\000MAXPDrr\000MAXPDrr_Int\000MAXPSrm\000"
    "MAXPSrm_Int\000MAXPSrr\000MAXPSrr_Int\000MAXSDrm\000MAXSDrm_Int\000MAXS"
    "Drr\000MAXSDrr_Int\000MAXSSrm\000MAXSSrm_Int\000MAXSSrr\000MAXSSrr_Int\000"
    "MFENCE\000MINPDrm\000MINPDrm_Int\000MINPDrr\000MINPDrr_Int\000MINPSrm\000"
    "MINPSrm_Int\000MINPSrr\000MINPSrr_Int\000MINSDrm\000MINSDrm_Int\000MINS"
    "Drr\000MINSDrr_Int\000MINSSrm\000MINSSrm_Int\000MINSSrr\000MINSSrr_Int\000"
    "MMX_CVTPD2PIirm\000MMX_CVTPD2PIirr\000MMX_CVTPI2PDirm\000MMX_CVTPI2PDir"
    "r\000MMX_CVTPI2PSirm\000MMX_CVTPI2PSirr\000MMX_CVTPS2PIirm\000MMX_CVTPS"
    "2PIirr\000MMX_CVTTPD2PIirm\000MMX_CVTTPD2PIirr\000MMX_CVTTPS2PIirm\000M"
    "MX_CVTTPS2PIirr\000MMX_EMMS\000MMX_MASKMOVQ\000MMX_MASKMOVQ64\000MMX_MO"
    "VD64from64rr\000MMX_MOVD64grr\000MMX_MOVD64mr\000MMX_MOVD64rm\000MMX_MO"
    "VD64rr\000MMX_MOVD64rrv164\000MMX_MOVD64to64rr\000MMX_MOVDQ2Qrr\000MMX_"
    "MOVFR642Qrr\000MMX_MOVNTQmr\000MMX_MOVQ2DQrr\000MMX_MOVQ2FR64rr\000MMX_"
    "MOVQ64mr\000MMX_MOVQ64rm\000MMX_MOVQ64rr\000MMX_MOVZDI2PDIrm\000MMX_MOV"
    "ZDI2PDIrr\000MMX_PABSBrm64\000MMX_PABSBrr64\000MMX_PABSDrm64\000MMX_PAB"
    "SDrr64\000MMX_PABSWrm64\000MMX_PABSWrr64\000MMX_PACKSSDWirm\000MMX_PACK"
    "SSDWirr\000MMX_PACKSSWBirm\000MMX_PACKSSWBirr\000MMX_PACKUSWBirm\000MMX"
    "_PACKUSWBirr\000MMX_PADDBirm\000MMX_PADDBirr\000MMX_PADDDirm\000MMX_PAD"
    "DDirr\000MMX_PADDQirm\000MMX_PADDQirr\000MMX_PADDSBirm\000MMX_PADDSBirr"
    "\000MMX_PADDSWirm\000MMX_PADDSWirr\000MMX_PADDUSBirm\000MMX_PADDUSBirr\000"
    "MMX_PADDUSWirm\000MMX_PADDUSWirr\000MMX_PADDWirm\000MMX_PADDWirr\000MMX"
    "_PALIGNR64irm\000MMX_PALIGNR64irr\000MMX_PANDNirm\000MMX_PANDNirr\000MM"
    "X_PANDirm\000MMX_PANDirr\000MMX_PAVGBirm\000MMX_PAVGBirr\000MMX_PAVGWir"
    "m\000MMX_PAVGWirr\000MMX_PCMPEQBirm\000MMX_PCMPEQBirr\000MMX_PCMPEQDirm"
    "\000MMX_PCMPEQDirr\000MMX_PCMPEQWirm\000MMX_PCMPEQWirr\000MMX_PCMPGTBir"
    "m\000MMX_PCMPGTBirr\000MMX_PCMPGTDirm\000MMX_PCMPGTDirr\000MMX_PCMPGTWi"
    "rm\000MMX_PCMPGTWirr\000MMX_PEXTRWirri\000MMX_PHADDSWrm64\000MMX_PHADDS"
    "Wrr64\000MMX_PHADDWrm64\000MMX_PHADDWrr64\000MMX_PHADDrm64\000MMX_PHADD"
    "rr64\000MMX_PHSUBDrm64\000MMX_PHSUBDrr64\000MMX_PHSUBSWrm64\000MMX_PHSU"
    "BSWrr64\000MMX_PHSUBWrm64\000MMX_PHSUBWrr64\000MMX_PINSRWirmi\000MMX_PI"
    "NSRWirri\000MMX_PMADDUBSWrm64\000MMX_PMADDUBSWrr64\000MMX_PMADDWDirm\000"
    "MMX_PMADDWDirr\000MMX_PMAXSWirm\000MMX_PMAXSWirr\000MMX_PMAXUBirm\000MM"
    "X_PMAXUBirr\000MMX_PMINSWirm\000MMX_PMINSWirr\000MMX_PMINUBirm\000MMX_P"
    "MINUBirr\000MMX_PMOVMSKBrr\000MMX_PMULHRSWrm64\000MMX_PMULHRSWrr64\000M"
    "MX_PMULHUWirm\000MMX_PMULHUWirr\000MMX_PMULHWirm\000MMX_PMULHWirr\000MM"
    "X_PMULLWirm\000MMX_PMULLWirr\000MMX_PMULUDQirm\000MMX_PMULUDQirr\000MMX"
    "_PORirm\000MMX_PORirr\000MMX_PSADBWirm\000MMX_PSADBWirr\000MMX_PSHUFBrm"
    "64\000MMX_PSHUFBrr64\000MMX_PSHUFWmi\000MMX_PSHUFWri\000MMX_PSIGNBrm64\000"
    "MMX_PSIGNBrr64\000MMX_PSIGNDrm64\000MMX_PSIGNDrr64\000MMX_PSIGNWrm64\000"
    "MMX_PSIGNWrr64\000MMX_PSLLDri\000MMX_PSLLDrm\000MMX_PSLLDrr\000MMX_PSLL"
    "Qri\000MMX_PSLLQrm\000MMX_PSLLQrr\000MMX_PSLLWri\000MMX_PSLLWrm\000MMX_"
    "PSLLWrr\000MMX_PSRADri\000MMX_PSRADrm\000MMX_PSRADrr\000MMX_PSRAWri\000"
    "MMX_PSRAWrm\000MMX_PSRAWrr\000MMX_PSRLDri\000MMX_PSRLDrm\000MMX_PSRLDrr"
    "\000MMX_PSRLQri\000MMX_PSRLQrm\000MMX_PSRLQrr\000MMX_PSRLWri\000MMX_PSR"
    "LWrm\000MMX_PSRLWrr\000MMX_PSUBBirm\000MMX_PSUBBirr\000MMX_PSUBDirm\000"
    "MMX_PSUBDirr\000MMX_PSUBQirm\000MMX_PSUBQirr\000MMX_PSUBSBirm\000MMX_PS"
    "UBSBirr\000MMX_PSUBSWirm\000MMX_PSUBSWirr\000MMX_PSUBUSBirm\000MMX_PSUB"
    "USBirr\000MMX_PSUBUSWirm\000MMX_PSUBUSWirr\000MMX_PSUBWirm\000MMX_PSUBW"
    "irr\000MMX_PUNPCKHBWirm\000MMX_PUNPCKHBWirr\000MMX_PUNPCKHDQirm\000MMX_"
    "PUNPCKHDQirr\000MMX_PUNPCKHWDirm\000MMX_PUNPCKHWDirr\000MMX_PUNPCKLBWir"
    "m\000MMX_PUNPCKLBWirr\000MMX_PUNPCKLDQirm\000MMX_PUNPCKLDQirr\000MMX_PU"
    "NPCKLWDirm\000MMX_PUNPCKLWDirr\000MMX_PXORirm\000MMX_PXORirr\000MONITOR"
    "\000MONITORrrr\000MONTMUL\000MORESTACK_RET\000MORESTACK_RET_RESTORE_R10"
    "\000MOV16ao16\000MOV16mi\000MOV16mr\000MOV16ms\000MOV16o16a\000MOV16r0\000"
    "MOV16ri\000MOV16rm\000MOV16rr\000MOV16rr_REV\000MOV16rs\000MOV16sm\000M"
    "OV16sr\000MOV32ao32\000MOV32cr\000MOV32dr\000MOV32mi\000MOV32mr\000MOV3"
    "2ms\000MOV32o32a\000MOV32r0\000MOV32rc\000MOV32rd\000MOV32ri\000MOV32rm"
    "\000MOV32rr\000MOV32rr_REV\000MOV32rs\000MOV32sm\000MOV32sr\000MOV64cr\000"
    "MOV64dr\000MOV64mi32\000MOV64mr\000MOV64ms\000MOV64r0\000MOV64rc\000MOV"
    "64rd\000MOV64ri\000MOV64ri32\000MOV64ri64i32\000MOV64rm\000MOV64rr\000M"
    "OV64rr_REV\000MOV64rs\000MOV64sm\000MOV64sr\000MOV64toPQIrr\000MOV64toS"
    "Drm\000MOV64toSDrr\000MOV8ao8\000MOV8mi\000MOV8mr\000MOV8mr_NOREX\000MO"
    "V8o8a\000MOV8r0\000MOV8ri\000MOV8rm\000MOV8rm_NOREX\000MOV8rr\000MOV8rr"
    "_NOREX\000MOV8rr_REV\000MOVAPDmr\000MOVAPDrm\000MOVAPDrr\000MOVAPDrr_RE"
    "V\000MOVAPSmr\000MOVAPSrm\000MOVAPSrr\000MOVAPSrr_REV\000MOVBE16mr\000M"
    "OVBE16rm\000MOVBE32mr\000MOVBE32rm\000MOVBE64mr\000MOVBE64rm\000MOVDDUP"
    "rm\000MOVDDUPrr\000MOVDI2PDIrm\000MOVDI2PDIrr\000MOVDI2SSrm\000MOVDI2SS"
    "rr\000MOVDQAmr\000MOVDQArm\000MOVDQArr\000MOVDQArr_REV\000MOVDQUmr\000M"
    "OVDQUmr_Int\000MOVDQUrm\000MOVDQUrr\000MOVDQUrr_REV\000MOVHLPSrr\000MOV"
    "HPDmr\000MOVHPDrm\000MOVHPSmr\000MOVHPSrm\000MOVLHPSrr\000MOVLPDmr\000M"
    "OVLPDrm\000MOVLPSmr\000MOVLPSrm\000MOVLQ128mr\000MOVMSKPDrr32\000MOVMSK"
    "PDrr64\000MOVMSKPSrr32\000MOVMSKPSrr64\000MOVNTDQArm\000MOVNTDQmr\000MO"
    "VNTI_64mr\000MOVNTImr\000MOVNTPDmr\000MOVNTPSmr\000MOVPC32r\000MOVPDI2D"
    "Imr\000MOVPDI2DIrr\000MOVPQI2QImr\000MOVPQIto64rr\000MOVQI2PQIrm\000MOV"
    "Qxrxr\000MOVSB\000MOVSD\000MOVSDmr\000MOVSDrm\000MOVSDrr\000MOVSDrr_REV"
    "\000MOVSDto64mr\000MOVSDto64rr\000MOVSHDUPrm\000MOVSHDUPrr\000MOVSLDUPr"
    "m\000MOVSLDUPrr\000MOVSQ\000MOVSS2DImr\000MOVSS2DIrr\000MOVSSmr\000MOVS"
    "Srm\000MOVSSrr\000MOVSSrr_REV\000MOVSW\000MOVSX16rm8\000MOVSX16rr8\000M"
    "OVSX32rm16\000MOVSX32rm8\000MOVSX32rr16\000MOVSX32rr8\000MOVSX64rm16\000"
    "MOVSX64rm32\000MOVSX64rm8\000MOVSX64rr16\000MOVSX64rr32\000MOVSX64rr8\000"
    "MOVUPDmr\000MOVUPDrm\000MOVUPDrr\000MOVUPDrr_REV\000MOVUPSmr\000MOVUPSr"
    "m\000MOVUPSrr\000MOVUPSrr_REV\000MOVZDI2PDIrm\000MOVZDI2PDIrr\000MOVZPQ"
    "ILo2PQIrm\000MOVZPQILo2PQIrr\000MOVZQI2PQIrm\000MOVZQI2PQIrr\000MOVZX16"
    "rm8\000MOVZX16rr8\000MOVZX32_NOREXrm8\000MOVZX32_NOREXrr8\000MOVZX32rm1"
    "6\000MOVZX32rm8\000MOVZX32rr16\000MOVZX32rr8\000MOVZX64rm16\000MOVZX64r"
    "m16_Q\000MOVZX64rm32\000MOVZX64rm8\000MOVZX64rm8_Q\000MOVZX64rr16\000MO"
    "VZX64rr16_Q\000MOVZX64rr32\000MOVZX64rr8\000MOVZX64rr8_Q\000MPSADBWrmi\000"
    "MPSADBWrri\000MUL16m\000MUL16r\000MUL32m\000MUL32r\000MUL64m\000MUL64r\000"
    "MUL8m\000MUL8r\000MULPDrm\000MULPDrr\000MULPSrm\000MULPSrr\000MULSDrm\000"
    "MULSDrm_Int\000MULSDrr\000MULSDrr_Int\000MULSSrm\000MULSSrm_Int\000MULS"
    "Srr\000MULSSrr_Int\000MULX32rm\000MULX32rr\000MULX64rm\000MULX64rr\000M"
    "UL_F32m\000MUL_F64m\000MUL_FI16m\000MUL_FI32m\000MUL_FPrST0\000MUL_FST0"
    "r\000MUL_Fp32\000MUL_Fp32m\000MUL_Fp64\000MUL_Fp64m\000MUL_Fp64m32\000M"
    "UL_Fp80\000MUL_Fp80m32\000MUL_Fp80m64\000MUL_FpI16m32\000MUL_FpI16m64\000"
    "MUL_FpI16m80\000MUL_FpI32m32\000MUL_FpI32m64\000MUL_FpI32m80\000MUL_FrS"
    "T0\000MWAIT\000MWAITrr\000NEG16m\000NEG16r\000NEG32m\000NEG32r\000NEG64"
    "m\000NEG64r\000NEG8m\000NEG8r\000NOOP\000NOOPL\000NOOPW\000NOT16m\000NO"
    "T16r\000NOT32m\000NOT32r\000NOT64m\000NOT64r\000NOT8m\000NOT8r\000OR16i"
    "16\000OR16mi\000OR16mi8\000OR16mr\000OR16ri\000OR16ri8\000OR16rm\000OR1"
    "6rr\000OR16rr_REV\000OR32i32\000OR32mi\000OR32mi8\000OR32mr\000OR32mrLo"
    "cked\000OR32ri\000OR32ri8\000OR32rm\000OR32rr\000OR32rr_REV\000OR64i32\000"
    "OR64mi32\000OR64mi8\000OR64mr\000OR64ri32\000OR64ri8\000OR64rm\000OR64r"
    "r\000OR64rr_REV\000OR8i8\000OR8mi\000OR8mr\000OR8ri\000OR8rm\000OR8rr\000"
    "OR8rr_REV\000ORPDrm\000ORPDrr\000ORPSrm\000ORPSrr\000OUT16ir\000OUT16rr"
    "\000OUT32ir\000OUT32rr\000OUT8ir\000OUT8rr\000OUTSB\000OUTSD\000OUTSW\000"
    "PABSBrm128\000PABSBrr128\000PABSDrm128\000PABSDrr128\000PABSWrm128\000P"
    "ABSWrr128\000PACKSSDWrm\000PACKSSDWrr\000PACKSSWBrm\000PACKSSWBrr\000PA"
    "CKUSDWrm\000PACKUSDWrr\000PACKUSWBrm\000PACKUSWBrr\000PADDBrm\000PADDBr"
    "r\000PADDDrm\000PADDDrr\000PADDQrm\000PADDQrr\000PADDSBrm\000PADDSBrr\000"
    "PADDSWrm\000PADDSWrr\000PADDUSBrm\000PADDUSBrr\000PADDUSWrm\000PADDUSWr"
    "r\000PADDWrm\000PADDWrr\000PALIGNR128rm\000PALIGNR128rr\000PANDNrm\000P"
    "ANDNrr\000PANDrm\000PANDrr\000PAUSE\000PAVGBrm\000PAVGBrr\000PAVGUSBrm\000"
    "PAVGUSBrr\000PAVGWrm\000PAVGWrr\000PBLENDVBrm0\000PBLENDVBrr0\000PBLEND"
    "Wrmi\000PBLENDWrri\000PCLMULQDQrm\000PCLMULQDQrr\000PCMPEQBrm\000PCMPEQ"
    "Brr\000PCMPEQDrm\000PCMPEQDrr\000PCMPEQQrm\000PCMPEQQrr\000PCMPEQWrm\000"
    "PCMPEQWrr\000PCMPESTRIArm\000PCMPESTRIArr\000PCMPESTRICrm\000PCMPESTRIC"
    "rr\000PCMPESTRIOrm\000PCMPESTRIOrr\000PCMPESTRISrm\000PCMPESTRISrr\000P"
    "CMPESTRIZrm\000PCMPESTRIZrr\000PCMPESTRIrm\000PCMPESTRIrr\000PCMPESTRM1"
    "28MEM\000PCMPESTRM128REG\000PCMPESTRM128rm\000PCMPESTRM128rr\000PCMPGTB"
    "rm\000PCMPGTBrr\000PCMPGTDrm\000PCMPGTDrr\000PCMPGTQrm\000PCMPGTQrr\000"
    "PCMPGTWrm\000PCMPGTWrr\000PCMPISTRIArm\000PCMPISTRIArr\000PCMPISTRICrm\000"
    "PCMPISTRICrr\000PCMPISTRIOrm\000PCMPISTRIOrr\000PCMPISTRISrm\000PCMPIST"
    "RISrr\000PCMPISTRIZrm\000PCMPISTRIZrr\000PCMPISTRIrm\000PCMPISTRIrr\000"
    "PCMPISTRM128MEM\000PCMPISTRM128REG\000PCMPISTRM128rm\000PCMPISTRM128rr\000"
    "PDEP32rm\000PDEP32rr\000PDEP64rm\000PDEP64rr\000PEXT32rm\000PEXT32rr\000"
    "PEXT64rm\000PEXT64rr\000PEXTRBmr\000PEXTRBrr\000PEXTRDmr\000PEXTRDrr\000"
    "PEXTRQmr\000PEXTRQrr\000PEXTRWmr\000PEXTRWri\000PF2IDrm\000PF2IDrr\000P"
    "F2IWrm\000PF2IWrr\000PFACCrm\000PFACCrr\000PFADDrm\000PFADDrr\000PFCMPE"
    "Qrm\000PFCMPEQrr\000PFCMPGErm\000PFCMPGErr\000PFCMPGTrm\000PFCMPGTrr\000"
    "PFMAXrm\000PFMAXrr\000PFMINrm\000PFMINrr\000PFMULrm\000PFMULrr\000PFNAC"
    "Crm\000PFNACCrr\000PFPNACCrm\000PFPNACCrr\000PFRCPIT1rm\000PFRCPIT1rr\000"
    "PFRCPIT2rm\000PFRCPIT2rr\000PFRCPrm\000PFRCPrr\000PFRSQIT1rm\000PFRSQIT"
    "1rr\000PFRSQRTrm\000PFRSQRTrr\000PFSUBRrm\000PFSUBRrr\000PFSUBrm\000PFS"
    "UBrr\000PHADDDrm128\000PHADDDrr128\000PHADDSWrm128\000PHADDSWrr128\000P"
    "HADDWrm128\000PHADDWrr128\000PHMINPOSUWrm128\000PHMINPOSUWrr128\000PHSU"
    "BDrm128\000PHSUBDrr128\000PHSUBSWrm128\000PHSUBSWrr128\000PHSUBWrm128\000"
    "PHSUBWrr128\000PI2FDrm\000PI2FDrr\000PI2FWrm\000PI2FWrr\000PINSRBrm\000"
    "PINSRBrr\000PINSRDrm\000PINSRDrr\000PINSRQrm\000PINSRQrr\000PINSRWrmi\000"
    "PINSRWrri\000PMADDUBSWrm128\000PMADDUBSWrr128\000PMADDWDrm\000PMADDWDrr"
    "\000PMAXSBrm\000PMAXSBrr\000PMAXSDrm\000PMAXSDrr\000PMAXSWrm\000PMAXSWr"
    "r\000PMAXUBrm\000PMAXUBrr\000PMAXUDrm\000PMAXUDrr\000PMAXUWrm\000PMAXUW"
    "rr\000PMINSBrm\000PMINSBrr\000PMINSDrm\000PMINSDrr\000PMINSWrm\000PMINS"
    "Wrr\000PMINUBrm\000PMINUBrr\000PMINUDrm\000PMINUDrr\000PMINUWrm\000PMIN"
    "UWrr\000PMOVMSKBrr\000PMOVSXBDrm\000PMOVSXBDrr\000PMOVSXBQrm\000PMOVSXB"
    "Qrr\000PMOVSXBWrm\000PMOVSXBWrr\000PMOVSXDQrm\000PMOVSXDQrr\000PMOVSXWD"
    "rm\000PMOVSXWDrr\000PMOVSXWQrm\000PMOVSXWQrr\000PMOVZXBDrm\000PMOVZXBDr"
    "r\000PMOVZXBQrm\000PMOVZXBQrr\000PMOVZXBWrm\000PMOVZXBWrr\000PMOVZXDQrm"
    "\000PMOVZXDQrr\000PMOVZXWDrm\000PMOVZXWDrr\000PMOVZXWQrm\000PMOVZXWQrr\000"
    "PMULDQrm\000PMULDQrr\000PMULHRSWrm128\000PMULHRSWrr128\000PMULHRWrm\000"
    "PMULHRWrr\000PMULHUWrm\000PMULHUWrr\000PMULHWrm\000PMULHWrr\000PMULLDrm"
    "\000PMULLDrr\000PMULLWrm\000PMULLWrr\000PMULUDQrm\000PMULUDQrr\000POP16"
    "r\000POP16rmm\000POP16rmr\000POP32r\000POP32rmm\000POP32rmr\000POP64r\000"
    "POP64rmm\000POP64rmr\000POPA32\000POPCNT16rm\000POPCNT16rr\000POPCNT32r"
    "m\000POPCNT32rr\000POPCNT64rm\000POPCNT64rr\000POPDS16\000POPDS32\000PO"
    "PES16\000POPES32\000POPF16\000POPF32\000POPF64\000POPFS16\000POPFS32\000"
    "POPFS64\000POPGS16\000POPGS32\000POPGS64\000POPSS16\000POPSS32\000PORrm"
    "\000PORrr\000PREFETCH\000PREFETCHNTA\000PREFETCHT0\000PREFETCHT1\000PRE"
    "FETCHT2\000PREFETCHW\000PSADBWrm\000PSADBWrr\000PSHUFBrm128\000PSHUFBrr"
    "128\000PSHUFDmi\000PSHUFDri\000PSHUFHWmi\000PSHUFHWri\000PSHUFLWmi\000P"
    "SHUFLWri\000PSIGNBrm128\000PSIGNBrr128\000PSIGNDrm128\000PSIGNDrr128\000"
    "PSIGNWrm128\000PSIGNWrr128\000PSLLDQri\000PSLLDri\000PSLLDrm\000PSLLDrr"
    "\000PSLLQri\000PSLLQrm\000PSLLQrr\000PSLLWri\000PSLLWrm\000PSLLWrr\000P"
    "SRADri\000PSRADrm\000PSRADrr\000PSRAWri\000PSRAWrm\000PSRAWrr\000PSRLDQ"
    "ri\000PSRLDri\000PSRLDrm\000PSRLDrr\000PSRLQri\000PSRLQrm\000PSRLQrr\000"
    "PSRLWri\000PSRLWrm\000PSRLWrr\000PSUBBrm\000PSUBBrr\000PSUBDrm\000PSUBD"
    "rr\000PSUBQrm\000PSUBQrr\000PSUBSBrm\000PSUBSBrr\000PSUBSWrm\000PSUBSWr"
    "r\000PSUBUSBrm\000PSUBUSBrr\000PSUBUSWrm\000PSUBUSWrr\000PSUBWrm\000PSU"
    "BWrr\000PSWAPDrm\000PSWAPDrr\000PTESTrm\000PTESTrr\000PUNPCKHBWrm\000PU"
    "NPCKHBWrr\000PUNPCKHDQrm\000PUNPCKHDQrr\000PUNPCKHQDQrm\000PUNPCKHQDQrr"
    "\000PUNPCKHWDrm\000PUNPCKHWDrr\000PUNPCKLBWrm\000PUNPCKLBWrr\000PUNPCKL"
    "DQrm\000PUNPCKLDQrr\000PUNPCKLQDQrm\000PUNPCKLQDQrr\000PUNPCKLWDrm\000P"
    "UNPCKLWDrr\000PUSH16r\000PUSH16rmm\000PUSH16rmr\000PUSH32r\000PUSH32rmm"
    "\000PUSH32rmr\000PUSH64i16\000PUSH64i32\000PUSH64i8\000PUSH64r\000PUSH6"
    "4rmm\000PUSH64rmr\000PUSHA32\000PUSHCS16\000PUSHCS32\000PUSHDS16\000PUS"
    "HDS32\000PUSHES16\000PUSHES32\000PUSHF16\000PUSHF32\000PUSHF64\000PUSHF"
    "S16\000PUSHFS32\000PUSHFS64\000PUSHGS16\000PUSHGS32\000PUSHGS64\000PUSH"
    "SS16\000PUSHSS32\000PUSHi16\000PUSHi32\000PUSHi8\000PXORrm\000PXORrr\000"
    "RCL16m1\000RCL16mCL\000RCL16mi\000RCL16r1\000RCL16rCL\000RCL16ri\000RCL"
    "32m1\000RCL32mCL\000RCL32mi\000RCL32r1\000RCL32rCL\000RCL32ri\000RCL64m"
    "1\000RCL64mCL\000RCL64mi\000RCL64r1\000RCL64rCL\000RCL64ri\000RCL8m1\000"
    "RCL8mCL\000RCL8mi\000RCL8r1\000RCL8rCL\000RCL8ri\000RCPPSm\000RCPPSm_In"
    "t\000RCPPSr\000RCPPSr_Int\000RCPSSm\000RCPSSm_Int\000RCPSSr\000RCPSSr_I"
    "nt\000RCR16m1\000RCR16mCL\000RCR16mi\000RCR16r1\000RCR16rCL\000RCR16ri\000"
    "RCR32m1\000RCR32mCL\000RCR32mi\000RCR32r1\000RCR32rCL\000RCR32ri\000RCR"
    "64m1\000RCR64mCL\000RCR64mi\000RCR64r1\000RCR64rCL\000RCR64ri\000RCR8m1"
    "\000RCR8mCL\000RCR8mi\000RCR8r1\000RCR8rCL\000RCR8ri\000RDFSBASE\000RDF"
    "SBASE64\000RDGSBASE\000RDGSBASE64\000RDMSR\000RDPMC\000RDRAND16r\000RDR"
    "AND32r\000RDRAND64r\000RDTSC\000RDTSCP\000RELEASE_MOV16mr\000RELEASE_MO"
    "V32mr\000RELEASE_MOV64mr\000RELEASE_MOV8mr\000REPNE_PREFIX\000REP_MOVSB"
    "\000REP_MOVSD\000REP_MOVSQ\000REP_MOVSW\000REP_PREFIX\000REP_STOSB\000R"
    "EP_STOSD\000REP_STOSQ\000REP_STOSW\000RET\000RETI\000RETIW\000REX64_PRE"
    "FIX\000ROL16m1\000ROL16mCL\000ROL16mi\000ROL16r1\000ROL16rCL\000ROL16ri"
    "\000ROL32m1\000ROL32mCL\000ROL32mi\000ROL32r1\000ROL32rCL\000ROL32ri\000"
    "ROL64m1\000ROL64mCL\000ROL64mi\000ROL64r1\000ROL64rCL\000ROL64ri\000ROL"
    "8m1\000ROL8mCL\000ROL8mi\000ROL8r1\000ROL8rCL\000ROL8ri\000ROR16m1\000R"
    "OR16mCL\000ROR16mi\000ROR16r1\000ROR16rCL\000ROR16ri\000ROR32m1\000ROR3"
    "2mCL\000ROR32mi\000ROR32r1\000ROR32rCL\000ROR32ri\000ROR64m1\000ROR64mC"
    "L\000ROR64mi\000ROR64r1\000ROR64rCL\000ROR64ri\000ROR8m1\000ROR8mCL\000"
    "ROR8mi\000ROR8r1\000ROR8rCL\000ROR8ri\000RORX32mi\000RORX32ri\000RORX64"
    "mi\000RORX64ri\000ROUNDPDm\000ROUNDPDr\000ROUNDPSm\000ROUNDPSr\000ROUND"
    "SDm\000ROUNDSDr\000ROUNDSDr_Int\000ROUNDSSm\000ROUNDSSr\000ROUNDSSr_Int"
    "\000RSM\000RSQRTPSm\000RSQRTPSm_Int\000RSQRTPSr\000RSQRTPSr_Int\000RSQR"
    "TSSm\000RSQRTSSm_Int\000RSQRTSSr\000RSQRTSSr_Int\000SAHF\000SAR16m1\000"
    "SAR16mCL\000SAR16mi\000SAR16r1\000SAR16rCL\000SAR16ri\000SAR32m1\000SAR"
    "32mCL\000SAR32mi\000SAR32r1\000SAR32rCL\000SAR32ri\000SAR64m1\000SAR64m"
    "CL\000SAR64mi\000SAR64r1\000SAR64rCL\000SAR64ri\000SAR8m1\000SAR8mCL\000"
    "SAR8mi\000SAR8r1\000SAR8rCL\000SAR8ri\000SARX32rm\000SARX32rr\000SARX64"
    "rm\000SARX64rr\000SBB16i16\000SBB16mi\000SBB16mi8\000SBB16mr\000SBB16ri"
    "\000SBB16ri8\000SBB16rm\000SBB16rr\000SBB16rr_REV\000SBB32i32\000SBB32m"
    "i\000SBB32mi8\000SBB32mr\000SBB32ri\000SBB32ri8\000SBB32rm\000SBB32rr\000"
    "SBB32rr_REV\000SBB64i32\000SBB64mi32\000SBB64mi8\000SBB64mr\000SBB64ri3"
    "2\000SBB64ri8\000SBB64rm\000SBB64rr\000SBB64rr_REV\000SBB8i8\000SBB8mi\000"
    "SBB8mr\000SBB8ri\000SBB8rm\000SBB8rr\000SBB8rr_REV\000SCAS16\000SCAS32\000"
    "SCAS64\000SCAS8\000SEG_ALLOCA_32\000SEG_ALLOCA_64\000SETAEm\000SETAEr\000"
    "SETAm\000SETAr\000SETBEm\000SETBEr\000SETB_C16r\000SETB_C32r\000SETB_C6"
    "4r\000SETB_C8r\000SETBm\000SETBr\000SETEm\000SETEr\000SETGEm\000SETGEr\000"
    "SETGm\000SETGr\000SETLEm\000SETLEr\000SETLm\000SETLr\000SETNEm\000SETNE"
    "r\000SETNOm\000SETNOr\000SETNPm\000SETNPr\000SETNSm\000SETNSr\000SETOm\000"
    "SETOr\000SETPm\000SETPr\000SETSm\000SETSr\000SFENCE\000SGDT16m\000SGDTm"
    "\000SHL16m1\000SHL16mCL\000SHL16mi\000SHL16r1\000SHL16rCL\000SHL16ri\000"
    "SHL32m1\000SHL32mCL\000SHL32mi\000SHL32r1\000SHL32rCL\000SHL32ri\000SHL"
    "64m1\000SHL64mCL\000SHL64mi\000SHL64r1\000SHL64rCL\000SHL64ri\000SHL8m1"
    "\000SHL8mCL\000SHL8mi\000SHL8r1\000SHL8rCL\000SHL8ri\000SHLD16mrCL\000S"
    "HLD16mri8\000SHLD16rrCL\000SHLD16rri8\000SHLD32mrCL\000SHLD32mri8\000SH"
    "LD32rrCL\000SHLD32rri8\000SHLD64mrCL\000SHLD64mri8\000SHLD64rrCL\000SHL"
    "D64rri8\000SHLX32rm\000SHLX32rr\000SHLX64rm\000SHLX64rr\000SHR16m1\000S"
    "HR16mCL\000SHR16mi\000SHR16r1\000SHR16rCL\000SHR16ri\000SHR32m1\000SHR3"
    "2mCL\000SHR32mi\000SHR32r1\000SHR32rCL\000SHR32ri\000SHR64m1\000SHR64mC"
    "L\000SHR64mi\000SHR64r1\000SHR64rCL\000SHR64ri\000SHR8m1\000SHR8mCL\000"
    "SHR8mi\000SHR8r1\000SHR8rCL\000SHR8ri\000SHRD16mrCL\000SHRD16mri8\000SH"
    "RD16rrCL\000SHRD16rri8\000SHRD32mrCL\000SHRD32mri8\000SHRD32rrCL\000SHR"
    "D32rri8\000SHRD64mrCL\000SHRD64mri8\000SHRD64rrCL\000SHRD64rri8\000SHRX"
    "32rm\000SHRX32rr\000SHRX64rm\000SHRX64rr\000SHUFPDrmi\000SHUFPDrri\000S"
    "HUFPSrmi\000SHUFPSrri\000SIDT16m\000SIDTm\000SIN_F\000SIN_Fp32\000SIN_F"
    "p64\000SIN_Fp80\000SLDT16m\000SLDT16r\000SLDT32r\000SLDT64m\000SLDT64r\000"
    "SMSW16m\000SMSW16r\000SMSW32r\000SMSW64r\000SQRTPDm\000SQRTPDm_Int\000S"
    "QRTPDr\000SQRTPDr_Int\000SQRTPSm\000SQRTPSm_Int\000SQRTPSr\000SQRTPSr_I"
    "nt\000SQRTSDm\000SQRTSDm_Int\000SQRTSDr\000SQRTSDr_Int\000SQRTSSm\000SQ"
    "RTSSm_Int\000SQRTSSr\000SQRTSSr_Int\000SQRT_F\000SQRT_Fp32\000SQRT_Fp64"
    "\000SQRT_Fp80\000SS_PREFIX\000STC\000STD\000STI\000STMXCSR\000STOSB\000"
    "STOSD\000STOSQ\000STOSW\000STR16r\000STR32r\000STR64r\000STRm\000ST_F32"
    "m\000ST_F64m\000ST_FP32m\000ST_FP64m\000ST_FP80m\000ST_FPrr\000ST_Fp32m"
    "\000ST_Fp64m\000ST_Fp64m32\000ST_Fp80m32\000ST_Fp80m64\000ST_FpP32m\000"
    "ST_FpP64m\000ST_FpP64m32\000ST_FpP80m\000ST_FpP80m32\000ST_FpP80m64\000"
    "ST_Frr\000SUB16i16\000SUB16mi\000SUB16mi8\000SUB16mr\000SUB16ri\000SUB1"
    "6ri8\000SUB16rm\000SUB16rr\000SUB16rr_REV\000SUB32i32\000SUB32mi\000SUB"
    "32mi8\000SUB32mr\000SUB32ri\000SUB32ri8\000SUB32rm\000SUB32rr\000SUB32r"
    "r_REV\000SUB64i32\000SUB64mi32\000SUB64mi8\000SUB64mr\000SUB64ri32\000S"
    "UB64ri8\000SUB64rm\000SUB64rr\000SUB64rr_REV\000SUB8i8\000SUB8mi\000SUB"
    "8mr\000SUB8ri\000SUB8rm\000SUB8rr\000SUB8rr_REV\000SUBPDrm\000SUBPDrr\000"
    "SUBPSrm\000SUBPSrr\000SUBR_F32m\000SUBR_F64m\000SUBR_FI16m\000SUBR_FI32"
    "m\000SUBR_FPrST0\000SUBR_FST0r\000SUBR_Fp32m\000SUBR_Fp64m\000SUBR_Fp64"
    "m32\000SUBR_Fp80m32\000SUBR_Fp80m64\000SUBR_FpI16m32\000SUBR_FpI16m64\000"
    "SUBR_FpI16m80\000SUBR_FpI32m32\000SUBR_FpI32m64\000SUBR_FpI32m80\000SUB"
    "R_FrST0\000SUBSDrm\000SUBSDrm_Int\000SUBSDrr\000SUBSDrr_Int\000SUBSSrm\000"
    "SUBSSrm_Int\000SUBSSrr\000SUBSSrr_Int\000SUB_F32m\000SUB_F64m\000SUB_FI"
    "16m\000SUB_FI32m\000SUB_FPrST0\000SUB_FST0r\000SUB_Fp32\000SUB_Fp32m\000"
    "SUB_Fp64\000SUB_Fp64m\000SUB_Fp64m32\000SUB_Fp80\000SUB_Fp80m32\000SUB_"
    "Fp80m64\000SUB_FpI16m32\000SUB_FpI16m64\000SUB_FpI16m80\000SUB_FpI32m32"
    "\000SUB_FpI32m64\000SUB_FpI32m80\000SUB_FrST0\000SWAPGS\000SYSCALL\000S"
    "YSENTER\000SYSEXIT\000SYSEXIT64\000SYSRETL\000SYSRETQ\000TAILJMPd\000TA"
    "ILJMPd64\000TAILJMPm\000TAILJMPm64\000TAILJMPr\000TAILJMPr64\000TCRETUR"
    "Ndi\000TCRETURNdi64\000TCRETURNmi\000TCRETURNmi64\000TCRETURNri\000TCRE"
    "TURNri64\000TEST16i16\000TEST16mi\000TEST16ri\000TEST16rm\000TEST16rr\000"
    "TEST32i32\000TEST32mi\000TEST32ri\000TEST32rm\000TEST32rr\000TEST64i32\000"
    "TEST64mi32\000TEST64ri32\000TEST64rm\000TEST64rr\000TEST8i8\000TEST8mi\000"
    "TEST8ri\000TEST8ri_NOREX\000TEST8rm\000TEST8rr\000TLSCall_32\000TLSCall"
    "_64\000TLS_addr32\000TLS_addr64\000TRAP\000TST_F\000TST_Fp32\000TST_Fp6"
    "4\000TST_Fp80\000TZCNT16rm\000TZCNT16rr\000TZCNT32rm\000TZCNT32rr\000TZ"
    "CNT64rm\000TZCNT64rr\000UCOMISDrm\000UCOMISDrr\000UCOMISSrm\000UCOMISSr"
    "r\000UCOM_FIPr\000UCOM_FIr\000UCOM_FPPr\000UCOM_FPr\000UCOM_FpIr32\000U"
    "COM_FpIr64\000UCOM_FpIr80\000UCOM_Fpr32\000UCOM_Fpr64\000UCOM_Fpr80\000"
    "UCOM_Fr\000UD2B\000UNPCKHPDrm\000UNPCKHPDrr\000UNPCKHPSrm\000UNPCKHPSrr"
    "\000UNPCKLPDrm\000UNPCKLPDrr\000UNPCKLPSrm\000UNPCKLPSrr\000VAARG_64\000"
    "VADDPDYrm\000VADDPDYrr\000VADDPDrm\000VADDPDrr\000VADDPSYrm\000VADDPSYr"
    "r\000VADDPSrm\000VADDPSrr\000VADDSDrm\000VADDSDrm_Int\000VADDSDrr\000VA"
    "DDSDrr_Int\000VADDSSrm\000VADDSSrm_Int\000VADDSSrr\000VADDSSrr_Int\000V"
    "ADDSUBPDYrm\000VADDSUBPDYrr\000VADDSUBPDrm\000VADDSUBPDrr\000VADDSUBPSY"
    "rm\000VADDSUBPSYrr\000VADDSUBPSrm\000VADDSUBPSrr\000VAESDECLASTrm\000VA"
    "ESDECLASTrr\000VAESDECrm\000VAESDECrr\000VAESENCLASTrm\000VAESENCLASTrr"
    "\000VAESENCrm\000VAESENCrr\000VAESIMCrm\000VAESIMCrr\000VAESKEYGENASSIS"
    "T128rm\000VAESKEYGENASSIST128rr\000VANDNPDYrm\000VANDNPDYrr\000VANDNPDr"
    "m\000VANDNPDrr\000VANDNPSYrm\000VANDNPSYrr\000VANDNPSrm\000VANDNPSrr\000"
    "VANDPDYrm\000VANDPDYrr\000VANDPDrm\000VANDPDrr\000VANDPSYrm\000VANDPSYr"
    "r\000VANDPSrm\000VANDPSrr\000VASTART_SAVE_XMM_REGS\000VBLENDPDYrmi\000V"
    "BLENDPDYrri\000VBLENDPDrmi\000VBLENDPDrri\000VBLENDPSYrmi\000VBLENDPSYr"
    "ri\000VBLENDPSrmi\000VBLENDPSrri\000VBLENDVPDYrm\000VBLENDVPDYrr\000VBL"
    "ENDVPDrm\000VBLENDVPDrr\000VBLENDVPSYrm\000VBLENDVPSYrr\000VBLENDVPSrm\000"
    "VBLENDVPSrr\000VBROADCASTF128\000VBROADCASTI128\000VBROADCASTSDrm\000VB"
    "ROADCASTSDrr\000VBROADCASTSSYrm\000VBROADCASTSSYrr\000VBROADCASTSSrm\000"
    "VBROADCASTSSrr\000VCMPPDYrmi\000VCMPPDYrmi_alt\000VCMPPDYrri\000VCMPPDY"
    "rri_alt\000VCMPPDrmi\000VCMPPDrmi_alt\000VCMPPDrri\000VCMPPDrri_alt\000"
    "VCMPPSYrmi\000VCMPPSYrmi_alt\000VCMPPSYrri\000VCMPPSYrri_alt\000VCMPPSr"
    "mi\000VCMPPSrmi_alt\000VCMPPSrri\000VCMPPSrri_alt\000VCMPSDrm\000VCMPSD"
    "rm_alt\000VCMPSDrr\000VCMPSDrr_alt\000VCMPSSrm\000VCMPSSrm_alt\000VCMPS"
    "Srr\000VCMPSSrr_alt\000VCOMISDrm\000VCOMISDrr\000VCOMISSrm\000VCOMISSrr"
    "\000VCVTDQ2PDYrm\000VCVTDQ2PDYrr\000VCVTDQ2PDrm\000VCVTDQ2PDrr\000VCVTD"
    "Q2PSYrm\000VCVTDQ2PSYrr\000VCVTDQ2PSrm\000VCVTDQ2PSrr\000VCVTPD2DQXrYr\000"
    "VCVTPD2DQXrm\000VCVTPD2DQXrr\000VCVTPD2DQYrm\000VCVTPD2DQYrr\000VCVTPD2"
    "DQrr\000VCVTPD2PSXrYr\000VCVTPD2PSXrm\000VCVTPD2PSXrr\000VCVTPD2PSYrm\000"
    "VCVTPD2PSYrr\000VCVTPD2PSrr\000VCVTPH2PSYrm\000VCVTPH2PSYrr\000VCVTPH2P"
    "Srm\000VCVTPH2PSrr\000VCVTPS2DQYrm\000VCVTPS2DQYrr\000VCVTPS2DQrm\000VC"
    "VTPS2DQrr\000VCVTPS2PDYrm\000VCVTPS2PDYrr\000VCVTPS2PDrm\000VCVTPS2PDrr"
    "\000VCVTPS2PHYmr\000VCVTPS2PHYrr\000VCVTPS2PHmr\000VCVTPS2PHrr\000VCVTS"
    "D2SI64rm\000VCVTSD2SI64rr\000VCVTSD2SIrm\000VCVTSD2SIrr\000VCVTSD2SSrm\000"
    "VCVTSD2SSrr\000VCVTSI2SD64rm\000VCVTSI2SD64rr\000VCVTSI2SDLrm\000VCVTSI"
    "2SDLrr\000VCVTSI2SDrm\000VCVTSI2SDrr\000VCVTSI2SS64rm\000VCVTSI2SS64rr\000"
    "VCVTSI2SSrm\000VCVTSI2SSrr\000VCVTSS2SDrm\000VCVTSS2SDrr\000VCVTSS2SI64"
    "rm\000VCVTSS2SI64rr\000VCVTSS2SIrm\000VCVTSS2SIrr\000VCVTTPD2DQXrYr\000"
    "VCVTTPD2DQXrm\000VCVTTPD2DQXrr\000VCVTTPD2DQYrm\000VCVTTPD2DQYrr\000VCV"
    "TTPD2DQrm\000VCVTTPD2DQrr\000VCVTTPS2DQYrm\000VCVTTPS2DQYrr\000VCVTTPS2"
    "DQrm\000VCVTTPS2DQrr\000VCVTTSD2SI64rm\000VCVTTSD2SI64rr\000VCVTTSD2SIr"
    "m\000VCVTTSD2SIrr\000VCVTTSS2SI64rm\000VCVTTSS2SI64rr\000VCVTTSS2SIrm\000"
    "VCVTTSS2SIrr\000VDIVPDYrm\000VDIVPDYrr\000VDIVPDrm\000VDIVPDrr\000VDIVP"
    "SYrm\000VDIVPSYrr\000VDIVPSrm\000VDIVPSrr\000VDIVSDrm\000VDIVSDrm_Int\000"
    "VDIVSDrr\000VDIVSDrr_Int\000VDIVSSrm\000VDIVSSrm_Int\000VDIVSSrr\000VDI"
    "VSSrr_Int\000VDPPDrmi\000VDPPDrri\000VDPPSYrmi\000VDPPSYrri\000VDPPSrmi"
    "\000VDPPSrri\000VERRm\000VERRr\000VERWm\000VERWr\000VEXTRACTF128mr\000V"
    "EXTRACTF128rr\000VEXTRACTI128mr\000VEXTRACTI128rr\000VEXTRACTPSmr\000VE"
    "XTRACTPSrr\000VEXTRACTPSrr64\000VFMADDPD4mr\000VFMADDPD4mrY\000VFMADDPD"
    "4rm\000VFMADDPD4rmY\000VFMADDPD4rr\000VFMADDPD4rrY\000VFMADDPD4rrY_REV\000"
    "VFMADDPD4rr_REV\000VFMADDPDr132m\000VFMADDPDr132mY\000VFMADDPDr132r\000"
    "VFMADDPDr132rY\000VFMADDPDr213m\000VFMADDPDr213mY\000VFMADDPDr213r\000V"
    "FMADDPDr213rY\000VFMADDPDr231m\000VFMADDPDr231mY\000VFMADDPDr231r\000VF"
    "MADDPDr231rY\000VFMADDPS4mr\000VFMADDPS4mrY\000VFMADDPS4rm\000VFMADDPS4"
    "rmY\000VFMADDPS4rr\000VFMADDPS4rrY\000VFMADDPS4rrY_REV\000VFMADDPS4rr_R"
    "EV\000VFMADDPSr132m\000VFMADDPSr132mY\000VFMADDPSr132r\000VFMADDPSr132r"
    "Y\000VFMADDPSr213m\000VFMADDPSr213mY\000VFMADDPSr213r\000VFMADDPSr213rY"
    "\000VFMADDPSr231m\000VFMADDPSr231mY\000VFMADDPSr231r\000VFMADDPSr231rY\000"
    "VFMADDSD4mr\000VFMADDSD4rm\000VFMADDSD4rr\000VFMADDSD4rr_REV\000VFMADDS"
    "Dr132m\000VFMADDSDr132r\000VFMADDSDr213m\000VFMADDSDr213r\000VFMADDSDr2"
    "31m\000VFMADDSDr231r\000VFMADDSS4mr\000VFMADDSS4rm\000VFMADDSS4rr\000VF"
    "MADDSS4rr_REV\000VFMADDSSr132m\000VFMADDSSr132r\000VFMADDSSr213m\000VFM"
    "ADDSSr213r\000VFMADDSSr231m\000VFMADDSSr231r\000VFMADDSUBPD4mr\000VFMAD"
    "DSUBPD4mrY\000VFMADDSUBPD4rm\000VFMADDSUBPD4rmY\000VFMADDSUBPD4rr\000VF"
    "MADDSUBPD4rrY\000VFMADDSUBPD4rrY_REV\000VFMADDSUBPD4rr_REV\000VFMADDSUB"
    "PDr132m\000VFMADDSUBPDr132mY\000VFMADDSUBPDr132r\000VFMADDSUBPDr132rY\000"
    "VFMADDSUBPDr213m\000VFMADDSUBPDr213mY\000VFMADDSUBPDr213r\000VFMADDSUBP"
    "Dr213rY\000VFMADDSUBPDr231m\000VFMADDSUBPDr231mY\000VFMADDSUBPDr231r\000"
    "VFMADDSUBPDr231rY\000VFMADDSUBPS4mr\000VFMADDSUBPS4mrY\000VFMADDSUBPS4r"
    "m\000VFMADDSUBPS4rmY\000VFMADDSUBPS4rr\000VFMADDSUBPS4rrY\000VFMADDSUBP"
    "S4rrY_REV\000VFMADDSUBPS4rr_REV\000VFMADDSUBPSr132m\000VFMADDSUBPSr132m"
    "Y\000VFMADDSUBPSr132r\000VFMADDSUBPSr132rY\000VFMADDSUBPSr213m\000VFMAD"
    "DSUBPSr213mY\000VFMADDSUBPSr213r\000VFMADDSUBPSr213rY\000VFMADDSUBPSr23"
    "1m\000VFMADDSUBPSr231mY\000VFMADDSUBPSr231r\000VFMADDSUBPSr231rY\000VFM"
    "SUBADDPD4mr\000VFMSUBADDPD4mrY\000VFMSUBADDPD4rm\000VFMSUBADDPD4rmY\000"
    "VFMSUBADDPD4rr\000VFMSUBADDPD4rrY\000VFMSUBADDPD4rrY_REV\000VFMSUBADDPD"
    "4rr_REV\000VFMSUBADDPDr132m\000VFMSUBADDPDr132mY\000VFMSUBADDPDr132r\000"
    "VFMSUBADDPDr132rY\000VFMSUBADDPDr213m\000VFMSUBADDPDr213mY\000VFMSUBADD"
    "PDr213r\000VFMSUBADDPDr213rY\000VFMSUBADDPDr231m\000VFMSUBADDPDr231mY\000"
    "VFMSUBADDPDr231r\000VFMSUBADDPDr231rY\000VFMSUBADDPS4mr\000VFMSUBADDPS4"
    "mrY\000VFMSUBADDPS4rm\000VFMSUBADDPS4rmY\000VFMSUBADDPS4rr\000VFMSUBADD"
    "PS4rrY\000VFMSUBADDPS4rrY_REV\000VFMSUBADDPS4rr_REV\000VFMSUBADDPSr132m"
    "\000VFMSUBADDPSr132mY\000VFMSUBADDPSr132r\000VFMSUBADDPSr132rY\000VFMSU"
    "BADDPSr213m\000VFMSUBADDPSr213mY\000VFMSUBADDPSr213r\000VFMSUBADDPSr213"
    "rY\000VFMSUBADDPSr231m\000VFMSUBADDPSr231mY\000VFMSUBADDPSr231r\000VFMS"
    "UBADDPSr231rY\000VFMSUBPD4mr\000VFMSUBPD4mrY\000VFMSUBPD4rm\000VFMSUBPD"
    "4rmY\000VFMSUBPD4rr\000VFMSUBPD4rrY\000VFMSUBPD4rrY_REV\000VFMSUBPD4rr_"
    "REV\000VFMSUBPDr132m\000VFMSUBPDr132mY\000VFMSUBPDr132r\000VFMSUBPDr132"
    "rY\000VFMSUBPDr213m\000VFMSUBPDr213mY\000VFMSUBPDr213r\000VFMSUBPDr213r"
    "Y\000VFMSUBPDr231m\000VFMSUBPDr231mY\000VFMSUBPDr231r\000VFMSUBPDr231rY"
    "\000VFMSUBPS4mr\000VFMSUBPS4mrY\000VFMSUBPS4rm\000VFMSUBPS4rmY\000VFMSU"
    "BPS4rr\000VFMSUBPS4rrY\000VFMSUBPS4rrY_REV\000VFMSUBPS4rr_REV\000VFMSUB"
    "PSr132m\000VFMSUBPSr132mY\000VFMSUBPSr132r\000VFMSUBPSr132rY\000VFMSUBP"
    "Sr213m\000VFMSUBPSr213mY\000VFMSUBPSr213r\000VFMSUBPSr213rY\000VFMSUBPS"
    "r231m\000VFMSUBPSr231mY\000VFMSUBPSr231r\000VFMSUBPSr231rY\000VFMSUBSD4"
    "mr\000VFMSUBSD4rm\000VFMSUBSD4rr\000VFMSUBSD4rr_REV\000VFMSUBSDr132m\000"
    "VFMSUBSDr132r\000VFMSUBSDr213m\000VFMSUBSDr213r\000VFMSUBSDr231m\000VFM"
    "SUBSDr231r\000VFMSUBSS4mr\000VFMSUBSS4rm\000VFMSUBSS4rr\000VFMSUBSS4rr_"
    "REV\000VFMSUBSSr132m\000VFMSUBSSr132r\000VFMSUBSSr213m\000VFMSUBSSr213r"
    "\000VFMSUBSSr231m\000VFMSUBSSr231r\000VFNMADDPD4mr\000VFNMADDPD4mrY\000"
    "VFNMADDPD4rm\000VFNMADDPD4rmY\000VFNMADDPD4rr\000VFNMADDPD4rrY\000VFNMA"
    "DDPD4rrY_REV\000VFNMADDPD4rr_REV\000VFNMADDPDr132m\000VFNMADDPDr132mY\000"
    "VFNMADDPDr132r\000VFNMADDPDr132rY\000VFNMADDPDr213m\000VFNMADDPDr213mY\000"
    "VFNMADDPDr213r\000VFNMADDPDr213rY\000VFNMADDPDr231m\000VFNMADDPDr231mY\000"
    "VFNMADDPDr231r\000VFNMADDPDr231rY\000VFNMADDPS4mr\000VFNMADDPS4mrY\000V"
    "FNMADDPS4rm\000VFNMADDPS4rmY\000VFNMADDPS4rr\000VFNMADDPS4rrY\000VFNMAD"
    "DPS4rrY_REV\000VFNMADDPS4rr_REV\000VFNMADDPSr132m\000VFNMADDPSr132mY\000"
    "VFNMADDPSr132r\000VFNMADDPSr132rY\000VFNMADDPSr213m\000VFNMADDPSr213mY\000"
    "VFNMADDPSr213r\000VFNMADDPSr213rY\000VFNMADDPSr231m\000VFNMADDPSr231mY\000"
    "VFNMADDPSr231r\000VFNMADDPSr231rY\000VFNMADDSD4mr\000VFNMADDSD4rm\000VF"
    "NMADDSD4rr\000VFNMADDSD4rr_REV\000VFNMADDSDr132m\000VFNMADDSDr132r\000V"
    "FNMADDSDr213m\000VFNMADDSDr213r\000VFNMADDSDr231m\000VFNMADDSDr231r\000"
    "VFNMADDSS4mr\000VFNMADDSS4rm\000VFNMADDSS4rr\000VFNMADDSS4rr_REV\000VFN"
    "MADDSSr132m\000VFNMADDSSr132r\000VFNMADDSSr213m\000VFNMADDSSr213r\000VF"
    "NMADDSSr231m\000VFNMADDSSr231r\000VFNMSUBPD4mr\000VFNMSUBPD4mrY\000VFNM"
    "SUBPD4rm\000VFNMSUBPD4rmY\000VFNMSUBPD4rr\000VFNMSUBPD4rrY\000VFNMSUBPD"
    "4rrY_REV\000VFNMSUBPD4rr_REV\000VFNMSUBPDr132m\000VFNMSUBPDr132mY\000VF"
    "NMSUBPDr132r\000VFNMSUBPDr132rY\000VFNMSUBPDr213m\000VFNMSUBPDr213mY\000"
    "VFNMSUBPDr213r\000VFNMSUBPDr213rY\000VFNMSUBPDr231m\000VFNMSUBPDr231mY\000"
    "VFNMSUBPDr231r\000VFNMSUBPDr231rY\000VFNMSUBPS4mr\000VFNMSUBPS4mrY\000V"
    "FNMSUBPS4rm\000VFNMSUBPS4rmY\000VFNMSUBPS4rr\000VFNMSUBPS4rrY\000VFNMSU"
    "BPS4rrY_REV\000VFNMSUBPS4rr_REV\000VFNMSUBPSr132m\000VFNMSUBPSr132mY\000"
    "VFNMSUBPSr132r\000VFNMSUBPSr132rY\000VFNMSUBPSr213m\000VFNMSUBPSr213mY\000"
    "VFNMSUBPSr213r\000VFNMSUBPSr213rY\000VFNMSUBPSr231m\000VFNMSUBPSr231mY\000"
    "VFNMSUBPSr231r\000VFNMSUBPSr231rY\000VFNMSUBSD4mr\000VFNMSUBSD4rm\000VF"
    "NMSUBSD4rr\000VFNMSUBSD4rr_REV\000VFNMSUBSDr132m\000VFNMSUBSDr132r\000V"
    "FNMSUBSDr213m\000VFNMSUBSDr213r\000VFNMSUBSDr231m\000VFNMSUBSDr231r\000"
    "VFNMSUBSS4mr\000VFNMSUBSS4rm\000VFNMSUBSS4rr\000VFNMSUBSS4rr_REV\000VFN"
    "MSUBSSr132m\000VFNMSUBSSr132r\000VFNMSUBSSr213m\000VFNMSUBSSr213r\000VF"
    "NMSUBSSr231m\000VFNMSUBSSr231r\000VFRCZPDrm\000VFRCZPDrmY\000VFRCZPDrr\000"
    "VFRCZPDrrY\000VFRCZPSrm\000VFRCZPSrmY\000VFRCZPSrr\000VFRCZPSrrY\000VFR"
    "CZSDrm\000VFRCZSDrr\000VFRCZSSrm\000VFRCZSSrr\000VFsANDNPDrm\000VFsANDN"
    "PDrr\000VFsANDNPSrm\000VFsANDNPSrr\000VFsANDPDrm\000VFsANDPDrr\000VFsAN"
    "DPSrm\000VFsANDPSrr\000VFsORPDrm\000VFsORPDrr\000VFsORPSrm\000VFsORPSrr"
    "\000VFsXORPDrm\000VFsXORPDrr\000VFsXORPSrm\000VFsXORPSrr\000VHADDPDYrm\000"
    "VHADDPDYrr\000VHADDPDrm\000VHADDPDrr\000VHADDPSYrm\000VHADDPSYrr\000VHA"
    "DDPSrm\000VHADDPSrr\000VHSUBPDYrm\000VHSUBPDYrr\000VHSUBPDrm\000VHSUBPD"
    "rr\000VHSUBPSYrm\000VHSUBPSYrr\000VHSUBPSrm\000VHSUBPSrr\000VINSERTF128"
    "rm\000VINSERTF128rr\000VINSERTI128rm\000VINSERTI128rr\000VINSERTPSrm\000"
    "VINSERTPSrr\000VLDDQUYrm\000VLDDQUrm\000VLDMXCSR\000VMASKMOVDQU\000VMAS"
    "KMOVDQU64\000VMASKMOVPDYmr\000VMASKMOVPDYrm\000VMASKMOVPDmr\000VMASKMOV"
    "PDrm\000VMASKMOVPSYmr\000VMASKMOVPSYrm\000VMASKMOVPSmr\000VMASKMOVPSrm\000"
    "VMAXPDYrm\000VMAXPDYrm_Int\000VMAXPDYrr\000VMAXPDYrr_Int\000VMAXPDrm\000"
    "VMAXPDrm_Int\000VMAXPDrr\000VMAXPDrr_Int\000VMAXPSYrm\000VMAXPSYrm_Int\000"
    "VMAXPSYrr\000VMAXPSYrr_Int\000VMAXPSrm\000VMAXPSrm_Int\000VMAXPSrr\000V"
    "MAXPSrr_Int\000VMAXSDrm\000VMAXSDrm_Int\000VMAXSDrr\000VMAXSDrr_Int\000"
    "VMAXSSrm\000VMAXSSrm_Int\000VMAXSSrr\000VMAXSSrr_Int\000VMCALL\000VMCLE"
    "ARm\000VMINPDYrm\000VMINPDYrm_Int\000VMINPDYrr\000VMINPDYrr_Int\000VMIN"
    "PDrm\000VMINPDrm_Int\000VMINPDrr\000VMINPDrr_Int\000VMINPSYrm\000VMINPS"
    "Yrm_Int\000VMINPSYrr\000VMINPSYrr_Int\000VMINPSrm\000VMINPSrm_Int\000VM"
    "INPSrr\000VMINPSrr_Int\000VMINSDrm\000VMINSDrm_Int\000VMINSDrr\000VMINS"
    "Drr_Int\000VMINSSrm\000VMINSSrm_Int\000VMINSSrr\000VMINSSrr_Int\000VMLA"
    "UNCH\000VMOV64toPQIrr\000VMOV64toSDrm\000VMOV64toSDrr\000VMOVAPDYmr\000"
    "VMOVAPDYrm\000VMOVAPDYrr\000VMOVAPDYrr_REV\000VMOVAPDmr\000VMOVAPDrm\000"
    "VMOVAPDrr\000VMOVAPDrr_REV\000VMOVAPSYmr\000VMOVAPSYrm\000VMOVAPSYrr\000"
    "VMOVAPSYrr_REV\000VMOVAPSmr\000VMOVAPSrm\000VMOVAPSrr\000VMOVAPSrr_REV\000"
    "VMOVDDUPYrm\000VMOVDDUPYrr\000VMOVDDUPrm\000VMOVDDUPrr\000VMOVDI2PDIrm\000"
    "VMOVDI2PDIrr\000VMOVDI2SSrm\000VMOVDI2SSrr\000VMOVDQAYmr\000VMOVDQAYrm\000"
    "VMOVDQAYrr\000VMOVDQAYrr_REV\000VMOVDQAmr\000VMOVDQArm\000VMOVDQArr\000"
    "VMOVDQArr_REV\000VMOVDQUYmr\000VMOVDQUYrm\000VMOVDQUYrr\000VMOVDQUYrr_R"
    "EV\000VMOVDQUmr\000VMOVDQUmr_Int\000VMOVDQUrm\000VMOVDQUrr\000VMOVDQUrr"
    "_REV\000VMOVHLPSrr\000VMOVHPDmr\000VMOVHPDrm\000VMOVHPSmr\000VMOVHPSrm\000"
    "VMOVLHPSrr\000VMOVLPDmr\000VMOVLPDrm\000VMOVLPSmr\000VMOVLPSrm\000VMOVL"
    "Q128mr\000VMOVMSKPDYr64r\000VMOVMSKPDYrr32\000VMOVMSKPDYrr64\000VMOVMSK"
    "PDr64r\000VMOVMSKPDrr32\000VMOVMSKPDrr64\000VMOVMSKPSYr64r\000VMOVMSKPS"
    "Yrr32\000VMOVMSKPSYrr64\000VMOVMSKPSr64r\000VMOVMSKPSrr32\000VMOVMSKPSr"
    "r64\000VMOVNTDQAYrm\000VMOVNTDQArm\000VMOVNTDQYmr\000VMOVNTDQmr\000VMOV"
    "NTPDYmr\000VMOVNTPDmr\000VMOVNTPSYmr\000VMOVNTPSmr\000VMOVPDI2DImr\000V"
    "MOVPDI2DIrr\000VMOVPQI2QImr\000VMOVPQIto64rr\000VMOVQI2PQIrm\000VMOVQd6"
    "4rr\000VMOVQd64rr_alt\000VMOVQs64rr\000VMOVQxrxr\000VMOVSDmr\000VMOVSDr"
    "m\000VMOVSDrr\000VMOVSDrr_REV\000VMOVSDto64mr\000VMOVSDto64rr\000VMOVSH"
    "DUPYrm\000VMOVSHDUPYrr\000VMOVSHDUPrm\000VMOVSHDUPrr\000VMOVSLDUPYrm\000"
    "VMOVSLDUPYrr\000VMOVSLDUPrm\000VMOVSLDUPrr\000VMOVSS2DImr\000VMOVSS2DIr"
    "r\000VMOVSSmr\000VMOVSSrm\000VMOVSSrr\000VMOVSSrr_REV\000VMOVUPDYmr\000"
    "VMOVUPDYrm\000VMOVUPDYrr\000VMOVUPDYrr_REV\000VMOVUPDmr\000VMOVUPDrm\000"
    "VMOVUPDrr\000VMOVUPDrr_REV\000VMOVUPSYmr\000VMOVUPSYrm\000VMOVUPSYrr\000"
    "VMOVUPSYrr_REV\000VMOVUPSmr\000VMOVUPSrm\000VMOVUPSrr\000VMOVUPSrr_REV\000"
    "VMOVZDI2PDIrm\000VMOVZDI2PDIrr\000VMOVZPQILo2PQIrm\000VMOVZPQILo2PQIrr\000"
    "VMOVZQI2PQIrm\000VMOVZQI2PQIrr\000VMPSADBWYrmi\000VMPSADBWYrri\000VMPSA"
    "DBWrmi\000VMPSADBWrri\000VMPTRLDm\000VMPTRSTm\000VMREAD32rm\000VMREAD32"
    "rr\000VMREAD64rm\000VMREAD64rr\000VMRESUME\000VMULPDYrm\000VMULPDYrr\000"
    "VMULPDrm\000VMULPDrr\000VMULPSYrm\000VMULPSYrr\000VMULPSrm\000VMULPSrr\000"
    "VMULSDrm\000VMULSDrm_Int\000VMULSDrr\000VMULSDrr_Int\000VMULSSrm\000VMU"
    "LSSrm_Int\000VMULSSrr\000VMULSSrr_Int\000VMWRITE32rm\000VMWRITE32rr\000"
    "VMWRITE64rm\000VMWRITE64rr\000VMXOFF\000VMXON\000VORPDYrm\000VORPDYrr\000"
    "VORPDrm\000VORPDrr\000VORPSYrm\000VORPSYrr\000VORPSrm\000VORPSrr\000VPA"
    "BSBrm128\000VPABSBrm256\000VPABSBrr128\000VPABSBrr256\000VPABSDrm128\000"
    "VPABSDrm256\000VPABSDrr128\000VPABSDrr256\000VPABSWrm128\000VPABSWrm256"
    "\000VPABSWrr128\000VPABSWrr256\000VPACKSSDWYrm\000VPACKSSDWYrr\000VPACK"
    "SSDWrm\000VPACKSSDWrr\000VPACKSSWBYrm\000VPACKSSWBYrr\000VPACKSSWBrm\000"
    "VPACKSSWBrr\000VPACKUSDWYrm\000VPACKUSDWYrr\000VPACKUSDWrm\000VPACKUSDW"
    "rr\000VPACKUSWBYrm\000VPACKUSWBYrr\000VPACKUSWBrm\000VPACKUSWBrr\000VPA"
    "DDBYrm\000VPADDBYrr\000VPADDBrm\000VPADDBrr\000VPADDDYrm\000VPADDDYrr\000"
    "VPADDDrm\000VPADDDrr\000VPADDQYrm\000VPADDQYrr\000VPADDQrm\000VPADDQrr\000"
    "VPADDSBYrm\000VPADDSBYrr\000VPADDSBrm\000VPADDSBrr\000VPADDSWYrm\000VPA"
    "DDSWYrr\000VPADDSWrm\000VPADDSWrr\000VPADDUSBYrm\000VPADDUSBYrr\000VPAD"
    "DUSBrm\000VPADDUSBrr\000VPADDUSWYrm\000VPADDUSWYrr\000VPADDUSWrm\000VPA"
    "DDUSWrr\000VPADDWYrm\000VPADDWYrr\000VPADDWrm\000VPADDWrr\000VPALIGNR12"
    "8rm\000VPALIGNR128rr\000VPALIGNR256rm\000VPALIGNR256rr\000VPANDNYrm\000"
    "VPANDNYrr\000VPANDNrm\000VPANDNrr\000VPANDYrm\000VPANDYrr\000VPANDrm\000"
    "VPANDrr\000VPAVGBYrm\000VPAVGBYrr\000VPAVGBrm\000VPAVGBrr\000VPAVGWYrm\000"
    "VPAVGWYrr\000VPAVGWrm\000VPAVGWrr\000VPBLENDDYrmi\000VPBLENDDYrri\000VP"
    "BLENDDrmi\000VPBLENDDrri\000VPBLENDVBYrm\000VPBLENDVBYrr\000VPBLENDVBrm"
    "\000VPBLENDVBrr\000VPBLENDWYrmi\000VPBLENDWYrri\000VPBLENDWrmi\000VPBLE"
    "NDWrri\000VPBROADCASTBYrm\000VPBROADCASTBYrr\000VPBROADCASTBrm\000VPBRO"
    "ADCASTBrr\000VPBROADCASTDYrm\000VPBROADCASTDYrr\000VPBROADCASTDrm\000VP"
    "BROADCASTDrr\000VPBROADCASTQYrm\000VPBROADCASTQYrr\000VPBROADCASTQrm\000"
    "VPBROADCASTQrr\000VPBROADCASTWYrm\000VPBROADCASTWYrr\000VPBROADCASTWrm\000"
    "VPBROADCASTWrr\000VPCLMULQDQrm\000VPCLMULQDQrr\000VPCMOVmr\000VPCMOVmrY"
    "\000VPCMOVrm\000VPCMOVrmY\000VPCMOVrr\000VPCMOVrrY\000VPCMPEQBYrm\000VP"
    "CMPEQBYrr\000VPCMPEQBrm\000VPCMPEQBrr\000VPCMPEQDYrm\000VPCMPEQDYrr\000"
    "VPCMPEQDrm\000VPCMPEQDrr\000VPCMPEQQYrm\000VPCMPEQQYrr\000VPCMPEQQrm\000"
    "VPCMPEQQrr\000VPCMPEQWYrm\000VPCMPEQWYrr\000VPCMPEQWrm\000VPCMPEQWrr\000"
    "VPCMPESTRIArm\000VPCMPESTRIArr\000VPCMPESTRICrm\000VPCMPESTRICrr\000VPC"
    "MPESTRIOrm\000VPCMPESTRIOrr\000VPCMPESTRISrm\000VPCMPESTRISrr\000VPCMPE"
    "STRIZrm\000VPCMPESTRIZrr\000VPCMPESTRIrm\000VPCMPESTRIrr\000VPCMPESTRM1"
    "28MEM\000VPCMPESTRM128REG\000VPCMPESTRM128rm\000VPCMPESTRM128rr\000VPCM"
    "PGTBYrm\000VPCMPGTBYrr\000VPCMPGTBrm\000VPCMPGTBrr\000VPCMPGTDYrm\000VP"
    "CMPGTDYrr\000VPCMPGTDrm\000VPCMPGTDrr\000VPCMPGTQYrm\000VPCMPGTQYrr\000"
    "VPCMPGTQrm\000VPCMPGTQrr\000VPCMPGTWYrm\000VPCMPGTWYrr\000VPCMPGTWrm\000"
    "VPCMPGTWrr\000VPCMPISTRIArm\000VPCMPISTRIArr\000VPCMPISTRICrm\000VPCMPI"
    "STRICrr\000VPCMPISTRIOrm\000VPCMPISTRIOrr\000VPCMPISTRISrm\000VPCMPISTR"
    "ISrr\000VPCMPISTRIZrm\000VPCMPISTRIZrr\000VPCMPISTRIrm\000VPCMPISTRIrr\000"
    "VPCMPISTRM128MEM\000VPCMPISTRM128REG\000VPCMPISTRM128rm\000VPCMPISTRM12"
    "8rr\000VPCOMBmi\000VPCOMBri\000VPCOMDmi\000VPCOMDri\000VPCOMQmi\000VPCO"
    "MQri\000VPCOMUBmi\000VPCOMUBri\000VPCOMUDmi\000VPCOMUDri\000VPCOMUQmi\000"
    "VPCOMUQri\000VPCOMUWmi\000VPCOMUWri\000VPCOMWmi\000VPCOMWri\000VPERM2F1"
    "28rm\000VPERM2F128rr\000VPERM2I128rm\000VPERM2I128rr\000VPERMDYrm\000VP"
    "ERMDYrr\000VPERMIL2PDmr\000VPERMIL2PDmrY\000VPERMIL2PDrm\000VPERMIL2PDr"
    "mY\000VPERMIL2PDrr\000VPERMIL2PDrrY\000VPERMIL2PSmr\000VPERMIL2PSmrY\000"
    "VPERMIL2PSrm\000VPERMIL2PSrmY\000VPERMIL2PSrr\000VPERMIL2PSrrY\000VPERM"
    "ILPDYmi\000VPERMILPDYri\000VPERMILPDYrm\000VPERMILPDYrr\000VPERMILPDmi\000"
    "VPERMILPDri\000VPERMILPDrm\000VPERMILPDrr\000VPERMILPSYmi\000VPERMILPSY"
    "ri\000VPERMILPSYrm\000VPERMILPSYrr\000VPERMILPSmi\000VPERMILPSri\000VPE"
    "RMILPSrm\000VPERMILPSrr\000VPERMPDYrm\000VPERMPDYrr\000VPERMPSYrm\000VP"
    "ERMPSYrr\000VPERMQYrm\000VPERMQYrr\000VPEXTRBmr\000VPEXTRBrr\000VPEXTRB"
    "rr64\000VPEXTRDmr\000VPEXTRDrr\000VPEXTRQmr\000VPEXTRQrr\000VPEXTRWmr\000"
    "VPEXTRWri\000VPHADDBDrm\000VPHADDBDrr\000VPHADDBQrm\000VPHADDBQrr\000VP"
    "HADDBWrm\000VPHADDBWrr\000VPHADDDQrm\000VPHADDDQrr\000VPHADDDrm128\000V"
    "PHADDDrm256\000VPHADDDrr128\000VPHADDDrr256\000VPHADDSWrm128\000VPHADDS"
    "Wrm256\000VPHADDSWrr128\000VPHADDSWrr256\000VPHADDUBDrm\000VPHADDUBDrr\000"
    "VPHADDUBQrm\000VPHADDUBQrr\000VPHADDUBWrm\000VPHADDUBWrr\000VPHADDUDQrm"
    "\000VPHADDUDQrr\000VPHADDUWDrm\000VPHADDUWDrr\000VPHADDUWQrm\000VPHADDU"
    "WQrr\000VPHADDWDrm\000VPHADDWDrr\000VPHADDWQrm\000VPHADDWQrr\000VPHADDW"
    "rm128\000VPHADDWrm256\000VPHADDWrr128\000VPHADDWrr256\000VPHMINPOSUWrm1"
    "28\000VPHMINPOSUWrr128\000VPHSUBBWrm\000VPHSUBBWrr\000VPHSUBDQrm\000VPH"
    "SUBDQrr\000VPHSUBDrm128\000VPHSUBDrm256\000VPHSUBDrr128\000VPHSUBDrr256"
    "\000VPHSUBSWrm128\000VPHSUBSWrm256\000VPHSUBSWrr128\000VPHSUBSWrr256\000"
    "VPHSUBWDrm\000VPHSUBWDrr\000VPHSUBWrm128\000VPHSUBWrm256\000VPHSUBWrr12"
    "8\000VPHSUBWrr256\000VPINSRBrm\000VPINSRBrr\000VPINSRDrm\000VPINSRDrr\000"
    "VPINSRQrm\000VPINSRQrr\000VPINSRWrmi\000VPINSRWrr64i\000VPINSRWrri\000V"
    "PMACSDDrm\000VPMACSDDrr\000VPMACSDQHrm\000VPMACSDQHrr\000VPMACSDQLrm\000"
    "VPMACSDQLrr\000VPMACSSDDrm\000VPMACSSDDrr\000VPMACSSDQHrm\000VPMACSSDQH"
    "rr\000VPMACSSDQLrm\000VPMACSSDQLrr\000VPMACSSWDrm\000VPMACSSWDrr\000VPM"
    "ACSSWWrm\000VPMACSSWWrr\000VPMACSWDrm\000VPMACSWDrr\000VPMACSWWrm\000VP"
    "MACSWWrr\000VPMADCSSWDrm\000VPMADCSSWDrr\000VPMADCSWDrm\000VPMADCSWDrr\000"
    "VPMADDUBSWrm128\000VPMADDUBSWrm256\000VPMADDUBSWrr128\000VPMADDUBSWrr25"
    "6\000VPMADDWDYrm\000VPMADDWDYrr\000VPMADDWDrm\000VPMADDWDrr\000VPMASKMO"
    "VDYmr\000VPMASKMOVDYrm\000VPMASKMOVDmr\000VPMASKMOVDrm\000VPMASKMOVQYmr"
    "\000VPMASKMOVQYrm\000VPMASKMOVQmr\000VPMASKMOVQrm\000VPMAXSBYrm\000VPMA"
    "XSBYrr\000VPMAXSBrm\000VPMAXSBrr\000VPMAXSDYrm\000VPMAXSDYrr\000VPMAXSD"
    "rm\000VPMAXSDrr\000VPMAXSWYrm\000VPMAXSWYrr\000VPMAXSWrm\000VPMAXSWrr\000"
    "VPMAXUBYrm\000VPMAXUBYrr\000VPMAXUBrm\000VPMAXUBrr\000VPMAXUDYrm\000VPM"
    "AXUDYrr\000VPMAXUDrm\000VPMAXUDrr\000VPMAXUWYrm\000VPMAXUWYrr\000VPMAXU"
    "Wrm\000VPMAXUWrr\000VPMINSBYrm\000VPMINSBYrr\000VPMINSBrm\000VPMINSBrr\000"
    "VPMINSDYrm\000VPMINSDYrr\000VPMINSDrm\000VPMINSDrr\000VPMINSWYrm\000VPM"
    "INSWYrr\000VPMINSWrm\000VPMINSWrr\000VPMINUBYrm\000VPMINUBYrr\000VPMINU"
    "Brm\000VPMINUBrr\000VPMINUDYrm\000VPMINUDYrr\000VPMINUDrm\000VPMINUDrr\000"
    "VPMINUWYrm\000VPMINUWYrr\000VPMINUWrm\000VPMINUWrr\000VPMOVMSKBYr64r\000"
    "VPMOVMSKBYrr\000VPMOVMSKBr64r\000VPMOVMSKBrr\000VPMOVSXBDYrm\000VPMOVSX"
    "BDYrr\000VPMOVSXBDrm\000VPMOVSXBDrr\000VPMOVSXBQYrm\000VPMOVSXBQYrr\000"
    "VPMOVSXBQrm\000VPMOVSXBQrr\000VPMOVSXBWYrm\000VPMOVSXBWYrr\000VPMOVSXBW"
    "rm\000VPMOVSXBWrr\000VPMOVSXDQYrm\000VPMOVSXDQYrr\000VPMOVSXDQrm\000VPM"
    "OVSXDQrr\000VPMOVSXWDYrm\000VPMOVSXWDYrr\000VPMOVSXWDrm\000VPMOVSXWDrr\000"
    "VPMOVSXWQYrm\000VPMOVSXWQYrr\000VPMOVSXWQrm\000VPMOVSXWQrr\000VPMOVZXBD"
    "Yrm\000VPMOVZXBDYrr\000VPMOVZXBDrm\000VPMOVZXBDrr\000VPMOVZXBQYrm\000VP"
    "MOVZXBQYrr\000VPMOVZXBQrm\000VPMOVZXBQrr\000VPMOVZXBWYrm\000VPMOVZXBWYr"
    "r\000VPMOVZXBWrm\000VPMOVZXBWrr\000VPMOVZXDQYrm\000VPMOVZXDQYrr\000VPMO"
    "VZXDQrm\000VPMOVZXDQrr\000VPMOVZXWDYrm\000VPMOVZXWDYrr\000VPMOVZXWDrm\000"
    "VPMOVZXWDrr\000VPMOVZXWQYrm\000VPMOVZXWQYrr\000VPMOVZXWQrm\000VPMOVZXWQ"
    "rr\000VPMULDQYrm\000VPMULDQYrr\000VPMULDQrm\000VPMULDQrr\000VPMULHRSWrm"
    "128\000VPMULHRSWrm256\000VPMULHRSWrr128\000VPMULHRSWrr256\000VPMULHUWYr"
    "m\000VPMULHUWYrr\000VPMULHUWrm\000VPMULHUWrr\000VPMULHWYrm\000VPMULHWYr"
    "r\000VPMULHWrm\000VPMULHWrr\000VPMULLDYrm\000VPMULLDYrr\000VPMULLDrm\000"
    "VPMULLDrr\000VPMULLWYrm\000VPMULLWYrr\000VPMULLWrm\000VPMULLWrr\000VPMU"
    "LUDQYrm\000VPMULUDQYrr\000VPMULUDQrm\000VPMULUDQrr\000VPORYrm\000VPORYr"
    "r\000VPORrm\000VPORrr\000VPPERMmr\000VPPERMrm\000VPPERMrr\000VPROTBmi\000"
    "VPROTBmr\000VPROTBri\000VPROTBrm\000VPROTBrr\000VPROTDmi\000VPROTDmr\000"
    "VPROTDri\000VPROTDrm\000VPROTDrr\000VPROTQmi\000VPROTQmr\000VPROTQri\000"
    "VPROTQrm\000VPROTQrr\000VPROTWmi\000VPROTWmr\000VPROTWri\000VPROTWrm\000"
    "VPROTWrr\000VPSADBWYrm\000VPSADBWYrr\000VPSADBWrm\000VPSADBWrr\000VPSHA"
    "Bmr\000VPSHABrm\000VPSHABrr\000VPSHADmr\000VPSHADrm\000VPSHADrr\000VPSH"
    "AQmr\000VPSHAQrm\000VPSHAQrr\000VPSHAWmr\000VPSHAWrm\000VPSHAWrr\000VPS"
    "HLBmr\000VPSHLBrm\000VPSHLBrr\000VPSHLDmr\000VPSHLDrm\000VPSHLDrr\000VP"
    "SHLQmr\000VPSHLQrm\000VPSHLQrr\000VPSHLWmr\000VPSHLWrm\000VPSHLWrr\000V"
    "PSHUFBrm128\000VPSHUFBrm256\000VPSHUFBrr128\000VPSHUFBrr256\000VPSHUFDY"
    "mi\000VPSHUFDYri\000VPSHUFDmi\000VPSHUFDri\000VPSHUFHWYmi\000VPSHUFHWYr"
    "i\000VPSHUFHWmi\000VPSHUFHWri\000VPSHUFLWYmi\000VPSHUFLWYri\000VPSHUFLW"
    "mi\000VPSHUFLWri\000VPSIGNBrm128\000VPSIGNBrm256\000VPSIGNBrr128\000VPS"
    "IGNBrr256\000VPSIGNDrm128\000VPSIGNDrm256\000VPSIGNDrr128\000VPSIGNDrr2"
    "56\000VPSIGNWrm128\000VPSIGNWrm256\000VPSIGNWrr128\000VPSIGNWrr256\000V"
    "PSLLDQYri\000VPSLLDQri\000VPSLLDYri\000VPSLLDYrm\000VPSLLDYrr\000VPSLLD"
    "ri\000VPSLLDrm\000VPSLLDrr\000VPSLLQYri\000VPSLLQYrm\000VPSLLQYrr\000VP"
    "SLLQri\000VPSLLQrm\000VPSLLQrr\000VPSLLVDYrm\000VPSLLVDYrr\000VPSLLVDrm"
    "\000VPSLLVDrr\000VPSLLVQYrm\000VPSLLVQYrr\000VPSLLVQrm\000VPSLLVQrr\000"
    "VPSLLWYri\000VPSLLWYrm\000VPSLLWYrr\000VPSLLWri\000VPSLLWrm\000VPSLLWrr"
    "\000VPSRADYri\000VPSRADYrm\000VPSRADYrr\000VPSRADri\000VPSRADrm\000VPSR"
    "ADrr\000VPSRAVDYrm\000VPSRAVDYrr\000VPSRAVDrm\000VPSRAVDrr\000VPSRAWYri"
    "\000VPSRAWYrm\000VPSRAWYrr\000VPSRAWri\000VPSRAWrm\000VPSRAWrr\000VPSRL"
    "DQYri\000VPSRLDQri\000VPSRLDYri\000VPSRLDYrm\000VPSRLDYrr\000VPSRLDri\000"
    "VPSRLDrm\000VPSRLDrr\000VPSRLQYri\000VPSRLQYrm\000VPSRLQYrr\000VPSRLQri"
    "\000VPSRLQrm\000VPSRLQrr\000VPSRLVDYrm\000VPSRLVDYrr\000VPSRLVDrm\000VP"
    "SRLVDrr\000VPSRLVQYrm\000VPSRLVQYrr\000VPSRLVQrm\000VPSRLVQrr\000VPSRLW"
    "Yri\000VPSRLWYrm\000VPSRLWYrr\000VPSRLWri\000VPSRLWrm\000VPSRLWrr\000VP"
    "SUBBYrm\000VPSUBBYrr\000VPSUBBrm\000VPSUBBrr\000VPSUBDYrm\000VPSUBDYrr\000"
    "VPSUBDrm\000VPSUBDrr\000VPSUBQYrm\000VPSUBQYrr\000VPSUBQrm\000VPSUBQrr\000"
    "VPSUBSBYrm\000VPSUBSBYrr\000VPSUBSBrm\000VPSUBSBrr\000VPSUBSWYrm\000VPS"
    "UBSWYrr\000VPSUBSWrm\000VPSUBSWrr\000VPSUBUSBYrm\000VPSUBUSBYrr\000VPSU"
    "BUSBrm\000VPSUBUSBrr\000VPSUBUSWYrm\000VPSUBUSWYrr\000VPSUBUSWrm\000VPS"
    "UBUSWrr\000VPSUBWYrm\000VPSUBWYrr\000VPSUBWrm\000VPSUBWrr\000VPTESTYrm\000"
    "VPTESTYrr\000VPTESTrm\000VPTESTrr\000VPUNPCKHBWYrm\000VPUNPCKHBWYrr\000"
    "VPUNPCKHBWrm\000VPUNPCKHBWrr\000VPUNPCKHDQYrm\000VPUNPCKHDQYrr\000VPUNP"
    "CKHDQrm\000VPUNPCKHDQrr\000VPUNPCKHQDQYrm\000VPUNPCKHQDQYrr\000VPUNPCKH"
    "QDQrm\000VPUNPCKHQDQrr\000VPUNPCKHWDYrm\000VPUNPCKHWDYrr\000VPUNPCKHWDr"
    "m\000VPUNPCKHWDrr\000VPUNPCKLBWYrm\000VPUNPCKLBWYrr\000VPUNPCKLBWrm\000"
    "VPUNPCKLBWrr\000VPUNPCKLDQYrm\000VPUNPCKLDQYrr\000VPUNPCKLDQrm\000VPUNP"
    "CKLDQrr\000VPUNPCKLQDQYrm\000VPUNPCKLQDQYrr\000VPUNPCKLQDQrm\000VPUNPCK"
    "LQDQrr\000VPUNPCKLWDYrm\000VPUNPCKLWDYrr\000VPUNPCKLWDrm\000VPUNPCKLWDr"
    "r\000VPXORYrm\000VPXORYrr\000VPXORrm\000VPXORrr\000VRCPPSYm\000VRCPPSYm"
    "_Int\000VRCPPSYr\000VRCPPSYr_Int\000VRCPPSm\000VRCPPSm_Int\000VRCPPSr\000"
    "VRCPPSr_Int\000VRCPSSm\000VRCPSSm_Int\000VRCPSSr\000VROUNDPDm\000VROUND"
    "PDr\000VROUNDPSm\000VROUNDPSr\000VROUNDSDm\000VROUNDSDr\000VROUNDSDr_In"
    "t\000VROUNDSSm\000VROUNDSSr\000VROUNDSSr_Int\000VROUNDYPDm\000VROUNDYPD"
    "r\000VROUNDYPSm\000VROUNDYPSr\000VRSQRTPSYm\000VRSQRTPSYm_Int\000VRSQRT"
    "PSYr\000VRSQRTPSYr_Int\000VRSQRTPSm\000VRSQRTPSm_Int\000VRSQRTPSr\000VR"
    "SQRTPSr_Int\000VRSQRTSSm\000VRSQRTSSm_Int\000VRSQRTSSr\000VSHUFPDYrmi\000"
    "VSHUFPDYrri\000VSHUFPDrmi\000VSHUFPDrri\000VSHUFPSYrmi\000VSHUFPSYrri\000"
    "VSHUFPSrmi\000VSHUFPSrri\000VSQRTPDYm\000VSQRTPDYm_Int\000VSQRTPDYr\000"
    "VSQRTPDYr_Int\000VSQRTPDm\000VSQRTPDm_Int\000VSQRTPDr\000VSQRTPDr_Int\000"
    "VSQRTPSYm\000VSQRTPSYm_Int\000VSQRTPSYr\000VSQRTPSYr_Int\000VSQRTPSm\000"
    "VSQRTPSm_Int\000VSQRTPSr\000VSQRTPSr_Int\000VSQRTSDm\000VSQRTSDm_Int\000"
    "VSQRTSDr\000VSQRTSSm\000VSQRTSSm_Int\000VSQRTSSr\000VSTMXCSR\000VSUBPDY"
    "rm\000VSUBPDYrr\000VSUBPDrm\000VSUBPDrr\000VSUBPSYrm\000VSUBPSYrr\000VS"
    "UBPSrm\000VSUBPSrr\000VSUBSDrm\000VSUBSDrm_Int\000VSUBSDrr\000VSUBSDrr_"
    "Int\000VSUBSSrm\000VSUBSSrm_Int\000VSUBSSrr\000VSUBSSrr_Int\000VTESTPDY"
    "rm\000VTESTPDYrr\000VTESTPDrm\000VTESTPDrr\000VTESTPSYrm\000VTESTPSYrr\000"
    "VTESTPSrm\000VTESTPSrr\000VUCOMISDrm\000VUCOMISDrr\000VUCOMISSrm\000VUC"
    "OMISSrr\000VUNPCKHPDYrm\000VUNPCKHPDYrr\000VUNPCKHPDrm\000VUNPCKHPDrr\000"
    "VUNPCKHPSYrm\000VUNPCKHPSYrr\000VUNPCKHPSrm\000VUNPCKHPSrr\000VUNPCKLPD"
    "Yrm\000VUNPCKLPDYrr\000VUNPCKLPDrm\000VUNPCKLPDrr\000VUNPCKLPSYrm\000VU"
    "NPCKLPSYrr\000VUNPCKLPSrm\000VUNPCKLPSrr\000VXORPDYrm\000VXORPDYrr\000V"
    "XORPDrm\000VXORPDrr\000VXORPSYrm\000VXORPSYrr\000VXORPSrm\000VXORPSrr\000"
    "VZEROALL\000VZEROUPPER\000V_SET0\000V_SETALLONES\000W64ALLOCA\000WAIT\000"
    "WBINVD\000WINCALL64m\000WINCALL64pcrel32\000WINCALL64r\000WIN_ALLOCA\000"
    "WRFSBASE\000WRFSBASE64\000WRGSBASE\000WRGSBASE64\000WRMSR\000XADD16rm\000"
    "XADD16rr\000XADD32rm\000XADD32rr\000XADD64rm\000XADD64rr\000XADD8rm\000"
    "XADD8rr\000XCHG16ar\000XCHG16rm\000XCHG16rr\000XCHG32ar\000XCHG32ar64\000"
    "XCHG32rm\000XCHG32rr\000XCHG64ar\000XCHG64rm\000XCHG64rr\000XCHG8rm\000"
    "XCHG8rr\000XCH_F\000XCRYPTCBC\000XCRYPTCFB\000XCRYPTCTR\000XCRYPTECB\000"
    "XCRYPTOFB\000XGETBV\000XLAT\000XOR16i16\000XOR16mi\000XOR16mi8\000XOR16"
    "mr\000XOR16ri\000XOR16ri8\000XOR16rm\000XOR16rr\000XOR16rr_REV\000XOR32"
    "i32\000XOR32mi\000XOR32mi8\000XOR32mr\000XOR32ri\000XOR32ri8\000XOR32rm"
    "\000XOR32rr\000XOR32rr_REV\000XOR64i32\000XOR64mi32\000XOR64mi8\000XOR6"
    "4mr\000XOR64ri32\000XOR64ri8\000XOR64rm\000XOR64rr\000XOR64rr_REV\000XO"
    "R8i8\000XOR8mi\000XOR8mr\000XOR8ri\000XOR8rm\000XOR8rr\000XOR8rr_REV\000"
    "XORPDrm\000XORPDrr\000XORPSrm\000XORPSrr\000XRSTOR\000XRSTOR64\000XSAVE"
    "\000XSAVE64\000XSAVEOPT\000XSAVEOPT64\000XSETBV\000XSHA1\000XSHA256\000"
    "XSTORE\000";
  return Strs+InstAsmOffset[Opcode];
}

#endif

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

namespace { // Register classes
  enum RegClass {
    RC_GR8,
    RC_GR64,
    RC_GR16,
    RC_GR32,
    RC_FR32,
    RC_GR64_with_sub_8bit,
    RC_FR64,
    RC_CONTROL_REG,
    RC_VR128,
    RC_VR256,
    RC_GR32_NOSP,
    RC_GR32_NOAX,
    RC_GR64_with_sub_32bit_in_GR32_NOAX,
    RC_GR64_NOSP,
    RC_GR32_NOAX_and_GR32_NOSP,
    RC_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSP,
    RC_GR64_TC,
    RC_GR64_NOREX,
    RC_GR8_NOREX,
    RC_GR16_NOREX,
    RC_GR32_NOREX,
    RC_DEBUG_REG,
    RC_VR64,
    RC_GR64_with_sub_16bit_in_GR16_NOREX,
    RC_GR64_NOSP_and_GR64_TC,
    RC_RST,
    RC_RFP32,
    RC_GR32_NOREX_NOSP,
    RC_GR32_NOAX_and_GR32_NOREX,
    RC_RFP64,
    RC_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX,
    RC_GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX,
    RC_GR64_NOREX_NOSP,
    RC_RFP80,
    RC_SEGMENT_REG,
    RC_GR32_NOAX_and_GR32_NOREX_NOSP,
    RC_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSP,
    RC_GR64_TCW64,
    RC_GR64_NOREX_and_GR64_TC,
    RC_GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAX,
    RC_GR64_NOREX_NOSP_and_GR64_TC,
    RC_GR8_ABCD_L,
    RC_GR8_ABCD_H,
    RC_GR16_ABCD,
    RC_GR32_ABCD,
    RC_GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX,
    RC_GR64_ABCD,
    RC_GR32_TC,
    RC_GR32_ABCD_and_GR32_NOAX,
    RC_GR64_with_sub_32bit_in_GR32_TC,
    RC_GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAX,
    RC_GR32_NOAX_and_GR32_TC,
    RC_GR32_AD,
    RC_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TC,
    RC_GR64_with_sub_32bit_in_GR32_AD,
    RC_GR32_AD_and_GR32_NOAX,
    RC_CCR,
    RC_GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAX
  };
} // end anonymous namespace

static bool regIsInRegisterClass(unsigned RegClass, unsigned Reg) {
  switch (RegClass) {
  default: break;
  case RC_GR8:
    switch (Reg) {
    default: break;
    case X86::AL:
    case X86::CL:
    case X86::DL:
    case X86::AH:
    case X86::CH:
    case X86::DH:
    case X86::BL:
    case X86::BH:
    case X86::SIL:
    case X86::DIL:
    case X86::BPL:
    case X86::SPL:
    case X86::R8B:
    case X86::R9B:
    case X86::R10B:
    case X86::R11B:
    case X86::R14B:
    case X86::R15B:
    case X86::R12B:
    case X86::R13B:
      return true;
    }
    break;
  case RC_GR64:
    switch (Reg) {
    default: break;
    case X86::RAX:
    case X86::RCX:
    case X86::RDX:
    case X86::RSI:
    case X86::RDI:
    case X86::R8:
    case X86::R9:
    case X86::R10:
    case X86::R11:
    case X86::RBX:
    case X86::R14:
    case X86::R15:
    case X86::R12:
    case X86::R13:
    case X86::RBP:
    case X86::RSP:
    case X86::RIP:
      return true;
    }
    break;
  case RC_GR16:
    switch (Reg) {
    default: break;
    case X86::AX:
    case X86::CX:
    case X86::DX:
    case X86::SI:
    case X86::DI:
    case X86::BX:
    case X86::BP:
    case X86::SP:
    case X86::R8W:
    case X86::R9W:
    case X86::R10W:
    case X86::R11W:
    case X86::R14W:
    case X86::R15W:
    case X86::R12W:
    case X86::R13W:
      return true;
    }
    break;
  case RC_GR32:
    switch (Reg) {
    default: break;
    case X86::EAX:
    case X86::ECX:
    case X86::EDX:
    case X86::ESI:
    case X86::EDI:
    case X86::EBX:
    case X86::EBP:
    case X86::ESP:
    case X86::R8D:
    case X86::R9D:
    case X86::R10D:
    case X86::R11D:
    case X86::R14D:
    case X86::R15D:
    case X86::R12D:
    case X86::R13D:
      return true;
    }
    break;
  case RC_FR32:
    switch (Reg) {
    default: break;
    case X86::XMM0:
    case X86::XMM1:
    case X86::XMM2:
    case X86::XMM3:
    case X86::XMM4:
    case X86::XMM5:
    case X86::XMM6:
    case X86::XMM7:
    case X86::XMM8:
    case X86::XMM9:
    case X86::XMM10:
    case X86::XMM11:
    case X86::XMM12:
    case X86::XMM13:
    case X86::XMM14:
    case X86::XMM15:
      return true;
    }
    break;
  case RC_GR64_with_sub_8bit:
    switch (Reg) {
    default: break;
    case X86::RAX:
    case X86::RCX:
    case X86::RDX:
    case X86::RSI:
    case X86::RDI:
    case X86::R8:
    case X86::R9:
    case X86::R10:
    case X86::R11:
    case X86::RBX:
    case X86::R14:
    case X86::R15:
    case X86::R12:
    case X86::R13:
    case X86::RBP:
    case X86::RSP:
      return true;
    }
    break;
  case RC_FR64:
    switch (Reg) {
    default: break;
    case X86::XMM0:
    case X86::XMM1:
    case X86::XMM2:
    case X86::XMM3:
    case X86::XMM4:
    case X86::XMM5:
    case X86::XMM6:
    case X86::XMM7:
    case X86::XMM8:
    case X86::XMM9:
    case X86::XMM10:
    case X86::XMM11:
    case X86::XMM12:
    case X86::XMM13:
    case X86::XMM14:
    case X86::XMM15:
      return true;
    }
    break;
  case RC_CONTROL_REG:
    switch (Reg) {
    default: break;
    case X86::CR0:
    case X86::CR1:
    case X86::CR2:
    case X86::CR3:
    case X86::CR4:
    case X86::CR5:
    case X86::CR6:
    case X86::CR7:
    case X86::CR8:
    case X86::CR9:
    case X86::CR10:
    case X86::CR11:
    case X86::CR12:
    case X86::CR13:
    case X86::CR14:
    case X86::CR15:
      return true;
    }
    break;
  case RC_VR128:
    switch (Reg) {
    default: break;
    case X86::XMM0:
    case X86::XMM1:
    case X86::XMM2:
    case X86::XMM3:
    case X86::XMM4:
    case X86::XMM5:
    case X86::XMM6:
    case X86::XMM7:
    case X86::XMM8:
    case X86::XMM9:
    case X86::XMM10:
    case X86::XMM11:
    case X86::XMM12:
    case X86::XMM13:
    case X86::XMM14:
    case X86::XMM15:
      return true;
    }
    break;
  case RC_VR256:
    switch (Reg) {
    default: break;
    case X86::YMM0:
    case X86::YMM1:
    case X86::YMM2:
    case X86::YMM3:
    case X86::YMM4:
    case X86::YMM5:
    case X86::YMM6:
    case X86::YMM7:
    case X86::YMM8:
    case X86::YMM9:
    case X86::YMM10:
    case X86::YMM11:
    case X86::YMM12:
    case X86::YMM13:
    case X86::YMM14:
    case X86::YMM15:
      return true;
    }
    break;
  case RC_GR32_NOSP:
    switch (Reg) {
    default: break;
    case X86::EAX:
    case X86::ECX:
    case X86::EDX:
    case X86::ESI:
    case X86::EDI:
    case X86::EBX:
    case X86::EBP:
    case X86::R8D:
    case X86::R9D:
    case X86::R10D:
    case X86::R11D:
    case X86::R14D:
    case X86::R15D:
    case X86::R12D:
    case X86::R13D:
      return true;
    }
    break;
  case RC_GR32_NOAX:
    switch (Reg) {
    default: break;
    case X86::ECX:
    case X86::EDX:
    case X86::ESI:
    case X86::EDI:
    case X86::EBX:
    case X86::EBP:
    case X86::ESP:
    case X86::R8D:
    case X86::R9D:
    case X86::R10D:
    case X86::R11D:
    case X86::R14D:
    case X86::R15D:
    case X86::R12D:
    case X86::R13D:
      return true;
    }
    break;
  case RC_GR64_with_sub_32bit_in_GR32_NOAX:
    switch (Reg) {
    default: break;
    case X86::RCX:
    case X86::RDX:
    case X86::RSI:
    case X86::RDI:
    case X86::R8:
    case X86::R9:
    case X86::R10:
    case X86::R11:
    case X86::RBX:
    case X86::R14:
    case X86::R15:
    case X86::R12:
    case X86::R13:
    case X86::RBP:
    case X86::RSP:
      return true;
    }
    break;
  case RC_GR64_NOSP:
    switch (Reg) {
    default: break;
    case X86::RAX:
    case X86::RCX:
    case X86::RDX:
    case X86::RSI:
    case X86::RDI:
    case X86::R8:
    case X86::R9:
    case X86::R10:
    case X86::R11:
    case X86::RBX:
    case X86::R14:
    case X86::R15:
    case X86::R12:
    case X86::R13:
    case X86::RBP:
      return true;
    }
    break;
  case RC_GR32_NOAX_and_GR32_NOSP:
    switch (Reg) {
    default: break;
    case X86::ECX:
    case X86::EDX:
    case X86::ESI:
    case X86::EDI:
    case X86::EBX:
    case X86::EBP:
    case X86::R8D:
    case X86::R9D:
    case X86::R10D:
    case X86::R11D:
    case X86::R14D:
    case X86::R15D:
    case X86::R12D:
    case X86::R13D:
      return true;
    }
    break;
  case RC_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSP:
    switch (Reg) {
    default: break;
    case X86::RCX:
    case X86::RDX:
    case X86::RSI:
    case X86::RDI:
    case X86::R8:
    case X86::R9:
    case X86::R10:
    case X86::R11:
    case X86::RBX:
    case X86::R14:
    case X86::R15:
    case X86::R12:
    case X86::R13:
    case X86::RBP:
      return true;
    }
    break;
  case RC_GR64_TC:
    switch (Reg) {
    default: break;
    case X86::RAX:
    case X86::RCX:
    case X86::RDX:
    case X86::RSI:
    case X86::RDI:
    case X86::R8:
    case X86::R9:
    case X86::R11:
    case X86::RIP:
      return true;
    }
    break;
  case RC_GR64_NOREX:
    switch (Reg) {
    default: break;
    case X86::RAX:
    case X86::RCX:
    case X86::RDX:
    case X86::RSI:
    case X86::RDI:
    case X86::RBX:
    case X86::RBP:
    case X86::RSP:
    case X86::RIP:
      return true;
    }
    break;
  case RC_GR8_NOREX:
    switch (Reg) {
    default: break;
    case X86::AL:
    case X86::CL:
    case X86::DL:
    case X86::AH:
    case X86::CH:
    case X86::DH:
    case X86::BL:
    case X86::BH:
      return true;
    }
    break;
  case RC_GR16_NOREX:
    switch (Reg) {
    default: break;
    case X86::AX:
    case X86::CX:
    case X86::DX:
    case X86::SI:
    case X86::DI:
    case X86::BX:
    case X86::BP:
    case X86::SP:
      return true;
    }
    break;
  case RC_GR32_NOREX:
    switch (Reg) {
    default: break;
    case X86::EAX:
    case X86::ECX:
    case X86::EDX:
    case X86::ESI:
    case X86::EDI:
    case X86::EBX:
    case X86::EBP:
    case X86::ESP:
      return true;
    }
    break;
  case RC_DEBUG_REG:
    switch (Reg) {
    default: break;
    case X86::DR0:
    case X86::DR1:
    case X86::DR2:
    case X86::DR3:
    case X86::DR4:
    case X86::DR5:
    case X86::DR6:
    case X86::DR7:
      return true;
    }
    break;
  case RC_VR64:
    switch (Reg) {
    default: break;
    case X86::MM0:
    case X86::MM1:
    case X86::MM2:
    case X86::MM3:
    case X86::MM4:
    case X86::MM5:
    case X86::MM6:
    case X86::MM7:
      return true;
    }
    break;
  case RC_GR64_with_sub_16bit_in_GR16_NOREX:
    switch (Reg) {
    default: break;
    case X86::RAX:
    case X86::RCX:
    case X86::RDX:
    case X86::RSI:
    case X86::RDI:
    case X86::RBX:
    case X86::RBP:
    case X86::RSP:
      return true;
    }
    break;
  case RC_GR64_NOSP_and_GR64_TC:
    switch (Reg) {
    default: break;
    case X86::RAX:
    case X86::RCX:
    case X86::RDX:
    case X86::RSI:
    case X86::RDI:
    case X86::R8:
    case X86::R9:
    case X86::R11:
      return true;
    }
    break;
  case RC_RST:
    switch (Reg) {
    default: break;
    case X86::ST0:
    case X86::ST1:
    case X86::ST2:
    case X86::ST3:
    case X86::ST4:
    case X86::ST5:
    case X86::ST6:
    case X86::ST7:
      return true;
    }
    break;
  case RC_RFP32:
    switch (Reg) {
    default: break;
    case X86::FP0:
    case X86::FP1:
    case X86::FP2:
    case X86::FP3:
    case X86::FP4:
    case X86::FP5:
    case X86::FP6:
      return true;
    }
    break;
  case RC_GR32_NOREX_NOSP:
    switch (Reg) {
    default: break;
    case X86::EAX:
    case X86::ECX:
    case X86::EDX:
    case X86::ESI:
    case X86::EDI:
    case X86::EBX:
    case X86::EBP:
      return true;
    }
    break;
  case RC_GR32_NOAX_and_GR32_NOREX:
    switch (Reg) {
    default: break;
    case X86::ECX:
    case X86::EDX:
    case X86::ESI:
    case X86::EDI:
    case X86::EBX:
    case X86::EBP:
    case X86::ESP:
      return true;
    }
    break;
  case RC_RFP64:
    switch (Reg) {
    default: break;
    case X86::FP0:
    case X86::FP1:
    case X86::FP2:
    case X86::FP3:
    case X86::FP4:
    case X86::FP5:
    case X86::FP6:
      return true;
    }
    break;
  case RC_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX:
    switch (Reg) {
    default: break;
    case X86::RCX:
    case X86::RDX:
    case X86::RSI:
    case X86::RDI:
    case X86::RBX:
    case X86::RBP:
    case X86::RSP:
      return true;
    }
    break;
  case RC_GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX:
    switch (Reg) {
    default: break;
    case X86::RCX:
    case X86::RDX:
    case X86::RSI:
    case X86::RDI:
    case X86::R8:
    case X86::R9:
    case X86::R11:
      return true;
    }
    break;
  case RC_GR64_NOREX_NOSP:
    switch (Reg) {
    default: break;
    case X86::RAX:
    case X86::RCX:
    case X86::RDX:
    case X86::RSI:
    case X86::RDI:
    case X86::RBX:
    case X86::RBP:
      return true;
    }
    break;
  case RC_RFP80:
    switch (Reg) {
    default: break;
    case X86::FP0:
    case X86::FP1:
    case X86::FP2:
    case X86::FP3:
    case X86::FP4:
    case X86::FP5:
    case X86::FP6:
      return true;
    }
    break;
  case RC_SEGMENT_REG:
    switch (Reg) {
    default: break;
    case X86::CS:
    case X86::DS:
    case X86::SS:
    case X86::ES:
    case X86::FS:
    case X86::GS:
      return true;
    }
    break;
  case RC_GR32_NOAX_and_GR32_NOREX_NOSP:
    switch (Reg) {
    default: break;
    case X86::ECX:
    case X86::EDX:
    case X86::ESI:
    case X86::EDI:
    case X86::EBX:
    case X86::EBP:
      return true;
    }
    break;
  case RC_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSP:
    switch (Reg) {
    default: break;
    case X86::RCX:
    case X86::RDX:
    case X86::RSI:
    case X86::RDI:
    case X86::RBX:
    case X86::RBP:
      return true;
    }
    break;
  case RC_GR64_TCW64:
    switch (Reg) {
    default: break;
    case X86::RAX:
    case X86::RCX:
    case X86::RDX:
    case X86::R8:
    case X86::R9:
    case X86::R11:
      return true;
    }
    break;
  case RC_GR64_NOREX_and_GR64_TC:
    switch (Reg) {
    default: break;
    case X86::RAX:
    case X86::RCX:
    case X86::RDX:
    case X86::RSI:
    case X86::RDI:
    case X86::RIP:
      return true;
    }
    break;
  case RC_GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAX:
    switch (Reg) {
    default: break;
    case X86::RCX:
    case X86::RDX:
    case X86::R8:
    case X86::R9:
    case X86::R11:
      return true;
    }
    break;
  case RC_GR64_NOREX_NOSP_and_GR64_TC:
    switch (Reg) {
    default: break;
    case X86::RAX:
    case X86::RCX:
    case X86::RDX:
    case X86::RSI:
    case X86::RDI:
      return true;
    }
    break;
  case RC_GR8_ABCD_L:
    switch (Reg) {
    default: break;
    case X86::AL:
    case X86::CL:
    case X86::DL:
    case X86::BL:
      return true;
    }
    break;
  case RC_GR8_ABCD_H:
    switch (Reg) {
    default: break;
    case X86::AH:
    case X86::CH:
    case X86::DH:
    case X86::BH:
      return true;
    }
    break;
  case RC_GR16_ABCD:
    switch (Reg) {
    default: break;
    case X86::AX:
    case X86::CX:
    case X86::DX:
    case X86::BX:
      return true;
    }
    break;
  case RC_GR32_ABCD:
    switch (Reg) {
    default: break;
    case X86::EAX:
    case X86::ECX:
    case X86::EDX:
    case X86::EBX:
      return true;
    }
    break;
  case RC_GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX:
    switch (Reg) {
    default: break;
    case X86::RCX:
    case X86::RDX:
    case X86::RSI:
    case X86::RDI:
      return true;
    }
    break;
  case RC_GR64_ABCD:
    switch (Reg) {
    default: break;
    case X86::RAX:
    case X86::RCX:
    case X86::RDX:
    case X86::RBX:
      return true;
    }
    break;
  case RC_GR32_TC:
    switch (Reg) {
    default: break;
    case X86::EAX:
    case X86::ECX:
    case X86::EDX:
      return true;
    }
    break;
  case RC_GR32_ABCD_and_GR32_NOAX:
    switch (Reg) {
    default: break;
    case X86::ECX:
    case X86::EDX:
    case X86::EBX:
      return true;
    }
    break;
  case RC_GR64_with_sub_32bit_in_GR32_TC:
    switch (Reg) {
    default: break;
    case X86::RAX:
    case X86::RCX:
    case X86::RDX:
      return true;
    }
    break;
  case RC_GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAX:
    switch (Reg) {
    default: break;
    case X86::RCX:
    case X86::RDX:
    case X86::RBX:
      return true;
    }
    break;
  case RC_GR32_NOAX_and_GR32_TC:
    switch (Reg) {
    default: break;
    case X86::ECX:
    case X86::EDX:
      return true;
    }
    break;
  case RC_GR32_AD:
    switch (Reg) {
    default: break;
    case X86::EAX:
    case X86::EDX:
      return true;
    }
    break;
  case RC_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TC:
    switch (Reg) {
    default: break;
    case X86::RCX:
    case X86::RDX:
      return true;
    }
    break;
  case RC_GR64_with_sub_32bit_in_GR32_AD:
    switch (Reg) {
    default: break;
    case X86::RAX:
    case X86::RDX:
      return true;
    }
    break;
  case RC_GR32_AD_and_GR32_NOAX:
    if (Reg == X86::EDX)
      return true;
    break;
  case RC_CCR:
    if (Reg == X86::EFLAGS)
      return true;
    break;
  case RC_GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAX:
    if (Reg == X86::RDX)
      return true;
    break;
  }

  return false;
}

static unsigned getMapOperandNumber(const SmallVectorImpl<std::pair<StringRef, unsigned> > &OpMap,
                                    StringRef Name) {
  for (SmallVectorImpl<std::pair<StringRef, unsigned> >::const_iterator
         I = OpMap.begin(), E = OpMap.end(); I != E; ++I)
    if (I->first == Name)
      return I->second;
  assert(false && "Operand not in map!");
  return 0;
}

bool X86ATTInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
  StringRef AsmString;
  SmallVector<std::pair<StringRef, unsigned>, 4> OpMap;
  switch (MI->getOpcode()) {
  default: return false;
  case X86::AAD8i8:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).getImm() == 10) {
      // (AAD8i8 10)
      AsmString = "aad";
      break;
    }
    return false;
  case X86::AAM8i8:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).getImm() == 10) {
      // (AAM8i8 10)
      AsmString = "aam";
      break;
    }
    return false;
  case X86::COM_FIPr:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).getReg() == X86::ST1) {
      // (COM_FIPr ST1)
      AsmString = "fcompi";
      break;
    }
    return false;
  case X86::COM_FIr:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).getReg() == X86::ST1) {
      // (COM_FIr ST1)
      AsmString = "fcomi";
      break;
    }
    return false;
  case X86::DIVR_FPrST0:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).getReg() == X86::ST1) {
      // (DIVR_FPrST0 ST1)
      AsmString = "fdivp";
      break;
    }
    return false;
  case X86::DIV_FPrST0:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).getReg() == X86::ST1) {
      // (DIV_FPrST0 ST1)
      AsmString = "fdivrp";
      break;
    }
    return false;
  case X86::FNSTSW8r:
    if (MI->getNumOperands() == 0) {
      // (FNSTSW8r)
      AsmString = "fnstsw";
      break;
    }
    return false;
  case X86::IN16rr:
    if (MI->getNumOperands() == 0) {
      // (IN16rr)
      AsmString = "inw %dx";
      break;
    }
    return false;
  case X86::IN32rr:
    if (MI->getNumOperands() == 0) {
      // (IN32rr)
      AsmString = "inl %dx";
      break;
    }
    return false;
  case X86::IN8rr:
    if (MI->getNumOperands() == 0) {
      // (IN8rr)
      AsmString = "inb %dx";
      break;
    }
    return false;
  case X86::MOVSD:
    if (MI->getNumOperands() == 0) {
      // (MOVSD)
      AsmString = "movsd";
      break;
    }
    return false;
  case X86::MUL_FPrST0:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).getReg() == X86::ST1) {
      // (MUL_FPrST0 ST1)
      AsmString = "fmulp";
      break;
    }
    return false;
  case X86::OUT16rr:
    if (MI->getNumOperands() == 0) {
      // (OUT16rr)
      AsmString = "outw %dx";
      break;
    }
    return false;
  case X86::OUT32rr:
    if (MI->getNumOperands() == 0) {
      // (OUT32rr)
      AsmString = "outl %dx";
      break;
    }
    return false;
  case X86::OUT8rr:
    if (MI->getNumOperands() == 0) {
      // (OUT8rr)
      AsmString = "outb %dx";
      break;
    }
    return false;
  case X86::SHLD16rri8:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        regIsInRegisterClass(RC_GR16, MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        regIsInRegisterClass(RC_GR16, MI->getOperand(1).getReg()) &&
        MI->getOperand(2).getImm() == 1) {
      // (SHLD16rri8 GR16:$r1, GR16:$r2, 1)
      AsmString = "shldw $r1, $r2";
      OpMap.push_back(std::make_pair("r1", 0));
      OpMap.push_back(std::make_pair("r2", 1));
      break;
    }
    return false;
  case X86::SHLD32rri8:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        regIsInRegisterClass(RC_GR32, MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        regIsInRegisterClass(RC_GR32, MI->getOperand(1).getReg()) &&
        MI->getOperand(2).getImm() == 1) {
      // (SHLD32rri8 GR32:$r1, GR32:$r2, 1)
      AsmString = "shldl $r1, $r2";
      OpMap.push_back(std::make_pair("r1", 0));
      OpMap.push_back(std::make_pair("r2", 1));
      break;
    }
    return false;
  case X86::SHLD64rri8:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        regIsInRegisterClass(RC_GR64, MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        regIsInRegisterClass(RC_GR64, MI->getOperand(1).getReg()) &&
        MI->getOperand(2).getImm() == 1) {
      // (SHLD64rri8 GR64:$r1, GR64:$r2, 1)
      AsmString = "shldq $r1, $r2";
      OpMap.push_back(std::make_pair("r1", 0));
      OpMap.push_back(std::make_pair("r2", 1));
      break;
    }
    return false;
  case X86::SHRD16rri8:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        regIsInRegisterClass(RC_GR16, MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        regIsInRegisterClass(RC_GR16, MI->getOperand(1).getReg()) &&
        MI->getOperand(2).getImm() == 1) {
      // (SHRD16rri8 GR16:$r1, GR16:$r2, 1)
      AsmString = "shrdw $r1, $r2";
      OpMap.push_back(std::make_pair("r1", 0));
      OpMap.push_back(std::make_pair("r2", 1));
      break;
    }
    return false;
  case X86::SHRD32rri8:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        regIsInRegisterClass(RC_GR32, MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        regIsInRegisterClass(RC_GR32, MI->getOperand(1).getReg()) &&
        MI->getOperand(2).getImm() == 1) {
      // (SHRD32rri8 GR32:$r1, GR32:$r2, 1)
      AsmString = "shrdl $r1, $r2";
      OpMap.push_back(std::make_pair("r1", 0));
      OpMap.push_back(std::make_pair("r2", 1));
      break;
    }
    return false;
  case X86::SHRD64rri8:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        regIsInRegisterClass(RC_GR64, MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        regIsInRegisterClass(RC_GR64, MI->getOperand(1).getReg()) &&
        MI->getOperand(2).getImm() == 1) {
      // (SHRD64rri8 GR64:$r1, GR64:$r2, 1)
      AsmString = "shrdq $r1, $r2";
      OpMap.push_back(std::make_pair("r1", 0));
      OpMap.push_back(std::make_pair("r2", 1));
      break;
    }
    return false;
  case X86::SUBR_FPrST0:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).getReg() == X86::ST1) {
      // (SUBR_FPrST0 ST1)
      AsmString = "fsubp";
      break;
    }
    return false;
  case X86::SUB_FPrST0:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).getReg() == X86::ST1) {
      // (SUB_FPrST0 ST1)
      AsmString = "fsubrp";
      break;
    }
    return false;
  case X86::UCOM_FIPr:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).getReg() == X86::ST1) {
      // (UCOM_FIPr ST1)
      AsmString = "fucompi";
      break;
    }
    return false;
  case X86::UCOM_FIr:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).getReg() == X86::ST1) {
      // (UCOM_FIr ST1)
      AsmString = "fucomi";
      break;
    }
    return false;
  case X86::UCOM_FPr:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).getReg() == X86::ST1) {
      // (UCOM_FPr ST1)
      AsmString = "fucomp";
      break;
    }
    return false;
  case X86::UCOM_Fr:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).getReg() == X86::ST1) {
      // (UCOM_Fr ST1)
      AsmString = "fucom";
      break;
    }
    return false;
  case X86::XCH_F:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).getReg() == X86::ST1) {
      // (XCH_F ST1)
      AsmString = "fxch";
      break;
    }
    return false;
  case X86::XOR16rr:
    if (MI->getNumOperands() == 2 &&
        MI->getOperand(0).isReg() &&
        regIsInRegisterClass(RC_GR16, MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MI->getOperand(1).getReg() == MI->getOperand(0).getReg()) {
      // (XOR16rr GR16:$reg, GR16:$reg)
      AsmString = "clrw $reg";
      OpMap.push_back(std::make_pair("reg", 0));
      break;
    }
    return false;
  case X86::XOR32rr:
    if (MI->getNumOperands() == 2 &&
        MI->getOperand(0).isReg() &&
        regIsInRegisterClass(RC_GR32, MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MI->getOperand(1).getReg() == MI->getOperand(0).getReg()) {
      // (XOR32rr GR32:$reg, GR32:$reg)
      AsmString = "clrl $reg";
      OpMap.push_back(std::make_pair("reg", 0));
      break;
    }
    return false;
  case X86::XOR64rr:
    if (MI->getNumOperands() == 2 &&
        MI->getOperand(0).isReg() &&
        regIsInRegisterClass(RC_GR64, MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MI->getOperand(1).getReg() == MI->getOperand(0).getReg()) {
      // (XOR64rr GR64:$reg, GR64:$reg)
      AsmString = "clrq $reg";
      OpMap.push_back(std::make_pair("reg", 0));
      break;
    }
    return false;
  case X86::XOR8rr:
    if (MI->getNumOperands() == 2 &&
        MI->getOperand(0).isReg() &&
        regIsInRegisterClass(RC_GR8, MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MI->getOperand(1).getReg() == MI->getOperand(0).getReg()) {
      // (XOR8rr GR8:$reg, GR8:$reg)
      AsmString = "clrb $reg";
      OpMap.push_back(std::make_pair("reg", 0));
      break;
    }
    return false;
  case X86::XSTORE:
    if (MI->getNumOperands() == 0) {
      // (XSTORE)
      AsmString = "xstorerng";
      break;
    }
    return false;
  }

  std::pair<StringRef, StringRef> ASM = AsmString.split(' ');
  OS << '\t' << ASM.first;
  if (!ASM.second.empty()) {
    OS << '\t';
    for (StringRef::iterator
         I = ASM.second.begin(), E = ASM.second.end(); I != E; ) {
      if (*I == '$') {
        StringRef::iterator Start = ++I;
        while (I != E &&
               ((*I >= 'a' && *I <= 'z') ||
                (*I >= 'A' && *I <= 'Z') ||
                (*I >= '0' && *I <= '9') ||
                *I == '_'))
          ++I;
        StringRef Name(Start, I - Start);
        printOperand(MI, getMapOperandNumber(OpMap, Name), OS);
      } else {
        OS << *I++;
      }
    }
  }

  return true;
}

#endif // PRINT_ALIAS_INSTR
