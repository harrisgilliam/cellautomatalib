//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Target Instruction Enum Values
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//


#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace Mips {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    PROLOG_LABEL	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    ADD	= 15,
    ADDi	= 16,
    ADDiu	= 17,
    ADDu	= 18,
    ADJCALLSTACKDOWN	= 19,
    ADJCALLSTACKUP	= 20,
    AND	= 21,
    AND64	= 22,
    ANDi	= 23,
    ATMACRO	= 24,
    ATOMIC_CMP_SWAP_I16	= 25,
    ATOMIC_CMP_SWAP_I16_P8	= 26,
    ATOMIC_CMP_SWAP_I32	= 27,
    ATOMIC_CMP_SWAP_I32_P8	= 28,
    ATOMIC_CMP_SWAP_I64	= 29,
    ATOMIC_CMP_SWAP_I64_P8	= 30,
    ATOMIC_CMP_SWAP_I8	= 31,
    ATOMIC_CMP_SWAP_I8_P8	= 32,
    ATOMIC_LOAD_ADD_I16	= 33,
    ATOMIC_LOAD_ADD_I16_P8	= 34,
    ATOMIC_LOAD_ADD_I32	= 35,
    ATOMIC_LOAD_ADD_I32_P8	= 36,
    ATOMIC_LOAD_ADD_I64	= 37,
    ATOMIC_LOAD_ADD_I64_P8	= 38,
    ATOMIC_LOAD_ADD_I8	= 39,
    ATOMIC_LOAD_ADD_I8_P8	= 40,
    ATOMIC_LOAD_AND_I16	= 41,
    ATOMIC_LOAD_AND_I16_P8	= 42,
    ATOMIC_LOAD_AND_I32	= 43,
    ATOMIC_LOAD_AND_I32_P8	= 44,
    ATOMIC_LOAD_AND_I64	= 45,
    ATOMIC_LOAD_AND_I64_P8	= 46,
    ATOMIC_LOAD_AND_I8	= 47,
    ATOMIC_LOAD_AND_I8_P8	= 48,
    ATOMIC_LOAD_NAND_I16	= 49,
    ATOMIC_LOAD_NAND_I16_P8	= 50,
    ATOMIC_LOAD_NAND_I32	= 51,
    ATOMIC_LOAD_NAND_I32_P8	= 52,
    ATOMIC_LOAD_NAND_I64	= 53,
    ATOMIC_LOAD_NAND_I64_P8	= 54,
    ATOMIC_LOAD_NAND_I8	= 55,
    ATOMIC_LOAD_NAND_I8_P8	= 56,
    ATOMIC_LOAD_OR_I16	= 57,
    ATOMIC_LOAD_OR_I16_P8	= 58,
    ATOMIC_LOAD_OR_I32	= 59,
    ATOMIC_LOAD_OR_I32_P8	= 60,
    ATOMIC_LOAD_OR_I64	= 61,
    ATOMIC_LOAD_OR_I64_P8	= 62,
    ATOMIC_LOAD_OR_I8	= 63,
    ATOMIC_LOAD_OR_I8_P8	= 64,
    ATOMIC_LOAD_SUB_I16	= 65,
    ATOMIC_LOAD_SUB_I16_P8	= 66,
    ATOMIC_LOAD_SUB_I32	= 67,
    ATOMIC_LOAD_SUB_I32_P8	= 68,
    ATOMIC_LOAD_SUB_I64	= 69,
    ATOMIC_LOAD_SUB_I64_P8	= 70,
    ATOMIC_LOAD_SUB_I8	= 71,
    ATOMIC_LOAD_SUB_I8_P8	= 72,
    ATOMIC_LOAD_XOR_I16	= 73,
    ATOMIC_LOAD_XOR_I16_P8	= 74,
    ATOMIC_LOAD_XOR_I32	= 75,
    ATOMIC_LOAD_XOR_I32_P8	= 76,
    ATOMIC_LOAD_XOR_I64	= 77,
    ATOMIC_LOAD_XOR_I64_P8	= 78,
    ATOMIC_LOAD_XOR_I8	= 79,
    ATOMIC_LOAD_XOR_I8_P8	= 80,
    ATOMIC_SWAP_I16	= 81,
    ATOMIC_SWAP_I16_P8	= 82,
    ATOMIC_SWAP_I32	= 83,
    ATOMIC_SWAP_I32_P8	= 84,
    ATOMIC_SWAP_I64	= 85,
    ATOMIC_SWAP_I64_P8	= 86,
    ATOMIC_SWAP_I8	= 87,
    ATOMIC_SWAP_I8_P8	= 88,
    B	= 89,
    BC1F	= 90,
    BC1T	= 91,
    BEQ	= 92,
    BEQ64	= 93,
    BGEZ	= 94,
    BGEZ64	= 95,
    BGEZAL	= 96,
    BGTZ	= 97,
    BGTZ64	= 98,
    BLEZ	= 99,
    BLEZ64	= 100,
    BLTZ	= 101,
    BLTZ64	= 102,
    BLTZAL	= 103,
    BNE	= 104,
    BNE64	= 105,
    BuildPairF64	= 106,
    CEIL_L_D64	= 107,
    CEIL_L_S	= 108,
    CEIL_W_D32	= 109,
    CEIL_W_D64	= 110,
    CEIL_W_S	= 111,
    CFC1	= 112,
    CLO	= 113,
    CLZ	= 114,
    CPLOAD	= 115,
    CPRESTORE	= 116,
    CTC1	= 117,
    CVT_D32_S	= 118,
    CVT_D32_W	= 119,
    CVT_D64_L	= 120,
    CVT_D64_S	= 121,
    CVT_D64_W	= 122,
    CVT_L_D64	= 123,
    CVT_L_S	= 124,
    CVT_S_D32	= 125,
    CVT_S_D64	= 126,
    CVT_S_L	= 127,
    CVT_S_W	= 128,
    CVT_W_D32	= 129,
    CVT_W_D64	= 130,
    CVT_W_S	= 131,
    DADDiu	= 132,
    DADDu	= 133,
    DANDi	= 134,
    DCLO	= 135,
    DCLZ	= 136,
    DEXT	= 137,
    DINS	= 138,
    DMFC1	= 139,
    DMTC1	= 140,
    DMULT	= 141,
    DMULTu	= 142,
    DROTR	= 143,
    DROTRV	= 144,
    DSBH	= 145,
    DSDIV	= 146,
    DSHD	= 147,
    DSLL	= 148,
    DSLL64_32	= 149,
    DSLLV	= 150,
    DSRA	= 151,
    DSRAV	= 152,
    DSRL	= 153,
    DSRLV	= 154,
    DSUBu	= 155,
    DUDIV	= 156,
    DynAlloc	= 157,
    DynAlloc64	= 158,
    EXT	= 159,
    ExtractElementF64	= 160,
    FABS_D32	= 161,
    FABS_D64	= 162,
    FABS_S	= 163,
    FADD_D32	= 164,
    FADD_D64	= 165,
    FADD_S	= 166,
    FCMP_D32	= 167,
    FCMP_D64	= 168,
    FCMP_S32	= 169,
    FDIV_D32	= 170,
    FDIV_D64	= 171,
    FDIV_S	= 172,
    FLOOR_L_D64	= 173,
    FLOOR_L_S	= 174,
    FLOOR_W_D32	= 175,
    FLOOR_W_D64	= 176,
    FLOOR_W_S	= 177,
    FMOV_D32	= 178,
    FMOV_D64	= 179,
    FMOV_S	= 180,
    FMUL_D32	= 181,
    FMUL_D64	= 182,
    FMUL_S	= 183,
    FNEG_D32	= 184,
    FNEG_D64	= 185,
    FNEG_S	= 186,
    FSQRT_D32	= 187,
    FSQRT_D64	= 188,
    FSQRT_S	= 189,
    FSUB_D32	= 190,
    FSUB_D64	= 191,
    FSUB_S	= 192,
    INS	= 193,
    J	= 194,
    JAL	= 195,
    JALR	= 196,
    JALR64	= 197,
    JR	= 198,
    JR64	= 199,
    LB	= 200,
    LB64	= 201,
    LB64_P8	= 202,
    LB_P8	= 203,
    LBu	= 204,
    LBu64	= 205,
    LBu64_P8	= 206,
    LBu_P8	= 207,
    LD	= 208,
    LDC1	= 209,
    LDC164	= 210,
    LDC164_P8	= 211,
    LD_P8	= 212,
    LEA_ADDiu	= 213,
    LEA_ADDiu64	= 214,
    LH	= 215,
    LH64	= 216,
    LH64_P8	= 217,
    LH_P8	= 218,
    LHu	= 219,
    LHu64	= 220,
    LHu64_P8	= 221,
    LHu_P8	= 222,
    LL	= 223,
    LLD	= 224,
    LLD_P8	= 225,
    LL_P8	= 226,
    LUi	= 227,
    LUi64	= 228,
    LW	= 229,
    LW64	= 230,
    LW64_P8	= 231,
    LWC1	= 232,
    LWC1_P8	= 233,
    LWL	= 234,
    LWL_P8	= 235,
    LWR	= 236,
    LWR_P8	= 237,
    LW_P8	= 238,
    LWu64	= 239,
    LWu64_P8	= 240,
    MACRO	= 241,
    MADD	= 242,
    MADDU	= 243,
    MFC1	= 244,
    MFHI	= 245,
    MFHI64	= 246,
    MFLO	= 247,
    MFLO64	= 248,
    MOVCCRToCCR	= 249,
    MOVF_D32	= 250,
    MOVF_D64	= 251,
    MOVF_I	= 252,
    MOVF_I64	= 253,
    MOVF_S	= 254,
    MOVN_I64_D64	= 255,
    MOVN_I64_I	= 256,
    MOVN_I64_I64	= 257,
    MOVN_I64_S	= 258,
    MOVN_I_D32	= 259,
    MOVN_I_D64	= 260,
    MOVN_I_I	= 261,
    MOVN_I_I64	= 262,
    MOVN_I_S	= 263,
    MOVT_D32	= 264,
    MOVT_D64	= 265,
    MOVT_I	= 266,
    MOVT_I64	= 267,
    MOVT_S	= 268,
    MOVZ_I64_D64	= 269,
    MOVZ_I64_I	= 270,
    MOVZ_I64_I64	= 271,
    MOVZ_I64_S	= 272,
    MOVZ_I_D32	= 273,
    MOVZ_I_D64	= 274,
    MOVZ_I_I	= 275,
    MOVZ_I_I64	= 276,
    MOVZ_I_S	= 277,
    MSUB	= 278,
    MSUBU	= 279,
    MTC1	= 280,
    MTHI	= 281,
    MTHI64	= 282,
    MTLO	= 283,
    MTLO64	= 284,
    MUL	= 285,
    MULT	= 286,
    MULTu	= 287,
    NOAT	= 288,
    NOMACRO	= 289,
    NOP	= 290,
    NOR	= 291,
    NOR64	= 292,
    NOREORDER	= 293,
    OR	= 294,
    OR64	= 295,
    ORi	= 296,
    ORi64	= 297,
    RDHWR	= 298,
    RDHWR64	= 299,
    REORDER	= 300,
    RET	= 301,
    ROTR	= 302,
    ROTRV	= 303,
    ROUND_L_D64	= 304,
    ROUND_L_S	= 305,
    ROUND_W_D32	= 306,
    ROUND_W_D64	= 307,
    ROUND_W_S	= 308,
    SB	= 309,
    SB64	= 310,
    SB64_P8	= 311,
    SB_P8	= 312,
    SC	= 313,
    SCD	= 314,
    SCD_P8	= 315,
    SC_P8	= 316,
    SD	= 317,
    SDC1	= 318,
    SDC164	= 319,
    SDC164_P8	= 320,
    SDIV	= 321,
    SD_P8	= 322,
    SEB	= 323,
    SEH	= 324,
    SH	= 325,
    SH64	= 326,
    SH64_P8	= 327,
    SH_P8	= 328,
    SLL	= 329,
    SLL64_32	= 330,
    SLL64_64	= 331,
    SLLV	= 332,
    SLT	= 333,
    SLT64	= 334,
    SLTi	= 335,
    SLTi64	= 336,
    SLTiu	= 337,
    SLTiu64	= 338,
    SLTu	= 339,
    SLTu64	= 340,
    SRA	= 341,
    SRAV	= 342,
    SRL	= 343,
    SRLV	= 344,
    SUB	= 345,
    SUBu	= 346,
    SW	= 347,
    SW64	= 348,
    SW64_P8	= 349,
    SWC1	= 350,
    SWC1_P8	= 351,
    SWL	= 352,
    SWL_P8	= 353,
    SWR	= 354,
    SWR_P8	= 355,
    SW_P8	= 356,
    SYNC	= 357,
    TRUNC_L_D64	= 358,
    TRUNC_L_S	= 359,
    TRUNC_W_D32	= 360,
    TRUNC_W_D64	= 361,
    TRUNC_W_S	= 362,
    UDIV	= 363,
    ULD	= 364,
    ULD_P8	= 365,
    ULH	= 366,
    ULH64	= 367,
    ULH64_P8	= 368,
    ULH_P8	= 369,
    ULHu	= 370,
    ULHu64	= 371,
    ULHu64_P8	= 372,
    ULHu_P8	= 373,
    ULW	= 374,
    ULW64	= 375,
    ULW64_P8	= 376,
    ULW_P8	= 377,
    USD	= 378,
    USD_P8	= 379,
    USH	= 380,
    USH64	= 381,
    USH64_P8	= 382,
    USH_P8	= 383,
    USW	= 384,
    USW64	= 385,
    USW64_P8	= 386,
    USW_P8	= 387,
    WSBH	= 388,
    XOR	= 389,
    XOR64	= 390,
    XORi	= 391,
    XORi64	= 392,
    INSTRUCTION_LIST_END = 393
  };
}
} // End llvm namespace 
#endif // GET_INSTRINFO_ENUM

//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Target Instruction Descriptors
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//


#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const unsigned ImplicitList1[] = { Mips::SP, 0 };
static const unsigned ImplicitList2[] = { Mips::FCR31, 0 };
static const unsigned ImplicitList3[] = { Mips::AT, Mips::V0, Mips::V1, Mips::A0, Mips::A1, Mips::A2, Mips::A3, Mips::T0, Mips::T1, Mips::T2, Mips::T3, Mips::T4, Mips::T5, Mips::T6, Mips::T7, Mips::T8, Mips::T9, Mips::K0, Mips::K1, Mips::GP, Mips::D0, Mips::D1, Mips::D2, Mips::D3, Mips::D4, Mips::D5, Mips::D6, Mips::D7, Mips::D8, Mips::D9, 0 };
static const unsigned ImplicitList4[] = { Mips::HI64, Mips::LO64, 0 };
static const unsigned ImplicitList5[] = { Mips::SP_64, 0 };
static const unsigned ImplicitList6[] = { Mips::AT_64, Mips::V0_64, Mips::V1_64, Mips::A0_64, Mips::A1_64, Mips::A2_64, Mips::A3_64, Mips::T0_64, Mips::T1_64, Mips::T2_64, Mips::T3_64, Mips::T4_64, Mips::T5_64, Mips::T6_64, Mips::T7_64, Mips::T8_64, Mips::T9_64, Mips::K0_64, Mips::K1_64, Mips::D0_64, Mips::D1_64, Mips::D2_64, Mips::D3_64, Mips::D4_64, Mips::D5_64, Mips::D6_64, Mips::D7_64, Mips::D8_64, Mips::D9_64, Mips::D10_64, Mips::D11_64, Mips::D12_64, Mips::D13_64, Mips::D14_64, Mips::D15_64, Mips::D16_64, Mips::D17_64, Mips::D18_64, Mips::D19_64, Mips::D20_64, Mips::D21_64, Mips::D22_64, Mips::D23_64, 0 };
static const unsigned ImplicitList7[] = { Mips::HI, Mips::LO, 0 };
static const unsigned ImplicitList8[] = { Mips::HI, 0 };
static const unsigned ImplicitList9[] = { Mips::HI64, 0 };
static const unsigned ImplicitList10[] = { Mips::LO, 0 };
static const unsigned ImplicitList11[] = { Mips::LO64, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo8[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo9[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo10[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo11[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo12[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo13[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo14[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo15[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo16[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, 0, MCOI::OPERAND_PCREL }, };
static const MCOperandInfo OperandInfo18[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_PCREL }, };
static const MCOperandInfo OperandInfo19[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_PCREL }, };
static const MCOperandInfo OperandInfo20[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_PCREL }, };
static const MCOperandInfo OperandInfo21[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_PCREL }, };
static const MCOperandInfo OperandInfo22[] = { { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo23[] = { { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo24[] = { { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo25[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo26[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo27[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo28[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CCRRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo29[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo30[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo31[] = { { Mips::CCRRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo32[] = { { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo33[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo34[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo35[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo36[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { Mips::CPU64RegsRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo37[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo38[] = { { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo39[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo40[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo41[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo42[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo43[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo44[] = { { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo45[] = { { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo46[] = { { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo47[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo48[] = { { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo49[] = { { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo50[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo51[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { Mips::CPURegsRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo52[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo53[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo54[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo55[] = { { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo56[] = { { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo57[] = { { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo58[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo59[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo60[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo61[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo62[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo63[] = { { Mips::CCRRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CCRRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo64[] = { { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo65[] = { { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR64RegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo66[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo67[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo68[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo69[] = { { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR64RegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo70[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo71[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo72[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo73[] = { { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo74[] = { { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR64RegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo75[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo76[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo77[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo78[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo79[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::HWRegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo80[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::HWRegs64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo81[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo82[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo83[] = { { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo84[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo85[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo86[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPU64RegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };

extern const MCInstrDesc MipsInsts[] = {
  { 0,	0,	0,	20,	0,	"PHI", 0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #0 = PHI
  { 1,	0,	0,	20,	0,	"INLINEASM", 0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #1 = INLINEASM
  { 2,	1,	0,	20,	0,	"PROLOG_LABEL", 0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #2 = PROLOG_LABEL
  { 3,	1,	0,	20,	0,	"EH_LABEL", 0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	20,	0,	"GC_LABEL", 0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	20,	0,	"KILL", 0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #5 = KILL
  { 6,	3,	1,	20,	0,	"EXTRACT_SUBREG", 0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	20,	0,	"INSERT_SUBREG", 0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo4 },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	20,	0,	"IMPLICIT_DEF", 0|(1<<MCID::Pseudo)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	20,	0,	"SUBREG_TO_REG", 0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo6 },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	20,	0,	"COPY_TO_REGCLASS", 0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	20,	0,	"DBG_VALUE", 0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #11 = DBG_VALUE
  { 12,	1,	1,	20,	0,	"REG_SEQUENCE", 0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	20,	0,	"COPY", 0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo7 },  // Inst #13 = COPY
  { 14,	0,	0,	20,	0,	"BUNDLE", 0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #14 = BUNDLE
  { 15,	3,	1,	0,	0,	"ADD", 0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo8 },  // Inst #15 = ADD
  { 16,	3,	1,	0,	0,	"ADDi", 0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo9 },  // Inst #16 = ADDi
  { 17,	3,	1,	0,	0,	"ADDiu", 0, 0x2ULL, NULL, NULL, OperandInfo9 },  // Inst #17 = ADDiu
  { 18,	3,	1,	0,	0,	"ADDu", 0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo8 },  // Inst #18 = ADDu
  { 19,	1,	0,	17,	0,	"ADJCALLSTACKDOWN", 0|(1<<MCID::Pseudo), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo5 },  // Inst #19 = ADJCALLSTACKDOWN
  { 20,	2,	0,	17,	0,	"ADJCALLSTACKUP", 0|(1<<MCID::Pseudo), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo7 },  // Inst #20 = ADJCALLSTACKUP
  { 21,	3,	1,	0,	0,	"AND", 0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo8 },  // Inst #21 = AND
  { 22,	3,	1,	0,	0,	"AND64", 0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #22 = AND64
  { 23,	3,	1,	0,	0,	"ANDi", 0, 0x2ULL, NULL, NULL, OperandInfo9 },  // Inst #23 = ANDi
  { 24,	0,	0,	17,	0,	"ATMACRO", 0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #24 = ATMACRO
  { 25,	4,	1,	17,	0,	"ATOMIC_CMP_SWAP_I16", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #25 = ATOMIC_CMP_SWAP_I16
  { 26,	4,	1,	17,	0,	"ATOMIC_CMP_SWAP_I16_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #26 = ATOMIC_CMP_SWAP_I16_P8
  { 27,	4,	1,	17,	0,	"ATOMIC_CMP_SWAP_I32", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #27 = ATOMIC_CMP_SWAP_I32
  { 28,	4,	1,	17,	0,	"ATOMIC_CMP_SWAP_I32_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #28 = ATOMIC_CMP_SWAP_I32_P8
  { 29,	4,	1,	17,	0,	"ATOMIC_CMP_SWAP_I64", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #29 = ATOMIC_CMP_SWAP_I64
  { 30,	4,	1,	17,	0,	"ATOMIC_CMP_SWAP_I64_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #30 = ATOMIC_CMP_SWAP_I64_P8
  { 31,	4,	1,	17,	0,	"ATOMIC_CMP_SWAP_I8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #31 = ATOMIC_CMP_SWAP_I8
  { 32,	4,	1,	17,	0,	"ATOMIC_CMP_SWAP_I8_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #32 = ATOMIC_CMP_SWAP_I8_P8
  { 33,	3,	1,	17,	0,	"ATOMIC_LOAD_ADD_I16", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #33 = ATOMIC_LOAD_ADD_I16
  { 34,	3,	1,	17,	0,	"ATOMIC_LOAD_ADD_I16_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #34 = ATOMIC_LOAD_ADD_I16_P8
  { 35,	3,	1,	17,	0,	"ATOMIC_LOAD_ADD_I32", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #35 = ATOMIC_LOAD_ADD_I32
  { 36,	3,	1,	17,	0,	"ATOMIC_LOAD_ADD_I32_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #36 = ATOMIC_LOAD_ADD_I32_P8
  { 37,	3,	1,	17,	0,	"ATOMIC_LOAD_ADD_I64", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #37 = ATOMIC_LOAD_ADD_I64
  { 38,	3,	1,	17,	0,	"ATOMIC_LOAD_ADD_I64_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo10 },  // Inst #38 = ATOMIC_LOAD_ADD_I64_P8
  { 39,	3,	1,	17,	0,	"ATOMIC_LOAD_ADD_I8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #39 = ATOMIC_LOAD_ADD_I8
  { 40,	3,	1,	17,	0,	"ATOMIC_LOAD_ADD_I8_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #40 = ATOMIC_LOAD_ADD_I8_P8
  { 41,	3,	1,	17,	0,	"ATOMIC_LOAD_AND_I16", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #41 = ATOMIC_LOAD_AND_I16
  { 42,	3,	1,	17,	0,	"ATOMIC_LOAD_AND_I16_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #42 = ATOMIC_LOAD_AND_I16_P8
  { 43,	3,	1,	17,	0,	"ATOMIC_LOAD_AND_I32", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #43 = ATOMIC_LOAD_AND_I32
  { 44,	3,	1,	17,	0,	"ATOMIC_LOAD_AND_I32_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #44 = ATOMIC_LOAD_AND_I32_P8
  { 45,	3,	1,	17,	0,	"ATOMIC_LOAD_AND_I64", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #45 = ATOMIC_LOAD_AND_I64
  { 46,	3,	1,	17,	0,	"ATOMIC_LOAD_AND_I64_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo10 },  // Inst #46 = ATOMIC_LOAD_AND_I64_P8
  { 47,	3,	1,	17,	0,	"ATOMIC_LOAD_AND_I8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #47 = ATOMIC_LOAD_AND_I8
  { 48,	3,	1,	17,	0,	"ATOMIC_LOAD_AND_I8_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #48 = ATOMIC_LOAD_AND_I8_P8
  { 49,	3,	1,	17,	0,	"ATOMIC_LOAD_NAND_I16", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #49 = ATOMIC_LOAD_NAND_I16
  { 50,	3,	1,	17,	0,	"ATOMIC_LOAD_NAND_I16_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #50 = ATOMIC_LOAD_NAND_I16_P8
  { 51,	3,	1,	17,	0,	"ATOMIC_LOAD_NAND_I32", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #51 = ATOMIC_LOAD_NAND_I32
  { 52,	3,	1,	17,	0,	"ATOMIC_LOAD_NAND_I32_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #52 = ATOMIC_LOAD_NAND_I32_P8
  { 53,	3,	1,	17,	0,	"ATOMIC_LOAD_NAND_I64", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #53 = ATOMIC_LOAD_NAND_I64
  { 54,	3,	1,	17,	0,	"ATOMIC_LOAD_NAND_I64_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo10 },  // Inst #54 = ATOMIC_LOAD_NAND_I64_P8
  { 55,	3,	1,	17,	0,	"ATOMIC_LOAD_NAND_I8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #55 = ATOMIC_LOAD_NAND_I8
  { 56,	3,	1,	17,	0,	"ATOMIC_LOAD_NAND_I8_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #56 = ATOMIC_LOAD_NAND_I8_P8
  { 57,	3,	1,	17,	0,	"ATOMIC_LOAD_OR_I16", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #57 = ATOMIC_LOAD_OR_I16
  { 58,	3,	1,	17,	0,	"ATOMIC_LOAD_OR_I16_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #58 = ATOMIC_LOAD_OR_I16_P8
  { 59,	3,	1,	17,	0,	"ATOMIC_LOAD_OR_I32", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #59 = ATOMIC_LOAD_OR_I32
  { 60,	3,	1,	17,	0,	"ATOMIC_LOAD_OR_I32_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #60 = ATOMIC_LOAD_OR_I32_P8
  { 61,	3,	1,	17,	0,	"ATOMIC_LOAD_OR_I64", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #61 = ATOMIC_LOAD_OR_I64
  { 62,	3,	1,	17,	0,	"ATOMIC_LOAD_OR_I64_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo10 },  // Inst #62 = ATOMIC_LOAD_OR_I64_P8
  { 63,	3,	1,	17,	0,	"ATOMIC_LOAD_OR_I8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #63 = ATOMIC_LOAD_OR_I8
  { 64,	3,	1,	17,	0,	"ATOMIC_LOAD_OR_I8_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #64 = ATOMIC_LOAD_OR_I8_P8
  { 65,	3,	1,	17,	0,	"ATOMIC_LOAD_SUB_I16", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #65 = ATOMIC_LOAD_SUB_I16
  { 66,	3,	1,	17,	0,	"ATOMIC_LOAD_SUB_I16_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #66 = ATOMIC_LOAD_SUB_I16_P8
  { 67,	3,	1,	17,	0,	"ATOMIC_LOAD_SUB_I32", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #67 = ATOMIC_LOAD_SUB_I32
  { 68,	3,	1,	17,	0,	"ATOMIC_LOAD_SUB_I32_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #68 = ATOMIC_LOAD_SUB_I32_P8
  { 69,	3,	1,	17,	0,	"ATOMIC_LOAD_SUB_I64", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #69 = ATOMIC_LOAD_SUB_I64
  { 70,	3,	1,	17,	0,	"ATOMIC_LOAD_SUB_I64_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo10 },  // Inst #70 = ATOMIC_LOAD_SUB_I64_P8
  { 71,	3,	1,	17,	0,	"ATOMIC_LOAD_SUB_I8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #71 = ATOMIC_LOAD_SUB_I8
  { 72,	3,	1,	17,	0,	"ATOMIC_LOAD_SUB_I8_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #72 = ATOMIC_LOAD_SUB_I8_P8
  { 73,	3,	1,	17,	0,	"ATOMIC_LOAD_XOR_I16", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #73 = ATOMIC_LOAD_XOR_I16
  { 74,	3,	1,	17,	0,	"ATOMIC_LOAD_XOR_I16_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #74 = ATOMIC_LOAD_XOR_I16_P8
  { 75,	3,	1,	17,	0,	"ATOMIC_LOAD_XOR_I32", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #75 = ATOMIC_LOAD_XOR_I32
  { 76,	3,	1,	17,	0,	"ATOMIC_LOAD_XOR_I32_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #76 = ATOMIC_LOAD_XOR_I32_P8
  { 77,	3,	1,	17,	0,	"ATOMIC_LOAD_XOR_I64", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #77 = ATOMIC_LOAD_XOR_I64
  { 78,	3,	1,	17,	0,	"ATOMIC_LOAD_XOR_I64_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo10 },  // Inst #78 = ATOMIC_LOAD_XOR_I64_P8
  { 79,	3,	1,	17,	0,	"ATOMIC_LOAD_XOR_I8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #79 = ATOMIC_LOAD_XOR_I8
  { 80,	3,	1,	17,	0,	"ATOMIC_LOAD_XOR_I8_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #80 = ATOMIC_LOAD_XOR_I8_P8
  { 81,	3,	1,	17,	0,	"ATOMIC_SWAP_I16", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #81 = ATOMIC_SWAP_I16
  { 82,	3,	1,	17,	0,	"ATOMIC_SWAP_I16_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #82 = ATOMIC_SWAP_I16_P8
  { 83,	3,	1,	17,	0,	"ATOMIC_SWAP_I32", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #83 = ATOMIC_SWAP_I32
  { 84,	3,	1,	17,	0,	"ATOMIC_SWAP_I32_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #84 = ATOMIC_SWAP_I32_P8
  { 85,	3,	1,	17,	0,	"ATOMIC_SWAP_I64", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #85 = ATOMIC_SWAP_I64
  { 86,	3,	1,	17,	0,	"ATOMIC_SWAP_I64_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo10 },  // Inst #86 = ATOMIC_SWAP_I64_P8
  { 87,	3,	1,	17,	0,	"ATOMIC_SWAP_I8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #87 = ATOMIC_SWAP_I8
  { 88,	3,	1,	17,	0,	"ATOMIC_SWAP_I8_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #88 = ATOMIC_SWAP_I8_P8
  { 89,	1,	0,	1,	0,	"B", 0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, NULL, OperandInfo17 },  // Inst #89 = B
  { 90,	1,	0,	20,	0,	"BC1F", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x5ULL, ImplicitList2, NULL, OperandInfo17 },  // Inst #90 = BC1F
  { 91,	1,	0,	20,	0,	"BC1T", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x5ULL, ImplicitList2, NULL, OperandInfo17 },  // Inst #91 = BC1T
  { 92,	3,	0,	1,	0,	"BEQ", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, NULL, OperandInfo18 },  // Inst #92 = BEQ
  { 93,	3,	0,	1,	0,	"BEQ64", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, NULL, OperandInfo19 },  // Inst #93 = BEQ64
  { 94,	2,	0,	1,	0,	"BGEZ", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, NULL, OperandInfo20 },  // Inst #94 = BGEZ
  { 95,	2,	0,	1,	0,	"BGEZ64", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, NULL, OperandInfo21 },  // Inst #95 = BGEZ64
  { 96,	2,	0,	1,	0,	"BGEZAL", 0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #96 = BGEZAL
  { 97,	2,	0,	1,	0,	"BGTZ", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, NULL, OperandInfo20 },  // Inst #97 = BGTZ
  { 98,	2,	0,	1,	0,	"BGTZ64", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, NULL, OperandInfo21 },  // Inst #98 = BGTZ64
  { 99,	2,	0,	1,	0,	"BLEZ", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, NULL, OperandInfo20 },  // Inst #99 = BLEZ
  { 100,	2,	0,	1,	0,	"BLEZ64", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, NULL, OperandInfo21 },  // Inst #100 = BLEZ64
  { 101,	2,	0,	1,	0,	"BLTZ", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, NULL, OperandInfo20 },  // Inst #101 = BLTZ
  { 102,	2,	0,	1,	0,	"BLTZ64", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, NULL, OperandInfo21 },  // Inst #102 = BLTZ64
  { 103,	2,	0,	1,	0,	"BLTZAL", 0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, ImplicitList3, OperandInfo20 },  // Inst #103 = BLTZAL
  { 104,	3,	0,	1,	0,	"BNE", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, NULL, OperandInfo18 },  // Inst #104 = BNE
  { 105,	3,	0,	1,	0,	"BNE64", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, NULL, OperandInfo19 },  // Inst #105 = BNE64
  { 106,	3,	1,	17,	0,	"BuildPairF64", 0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #106 = BuildPairF64
  { 107,	2,	1,	20,	0,	"CEIL_L_D64", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo23 },  // Inst #107 = CEIL_L_D64
  { 108,	2,	1,	20,	0,	"CEIL_L_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo24 },  // Inst #108 = CEIL_L_S
  { 109,	2,	1,	20,	0,	"CEIL_W_D32", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo25 },  // Inst #109 = CEIL_W_D32
  { 110,	2,	1,	20,	0,	"CEIL_W_D64", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo26 },  // Inst #110 = CEIL_W_D64
  { 111,	2,	1,	20,	0,	"CEIL_W_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo27 },  // Inst #111 = CEIL_W_S
  { 112,	2,	1,	20,	0,	"CFC1", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo28 },  // Inst #112 = CFC1
  { 113,	2,	1,	0,	0,	"CLO", 0, 0x1ULL, NULL, NULL, OperandInfo29 },  // Inst #113 = CLO
  { 114,	2,	1,	0,	0,	"CLZ", 0, 0x1ULL, NULL, NULL, OperandInfo29 },  // Inst #114 = CLZ
  { 115,	1,	0,	17,	0,	"CPLOAD", 0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo30 },  // Inst #115 = CPLOAD
  { 116,	1,	0,	17,	0,	"CPRESTORE", 0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #116 = CPRESTORE
  { 117,	2,	1,	20,	0,	"CTC1", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo31 },  // Inst #117 = CTC1
  { 118,	2,	1,	20,	0,	"CVT_D32_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo32 },  // Inst #118 = CVT_D32_S
  { 119,	2,	1,	20,	0,	"CVT_D32_W", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo32 },  // Inst #119 = CVT_D32_W
  { 120,	2,	1,	20,	0,	"CVT_D64_L", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo23 },  // Inst #120 = CVT_D64_L
  { 121,	2,	1,	20,	0,	"CVT_D64_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo24 },  // Inst #121 = CVT_D64_S
  { 122,	2,	1,	20,	0,	"CVT_D64_W", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo24 },  // Inst #122 = CVT_D64_W
  { 123,	2,	1,	20,	0,	"CVT_L_D64", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo23 },  // Inst #123 = CVT_L_D64
  { 124,	2,	1,	20,	0,	"CVT_L_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo24 },  // Inst #124 = CVT_L_S
  { 125,	2,	1,	20,	0,	"CVT_S_D32", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo25 },  // Inst #125 = CVT_S_D32
  { 126,	2,	1,	20,	0,	"CVT_S_D64", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo26 },  // Inst #126 = CVT_S_D64
  { 127,	2,	1,	20,	0,	"CVT_S_L", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo26 },  // Inst #127 = CVT_S_L
  { 128,	2,	1,	20,	0,	"CVT_S_W", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo27 },  // Inst #128 = CVT_S_W
  { 129,	2,	1,	20,	0,	"CVT_W_D32", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo25 },  // Inst #129 = CVT_W_D32
  { 130,	2,	1,	20,	0,	"CVT_W_D64", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo26 },  // Inst #130 = CVT_W_D64
  { 131,	2,	1,	20,	0,	"CVT_W_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo27 },  // Inst #131 = CVT_W_S
  { 132,	3,	1,	0,	0,	"DADDiu", 0, 0x2ULL, NULL, NULL, OperandInfo33 },  // Inst #132 = DADDiu
  { 133,	3,	1,	0,	0,	"DADDu", 0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #133 = DADDu
  { 134,	3,	1,	0,	0,	"DANDi", 0, 0x2ULL, NULL, NULL, OperandInfo33 },  // Inst #134 = DANDi
  { 135,	2,	1,	0,	0,	"DCLO", 0, 0x1ULL, NULL, NULL, OperandInfo34 },  // Inst #135 = DCLO
  { 136,	2,	1,	0,	0,	"DCLZ", 0, 0x1ULL, NULL, NULL, OperandInfo34 },  // Inst #136 = DCLZ
  { 137,	4,	1,	20,	0,	"DEXT", 0, 0x1ULL, NULL, NULL, OperandInfo35 },  // Inst #137 = DEXT
  { 138,	5,	1,	20,	0,	"DINS", 0, 0x1ULL, NULL, NULL, OperandInfo36 },  // Inst #138 = DINS
  { 139,	2,	1,	20,	0,	"DMFC1", 0|(1<<MCID::Bitcast), 0x4ULL, NULL, NULL, OperandInfo37 },  // Inst #139 = DMFC1
  { 140,	2,	1,	20,	0,	"DMTC1", 0|(1<<MCID::Bitcast), 0x4ULL, NULL, NULL, OperandInfo38 },  // Inst #140 = DMTC1
  { 141,	2,	0,	15,	0,	"DMULT", 0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList4, OperandInfo34 },  // Inst #141 = DMULT
  { 142,	2,	0,	15,	0,	"DMULTu", 0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList4, OperandInfo34 },  // Inst #142 = DMULTu
  { 143,	3,	1,	0,	0,	"DROTR", 0, 0x1ULL, NULL, NULL, OperandInfo33 },  // Inst #143 = DROTR
  { 144,	3,	1,	0,	0,	"DROTRV", 0, 0x1ULL, NULL, NULL, OperandInfo16 },  // Inst #144 = DROTRV
  { 145,	2,	1,	20,	0,	"DSBH", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo34 },  // Inst #145 = DSBH
  { 146,	2,	0,	14,	0,	"DSDIV", 0, 0x1ULL, NULL, ImplicitList4, OperandInfo34 },  // Inst #146 = DSDIV
  { 147,	2,	1,	20,	0,	"DSHD", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo34 },  // Inst #147 = DSHD
  { 148,	3,	1,	0,	0,	"DSLL", 0, 0x1ULL, NULL, NULL, OperandInfo33 },  // Inst #148 = DSLL
  { 149,	2,	1,	0,	0,	"DSLL64_32", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo39 },  // Inst #149 = DSLL64_32
  { 150,	3,	1,	0,	0,	"DSLLV", 0, 0x1ULL, NULL, NULL, OperandInfo16 },  // Inst #150 = DSLLV
  { 151,	3,	1,	0,	0,	"DSRA", 0, 0x1ULL, NULL, NULL, OperandInfo33 },  // Inst #151 = DSRA
  { 152,	3,	1,	0,	0,	"DSRAV", 0, 0x1ULL, NULL, NULL, OperandInfo16 },  // Inst #152 = DSRAV
  { 153,	3,	1,	0,	0,	"DSRL", 0, 0x1ULL, NULL, NULL, OperandInfo33 },  // Inst #153 = DSRL
  { 154,	3,	1,	0,	0,	"DSRLV", 0, 0x1ULL, NULL, NULL, OperandInfo16 },  // Inst #154 = DSRLV
  { 155,	3,	1,	0,	0,	"DSUBu", 0, 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #155 = DSUBu
  { 156,	2,	0,	14,	0,	"DUDIV", 0, 0x1ULL, NULL, ImplicitList4, OperandInfo34 },  // Inst #156 = DUDIV
  { 157,	3,	1,	20,	0,	"DynAlloc", 0, 0x5ULL, ImplicitList1, NULL, OperandInfo40 },  // Inst #157 = DynAlloc
  { 158,	3,	1,	20,	0,	"DynAlloc64", 0, 0x5ULL, ImplicitList5, NULL, OperandInfo41 },  // Inst #158 = DynAlloc64
  { 159,	4,	1,	20,	0,	"EXT", 0, 0x1ULL, NULL, NULL, OperandInfo42 },  // Inst #159 = EXT
  { 160,	3,	1,	17,	0,	"ExtractElementF64", 0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo43 },  // Inst #160 = ExtractElementF64
  { 161,	2,	1,	20,	0,	"FABS_D32", 0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #161 = FABS_D32
  { 162,	2,	1,	20,	0,	"FABS_D64", 0, 0x4ULL, NULL, NULL, OperandInfo23 },  // Inst #162 = FABS_D64
  { 163,	2,	1,	20,	0,	"FABS_S", 0, 0x4ULL, NULL, NULL, OperandInfo27 },  // Inst #163 = FABS_S
  { 164,	3,	1,	20,	0,	"FADD_D32", 0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #164 = FADD_D32
  { 165,	3,	1,	20,	0,	"FADD_D64", 0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo46 },  // Inst #165 = FADD_D64
  { 166,	3,	1,	20,	0,	"FADD_S", 0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo47 },  // Inst #166 = FADD_S
  { 167,	3,	0,	20,	0,	"FCMP_D32", 0, 0x6ULL, NULL, ImplicitList2, OperandInfo48 },  // Inst #167 = FCMP_D32
  { 168,	3,	0,	20,	0,	"FCMP_D64", 0, 0x6ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #168 = FCMP_D64
  { 169,	3,	0,	20,	0,	"FCMP_S32", 0, 0x6ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #169 = FCMP_S32
  { 170,	3,	1,	20,	0,	"FDIV_D32", 0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #170 = FDIV_D32
  { 171,	3,	1,	20,	0,	"FDIV_D64", 0, 0x4ULL, NULL, NULL, OperandInfo46 },  // Inst #171 = FDIV_D64
  { 172,	3,	1,	20,	0,	"FDIV_S", 0, 0x4ULL, NULL, NULL, OperandInfo47 },  // Inst #172 = FDIV_S
  { 173,	2,	1,	20,	0,	"FLOOR_L_D64", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo23 },  // Inst #173 = FLOOR_L_D64
  { 174,	2,	1,	20,	0,	"FLOOR_L_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo24 },  // Inst #174 = FLOOR_L_S
  { 175,	2,	1,	20,	0,	"FLOOR_W_D32", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo25 },  // Inst #175 = FLOOR_W_D32
  { 176,	2,	1,	20,	0,	"FLOOR_W_D64", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo26 },  // Inst #176 = FLOOR_W_D64
  { 177,	2,	1,	20,	0,	"FLOOR_W_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo27 },  // Inst #177 = FLOOR_W_S
  { 178,	2,	1,	20,	0,	"FMOV_D32", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #178 = FMOV_D32
  { 179,	2,	1,	20,	0,	"FMOV_D64", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo23 },  // Inst #179 = FMOV_D64
  { 180,	2,	1,	20,	0,	"FMOV_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo27 },  // Inst #180 = FMOV_S
  { 181,	3,	1,	20,	0,	"FMUL_D32", 0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #181 = FMUL_D32
  { 182,	3,	1,	20,	0,	"FMUL_D64", 0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo46 },  // Inst #182 = FMUL_D64
  { 183,	3,	1,	20,	0,	"FMUL_S", 0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo47 },  // Inst #183 = FMUL_S
  { 184,	2,	1,	20,	0,	"FNEG_D32", 0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #184 = FNEG_D32
  { 185,	2,	1,	20,	0,	"FNEG_D64", 0, 0x4ULL, NULL, NULL, OperandInfo23 },  // Inst #185 = FNEG_D64
  { 186,	2,	1,	20,	0,	"FNEG_S", 0, 0x4ULL, NULL, NULL, OperandInfo27 },  // Inst #186 = FNEG_S
  { 187,	2,	1,	20,	0,	"FSQRT_D32", 0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #187 = FSQRT_D32
  { 188,	2,	1,	20,	0,	"FSQRT_D64", 0, 0x4ULL, NULL, NULL, OperandInfo23 },  // Inst #188 = FSQRT_D64
  { 189,	2,	1,	20,	0,	"FSQRT_S", 0, 0x4ULL, NULL, NULL, OperandInfo27 },  // Inst #189 = FSQRT_S
  { 190,	3,	1,	20,	0,	"FSUB_D32", 0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #190 = FSUB_D32
  { 191,	3,	1,	20,	0,	"FSUB_D64", 0, 0x4ULL, NULL, NULL, OperandInfo46 },  // Inst #191 = FSUB_D64
  { 192,	3,	1,	20,	0,	"FSUB_S", 0, 0x4ULL, NULL, NULL, OperandInfo47 },  // Inst #192 = FSUB_S
  { 193,	5,	1,	20,	0,	"INS", 0, 0x1ULL, NULL, NULL, OperandInfo51 },  // Inst #193 = INS
  { 194,	1,	0,	1,	0,	"J", 0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x3ULL, NULL, NULL, OperandInfo5 },  // Inst #194 = J
  { 195,	1,	0,	1,	0,	"JAL", 0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Variadic), 0x3ULL, NULL, ImplicitList3, OperandInfo5 },  // Inst #195 = JAL
  { 196,	1,	0,	1,	0,	"JALR", 0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Variadic), 0x1ULL, NULL, ImplicitList3, OperandInfo30 },  // Inst #196 = JALR
  { 197,	1,	0,	1,	0,	"JALR64", 0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Variadic), 0x1ULL, NULL, ImplicitList6, OperandInfo52 },  // Inst #197 = JALR64
  { 198,	1,	0,	1,	0,	"JR", 0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x1ULL, NULL, NULL, OperandInfo30 },  // Inst #198 = JR
  { 199,	1,	0,	1,	0,	"JR64", 0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x1ULL, NULL, NULL, OperandInfo52 },  // Inst #199 = JR64
  { 200,	3,	1,	20,	0,	"LB", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #200 = LB
  { 201,	3,	1,	20,	0,	"LB64", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #201 = LB64
  { 202,	3,	1,	20,	0,	"LB64_P8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #202 = LB64_P8
  { 203,	3,	1,	20,	0,	"LB_P8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #203 = LB_P8
  { 204,	3,	1,	20,	0,	"LBu", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #204 = LBu
  { 205,	3,	1,	20,	0,	"LBu64", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #205 = LBu64
  { 206,	3,	1,	20,	0,	"LBu64_P8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #206 = LBu64_P8
  { 207,	3,	1,	20,	0,	"LBu_P8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #207 = LBu_P8
  { 208,	3,	1,	20,	0,	"LD", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #208 = LD
  { 209,	3,	1,	20,	0,	"LDC1", 0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo55 },  // Inst #209 = LDC1
  { 210,	3,	1,	20,	0,	"LDC164", 0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo56 },  // Inst #210 = LDC164
  { 211,	3,	1,	20,	0,	"LDC164_P8", 0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo57 },  // Inst #211 = LDC164_P8
  { 212,	3,	1,	20,	0,	"LD_P8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #212 = LD_P8
  { 213,	3,	1,	20,	0,	"LEA_ADDiu", 0, 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #213 = LEA_ADDiu
  { 214,	3,	1,	20,	0,	"LEA_ADDiu64", 0, 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #214 = LEA_ADDiu64
  { 215,	3,	1,	20,	0,	"LH", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #215 = LH
  { 216,	3,	1,	20,	0,	"LH64", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #216 = LH64
  { 217,	3,	1,	20,	0,	"LH64_P8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #217 = LH64_P8
  { 218,	3,	1,	20,	0,	"LH_P8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #218 = LH_P8
  { 219,	3,	1,	20,	0,	"LHu", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #219 = LHu
  { 220,	3,	1,	20,	0,	"LHu64", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #220 = LHu64
  { 221,	3,	1,	20,	0,	"LHu64_P8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #221 = LHu64_P8
  { 222,	3,	1,	20,	0,	"LHu_P8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #222 = LHu_P8
  { 223,	3,	1,	20,	0,	"LL", 0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #223 = LL
  { 224,	3,	1,	20,	0,	"LLD", 0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #224 = LLD
  { 225,	3,	1,	20,	0,	"LLD_P8", 0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #225 = LLD_P8
  { 226,	3,	1,	20,	0,	"LL_P8", 0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #226 = LL_P8
  { 227,	2,	1,	0,	0,	"LUi", 0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo58 },  // Inst #227 = LUi
  { 228,	2,	1,	0,	0,	"LUi64", 0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo59 },  // Inst #228 = LUi64
  { 229,	3,	1,	20,	0,	"LW", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #229 = LW
  { 230,	3,	1,	20,	0,	"LW64", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #230 = LW64
  { 231,	3,	1,	20,	0,	"LW64_P8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #231 = LW64_P8
  { 232,	3,	1,	20,	0,	"LWC1", 0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo60 },  // Inst #232 = LWC1
  { 233,	3,	1,	20,	0,	"LWC1_P8", 0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo61 },  // Inst #233 = LWC1_P8
  { 234,	3,	1,	20,	0,	"LWL", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #234 = LWL
  { 235,	3,	1,	20,	0,	"LWL_P8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #235 = LWL_P8
  { 236,	3,	1,	20,	0,	"LWR", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #236 = LWR
  { 237,	3,	1,	20,	0,	"LWR_P8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #237 = LWR_P8
  { 238,	3,	1,	20,	0,	"LW_P8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #238 = LW_P8
  { 239,	3,	1,	20,	0,	"LWu64", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #239 = LWu64
  { 240,	3,	1,	20,	0,	"LWu64_P8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #240 = LWu64_P8
  { 241,	0,	0,	17,	0,	"MACRO", 0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #241 = MACRO
  { 242,	2,	0,	15,	0,	"MADD", 0|(1<<MCID::Commutable), 0x1ULL, ImplicitList7, ImplicitList7, OperandInfo29 },  // Inst #242 = MADD
  { 243,	2,	0,	15,	0,	"MADDU", 0|(1<<MCID::Commutable), 0x1ULL, ImplicitList7, ImplicitList7, OperandInfo29 },  // Inst #243 = MADDU
  { 244,	2,	1,	20,	0,	"MFC1", 0|(1<<MCID::Bitcast), 0x4ULL, NULL, NULL, OperandInfo62 },  // Inst #244 = MFC1
  { 245,	1,	1,	13,	0,	"MFHI", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList8, NULL, OperandInfo30 },  // Inst #245 = MFHI
  { 246,	1,	1,	13,	0,	"MFHI64", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList9, NULL, OperandInfo52 },  // Inst #246 = MFHI64
  { 247,	1,	1,	13,	0,	"MFLO", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList10, NULL, OperandInfo30 },  // Inst #247 = MFLO
  { 248,	1,	1,	13,	0,	"MFLO64", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, NULL, OperandInfo52 },  // Inst #248 = MFLO64
  { 249,	2,	1,	17,	0,	"MOVCCRToCCR", 0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo63 },  // Inst #249 = MOVCCRToCCR
  { 250,	3,	1,	20,	0,	"MOVF_D32", 0, 0x6ULL, ImplicitList2, NULL, OperandInfo64 },  // Inst #250 = MOVF_D32
  { 251,	3,	1,	20,	0,	"MOVF_D64", 0, 0x6ULL, ImplicitList2, NULL, OperandInfo65 },  // Inst #251 = MOVF_D64
  { 252,	3,	1,	20,	0,	"MOVF_I", 0, 0x6ULL, ImplicitList2, NULL, OperandInfo66 },  // Inst #252 = MOVF_I
  { 253,	3,	1,	20,	0,	"MOVF_I64", 0, 0x6ULL, ImplicitList2, NULL, OperandInfo67 },  // Inst #253 = MOVF_I64
  { 254,	3,	1,	20,	0,	"MOVF_S", 0, 0x6ULL, ImplicitList2, NULL, OperandInfo68 },  // Inst #254 = MOVF_S
  { 255,	4,	1,	20,	0,	"MOVN_I64_D64", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo69 },  // Inst #255 = MOVN_I64_D64
  { 256,	4,	1,	20,	0,	"MOVN_I64_I", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo70 },  // Inst #256 = MOVN_I64_I
  { 257,	4,	1,	20,	0,	"MOVN_I64_I64", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo71 },  // Inst #257 = MOVN_I64_I64
  { 258,	4,	1,	20,	0,	"MOVN_I64_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo72 },  // Inst #258 = MOVN_I64_S
  { 259,	4,	1,	20,	0,	"MOVN_I_D32", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo73 },  // Inst #259 = MOVN_I_D32
  { 260,	4,	1,	20,	0,	"MOVN_I_D64", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo74 },  // Inst #260 = MOVN_I_D64
  { 261,	4,	1,	20,	0,	"MOVN_I_I", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo75 },  // Inst #261 = MOVN_I_I
  { 262,	4,	1,	20,	0,	"MOVN_I_I64", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo76 },  // Inst #262 = MOVN_I_I64
  { 263,	4,	1,	20,	0,	"MOVN_I_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo77 },  // Inst #263 = MOVN_I_S
  { 264,	3,	1,	20,	0,	"MOVT_D32", 0, 0x6ULL, ImplicitList2, NULL, OperandInfo64 },  // Inst #264 = MOVT_D32
  { 265,	3,	1,	20,	0,	"MOVT_D64", 0, 0x6ULL, ImplicitList2, NULL, OperandInfo65 },  // Inst #265 = MOVT_D64
  { 266,	3,	1,	20,	0,	"MOVT_I", 0, 0x6ULL, ImplicitList2, NULL, OperandInfo66 },  // Inst #266 = MOVT_I
  { 267,	3,	1,	20,	0,	"MOVT_I64", 0, 0x6ULL, ImplicitList2, NULL, OperandInfo67 },  // Inst #267 = MOVT_I64
  { 268,	3,	1,	20,	0,	"MOVT_S", 0, 0x6ULL, ImplicitList2, NULL, OperandInfo68 },  // Inst #268 = MOVT_S
  { 269,	4,	1,	20,	0,	"MOVZ_I64_D64", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo69 },  // Inst #269 = MOVZ_I64_D64
  { 270,	4,	1,	20,	0,	"MOVZ_I64_I", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo70 },  // Inst #270 = MOVZ_I64_I
  { 271,	4,	1,	20,	0,	"MOVZ_I64_I64", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo71 },  // Inst #271 = MOVZ_I64_I64
  { 272,	4,	1,	20,	0,	"MOVZ_I64_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo72 },  // Inst #272 = MOVZ_I64_S
  { 273,	4,	1,	20,	0,	"MOVZ_I_D32", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo73 },  // Inst #273 = MOVZ_I_D32
  { 274,	4,	1,	20,	0,	"MOVZ_I_D64", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo74 },  // Inst #274 = MOVZ_I_D64
  { 275,	4,	1,	20,	0,	"MOVZ_I_I", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo75 },  // Inst #275 = MOVZ_I_I
  { 276,	4,	1,	20,	0,	"MOVZ_I_I64", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo76 },  // Inst #276 = MOVZ_I_I64
  { 277,	4,	1,	20,	0,	"MOVZ_I_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo77 },  // Inst #277 = MOVZ_I_S
  { 278,	2,	0,	15,	0,	"MSUB", 0, 0x1ULL, ImplicitList7, ImplicitList7, OperandInfo29 },  // Inst #278 = MSUB
  { 279,	2,	0,	15,	0,	"MSUBU", 0, 0x1ULL, ImplicitList7, ImplicitList7, OperandInfo29 },  // Inst #279 = MSUBU
  { 280,	2,	1,	20,	0,	"MTC1", 0|(1<<MCID::Bitcast), 0x4ULL, NULL, NULL, OperandInfo78 },  // Inst #280 = MTC1
  { 281,	1,	0,	13,	0,	"MTHI", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList8, OperandInfo30 },  // Inst #281 = MTHI
  { 282,	1,	0,	13,	0,	"MTHI64", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList9, OperandInfo52 },  // Inst #282 = MTHI64
  { 283,	1,	0,	13,	0,	"MTLO", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList10, OperandInfo30 },  // Inst #283 = MTLO
  { 284,	1,	0,	13,	0,	"MTLO64", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList11, OperandInfo52 },  // Inst #284 = MTLO64
  { 285,	3,	1,	15,	0,	"MUL", 0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo8 },  // Inst #285 = MUL
  { 286,	2,	0,	15,	0,	"MULT", 0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList7, OperandInfo29 },  // Inst #286 = MULT
  { 287,	2,	0,	15,	0,	"MULTu", 0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList7, OperandInfo29 },  // Inst #287 = MULTu
  { 288,	0,	0,	17,	0,	"NOAT", 0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #288 = NOAT
  { 289,	0,	0,	17,	0,	"NOMACRO", 0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #289 = NOMACRO
  { 290,	0,	0,	0,	0,	"NOP", 0|(1<<MCID::UnmodeledSideEffects), 0x3ULL, NULL, NULL, 0 },  // Inst #290 = NOP
  { 291,	3,	1,	0,	0,	"NOR", 0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo8 },  // Inst #291 = NOR
  { 292,	3,	1,	0,	0,	"NOR64", 0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #292 = NOR64
  { 293,	0,	0,	17,	0,	"NOREORDER", 0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #293 = NOREORDER
  { 294,	3,	1,	0,	0,	"OR", 0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo8 },  // Inst #294 = OR
  { 295,	3,	1,	0,	0,	"OR64", 0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #295 = OR64
  { 296,	3,	1,	0,	0,	"ORi", 0, 0x2ULL, NULL, NULL, OperandInfo9 },  // Inst #296 = ORi
  { 297,	3,	1,	0,	0,	"ORi64", 0, 0x2ULL, NULL, NULL, OperandInfo33 },  // Inst #297 = ORi64
  { 298,	2,	1,	0,	0,	"RDHWR", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo79 },  // Inst #298 = RDHWR
  { 299,	2,	1,	0,	0,	"RDHWR64", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo80 },  // Inst #299 = RDHWR64
  { 300,	0,	0,	17,	0,	"REORDER", 0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #300 = REORDER
  { 301,	1,	0,	1,	0,	"RET", 0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x1ULL, NULL, NULL, OperandInfo30 },  // Inst #301 = RET
  { 302,	3,	1,	0,	0,	"ROTR", 0, 0x1ULL, NULL, NULL, OperandInfo9 },  // Inst #302 = ROTR
  { 303,	3,	1,	0,	0,	"ROTRV", 0, 0x1ULL, NULL, NULL, OperandInfo8 },  // Inst #303 = ROTRV
  { 304,	2,	1,	20,	0,	"ROUND_L_D64", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo23 },  // Inst #304 = ROUND_L_D64
  { 305,	2,	1,	20,	0,	"ROUND_L_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo24 },  // Inst #305 = ROUND_L_S
  { 306,	2,	1,	20,	0,	"ROUND_W_D32", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo25 },  // Inst #306 = ROUND_W_D32
  { 307,	2,	1,	20,	0,	"ROUND_W_D64", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo26 },  // Inst #307 = ROUND_W_D64
  { 308,	2,	1,	20,	0,	"ROUND_W_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo27 },  // Inst #308 = ROUND_W_S
  { 309,	3,	0,	20,	0,	"SB", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #309 = SB
  { 310,	3,	0,	20,	0,	"SB64", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #310 = SB64
  { 311,	3,	0,	20,	0,	"SB64_P8", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #311 = SB64_P8
  { 312,	3,	0,	20,	0,	"SB_P8", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #312 = SB_P8
  { 313,	4,	1,	20,	0,	"SC", 0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo81 },  // Inst #313 = SC
  { 314,	4,	1,	20,	0,	"SCD", 0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo82 },  // Inst #314 = SCD
  { 315,	4,	1,	20,	0,	"SCD_P8", 0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo83 },  // Inst #315 = SCD_P8
  { 316,	4,	1,	20,	0,	"SC_P8", 0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo84 },  // Inst #316 = SC_P8
  { 317,	3,	0,	20,	0,	"SD", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #317 = SD
  { 318,	3,	0,	20,	0,	"SDC1", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo55 },  // Inst #318 = SDC1
  { 319,	3,	0,	20,	0,	"SDC164", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo56 },  // Inst #319 = SDC164
  { 320,	3,	0,	20,	0,	"SDC164_P8", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo57 },  // Inst #320 = SDC164_P8
  { 321,	2,	0,	14,	0,	"SDIV", 0, 0x1ULL, NULL, ImplicitList7, OperandInfo29 },  // Inst #321 = SDIV
  { 322,	3,	0,	20,	0,	"SD_P8", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #322 = SD_P8
  { 323,	2,	1,	20,	0,	"SEB", 0, 0x1ULL, NULL, NULL, OperandInfo29 },  // Inst #323 = SEB
  { 324,	2,	1,	20,	0,	"SEH", 0, 0x1ULL, NULL, NULL, OperandInfo29 },  // Inst #324 = SEH
  { 325,	3,	0,	20,	0,	"SH", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #325 = SH
  { 326,	3,	0,	20,	0,	"SH64", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #326 = SH64
  { 327,	3,	0,	20,	0,	"SH64_P8", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #327 = SH64_P8
  { 328,	3,	0,	20,	0,	"SH_P8", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #328 = SH_P8
  { 329,	3,	1,	0,	0,	"SLL", 0, 0x1ULL, NULL, NULL, OperandInfo9 },  // Inst #329 = SLL
  { 330,	2,	1,	0,	0,	"SLL64_32", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo39 },  // Inst #330 = SLL64_32
  { 331,	2,	1,	0,	0,	"SLL64_64", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo34 },  // Inst #331 = SLL64_64
  { 332,	3,	1,	0,	0,	"SLLV", 0, 0x1ULL, NULL, NULL, OperandInfo8 },  // Inst #332 = SLLV
  { 333,	3,	1,	0,	0,	"SLT", 0, 0x1ULL, NULL, NULL, OperandInfo8 },  // Inst #333 = SLT
  { 334,	3,	1,	0,	0,	"SLT64", 0, 0x1ULL, NULL, NULL, OperandInfo85 },  // Inst #334 = SLT64
  { 335,	3,	1,	0,	0,	"SLTi", 0, 0x2ULL, NULL, NULL, OperandInfo9 },  // Inst #335 = SLTi
  { 336,	3,	1,	0,	0,	"SLTi64", 0, 0x2ULL, NULL, NULL, OperandInfo86 },  // Inst #336 = SLTi64
  { 337,	3,	1,	0,	0,	"SLTiu", 0, 0x2ULL, NULL, NULL, OperandInfo9 },  // Inst #337 = SLTiu
  { 338,	3,	1,	0,	0,	"SLTiu64", 0, 0x2ULL, NULL, NULL, OperandInfo86 },  // Inst #338 = SLTiu64
  { 339,	3,	1,	0,	0,	"SLTu", 0, 0x1ULL, NULL, NULL, OperandInfo8 },  // Inst #339 = SLTu
  { 340,	3,	1,	0,	0,	"SLTu64", 0, 0x1ULL, NULL, NULL, OperandInfo85 },  // Inst #340 = SLTu64
  { 341,	3,	1,	0,	0,	"SRA", 0, 0x1ULL, NULL, NULL, OperandInfo9 },  // Inst #341 = SRA
  { 342,	3,	1,	0,	0,	"SRAV", 0, 0x1ULL, NULL, NULL, OperandInfo8 },  // Inst #342 = SRAV
  { 343,	3,	1,	0,	0,	"SRL", 0, 0x1ULL, NULL, NULL, OperandInfo9 },  // Inst #343 = SRL
  { 344,	3,	1,	0,	0,	"SRLV", 0, 0x1ULL, NULL, NULL, OperandInfo8 },  // Inst #344 = SRLV
  { 345,	3,	1,	0,	0,	"SUB", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo8 },  // Inst #345 = SUB
  { 346,	3,	1,	0,	0,	"SUBu", 0, 0x1ULL, NULL, NULL, OperandInfo8 },  // Inst #346 = SUBu
  { 347,	3,	0,	20,	0,	"SW", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #347 = SW
  { 348,	3,	0,	20,	0,	"SW64", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #348 = SW64
  { 349,	3,	0,	20,	0,	"SW64_P8", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #349 = SW64_P8
  { 350,	3,	0,	20,	0,	"SWC1", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo60 },  // Inst #350 = SWC1
  { 351,	3,	0,	20,	0,	"SWC1_P8", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo61 },  // Inst #351 = SWC1_P8
  { 352,	3,	0,	20,	0,	"SWL", 0|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #352 = SWL
  { 353,	3,	0,	20,	0,	"SWL_P8", 0|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #353 = SWL_P8
  { 354,	3,	0,	20,	0,	"SWR", 0|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #354 = SWR
  { 355,	3,	0,	20,	0,	"SWR_P8", 0|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #355 = SWR_P8
  { 356,	3,	0,	20,	0,	"SW_P8", 0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #356 = SW_P8
  { 357,	1,	0,	20,	0,	"SYNC", 0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo2 },  // Inst #357 = SYNC
  { 358,	2,	1,	20,	0,	"TRUNC_L_D64", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo23 },  // Inst #358 = TRUNC_L_D64
  { 359,	2,	1,	20,	0,	"TRUNC_L_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo24 },  // Inst #359 = TRUNC_L_S
  { 360,	2,	1,	20,	0,	"TRUNC_W_D32", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo25 },  // Inst #360 = TRUNC_W_D32
  { 361,	2,	1,	20,	0,	"TRUNC_W_D64", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo26 },  // Inst #361 = TRUNC_W_D64
  { 362,	2,	1,	20,	0,	"TRUNC_W_S", 0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo27 },  // Inst #362 = TRUNC_W_S
  { 363,	2,	0,	14,	0,	"UDIV", 0, 0x1ULL, NULL, ImplicitList7, OperandInfo29 },  // Inst #363 = UDIV
  { 364,	3,	1,	20,	0,	"ULD", 0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #364 = ULD
  { 365,	3,	1,	20,	0,	"ULD_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #365 = ULD_P8
  { 366,	3,	1,	20,	0,	"ULH", 0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #366 = ULH
  { 367,	3,	1,	20,	0,	"ULH64", 0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #367 = ULH64
  { 368,	3,	1,	20,	0,	"ULH64_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #368 = ULH64_P8
  { 369,	3,	1,	20,	0,	"ULH_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #369 = ULH_P8
  { 370,	3,	1,	20,	0,	"ULHu", 0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #370 = ULHu
  { 371,	3,	1,	20,	0,	"ULHu64", 0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #371 = ULHu64
  { 372,	3,	1,	20,	0,	"ULHu64_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #372 = ULHu64_P8
  { 373,	3,	1,	20,	0,	"ULHu_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #373 = ULHu_P8
  { 374,	3,	1,	20,	0,	"ULW", 0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #374 = ULW
  { 375,	3,	1,	20,	0,	"ULW64", 0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #375 = ULW64
  { 376,	3,	1,	20,	0,	"ULW64_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #376 = ULW64_P8
  { 377,	3,	1,	20,	0,	"ULW_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #377 = ULW_P8
  { 378,	3,	0,	20,	0,	"USD", 0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #378 = USD
  { 379,	3,	0,	20,	0,	"USD_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #379 = USD_P8
  { 380,	3,	0,	20,	0,	"USH", 0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #380 = USH
  { 381,	3,	0,	20,	0,	"USH64", 0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #381 = USH64
  { 382,	3,	0,	20,	0,	"USH64_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #382 = USH64_P8
  { 383,	3,	0,	20,	0,	"USH_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #383 = USH_P8
  { 384,	3,	0,	20,	0,	"USW", 0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #384 = USW
  { 385,	3,	0,	20,	0,	"USW64", 0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo53 },  // Inst #385 = USW64
  { 386,	3,	0,	20,	0,	"USW64_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo41 },  // Inst #386 = USW64_P8
  { 387,	3,	0,	20,	0,	"USW_P8", 0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo54 },  // Inst #387 = USW_P8
  { 388,	2,	1,	20,	0,	"WSBH", 0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo29 },  // Inst #388 = WSBH
  { 389,	3,	1,	0,	0,	"XOR", 0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo8 },  // Inst #389 = XOR
  { 390,	3,	1,	0,	0,	"XOR64", 0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #390 = XOR64
  { 391,	3,	1,	0,	0,	"XORi", 0, 0x2ULL, NULL, NULL, OperandInfo9 },  // Inst #391 = XORi
  { 392,	3,	1,	0,	0,	"XORi64", 0, 0x2ULL, NULL, NULL, OperandInfo33 },  // Inst #392 = XORi64
};

static inline void InitMipsMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(MipsInsts, 393);
}

} // End llvm namespace 
#endif // GET_INSTRINFO_MC_DESC


#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct MipsGenInstrInfo : public TargetInstrInfoImpl {
  explicit MipsGenInstrInfo(int SO = -1, int DO = -1);
};
} // End llvm namespace 
#endif // GET_INSTRINFO_HEADER


#ifdef GET_INSTRINFO_CTOR
#undef GET_INSTRINFO_CTOR
namespace llvm {
extern const MCInstrDesc MipsInsts[];
MipsGenInstrInfo::MipsGenInstrInfo(int SO, int DO)
  : TargetInstrInfoImpl(SO, DO) {
  InitMCInstrInfo(MipsInsts, 393);
}
} // End llvm namespace 
#endif // GET_INSTRINFO_CTOR

