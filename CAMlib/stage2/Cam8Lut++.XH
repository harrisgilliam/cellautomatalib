#ifndef _CAM8LUT_H
#define _CAM8LUT_H

#include <CaLib++.H>
#include <CaLut++.H>
#include <Cam8Interface++.H>

extern "C" {
#include <sys/types.h>
}


/*****************************************************************************/
/********************************* DEFINES ***********************************/
/*****************************************************************************/



/*****************************************************************************/
/******************************** TEMPLATES **********************************/
/*****************************************************************************/



/*****************************************************************************/
/*************************** CLASSES & TYPEDEFS ******************************/
/*****************************************************************************/
typedef u_int16_t (*CAM8LUTFUNC)(u_int16_t);


class Cam8Lut : public CaLut {
public:
	Cam8Lut(void);
	Cam8Lut(CAM8INTERFACE);
	virtual ~Cam8Lut(void);

	void generate(CAM8LUTFUNC);

	inline u_int16_t & operator[](u_int16_t);
};


/*****************************************************************************/
/********************************* INLINES ***********************************/
/*****************************************************************************/
inline u_int16_t &  Cam8Lut::operator[](u_int16_t idx)
{
	return ((u_int16_t *) buf)[idx];
}


/*****************************************************************************/
/******************************* PROTOTYPES **********************************/
/*****************************************************************************/



/*****************************************************************************/
/********************************* GLOBALS ***********************************/
/*****************************************************************************/

#endif
