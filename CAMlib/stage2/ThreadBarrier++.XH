#ifndef _THREADBARRIER_H
#define _THREADBARRIER_H

#include <Poco/RWLock.h>
#include <Poco/Event.h>


/*****************************************************************************/
/********************************* DEFINES ***********************************/
/*****************************************************************************/



/*****************************************************************************/
/******************************** TEMPLATES **********************************/
/*****************************************************************************/



/*****************************************************************************/
/*************************** CLASSES & TYPEDEFS ******************************/
/*****************************************************************************/

class ThreadBarrier {
public:

	ThreadBarrier();
	ThreadBarrier(int cnt);
	virtual ~ThreadBarrier();

	void setCount(int cnt);
	void wait();
	void reset();
	int getCount(void);

protected:

	int count;
	int curCount;
	bool needsReset;
	Poco::RWLock cntLock;
	Poco::Event unlockEvent;
};
typedef class ThreadBarrier *THREADBARRIER;



/*****************************************************************************/
/********************************* INLINES ***********************************/
/*****************************************************************************/



/*****************************************************************************/
/******************************* PROTOTYPES **********************************/
/*****************************************************************************/



/*****************************************************************************/
/********************************* GLOBALS ***********************************/
/*****************************************************************************/

#endif
